[
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "product",
          "property": "media"
        },
        {
          "object": "product",
          "property": "featured_media"
        },
        {
          "object": "variant",
          "property": "featured_media"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "The `media` object can be returned by the [`product.media` array](/docs/api/liquid/objects/product#product-media) or a\n[`file_reference` metafield](/apps/metafields/types).\n\nYou can use [media filters](/docs/api/liquid/filters/media-filters) to generate URLs and media displays. To learn about how\nto use media in your theme, refer to [Support product media](/themes/product-merchandising/media/support-media).\n\n&gt; Note:\n&gt; Each media type has unique properties in addition to the general `media` properties. To learn about these\n&gt; additional properties, refer to the reference for each type.",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ID of the media.",
        "name": "id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If the source is a [`file_reference` metafield](/apps/metafields/types), then `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The position of the media in the [`product.media` array](/docs/api/liquid/objects/product#product-media).",
        "name": "position"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [
          {
            "name": "Filter for media of a specific type",
            "description": "You can use the `media_type` property with the [`where` filter](/docs/api/liquid/filters/where) to filter the [`product.media` array](/docs/api/liquid/objects/product#product-media) for all media of a desired type.\n",
            "syntax": "",
            "path": "/products/snake-venom",
            "raw_liquid": "{% assign images = product.media | where: 'media_type', 'image' %}\n\n{% for image in images %}\n  {{- image | image_url: width: 300 | image_tag }}\n{% endfor %}",
            "parameter": false,
            "display_type": "text",
            "show_data_tab": true
          }
        ],
        "return_type": [
          {
            "type": "string",
            "name": "image",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "model",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "video",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "external_video",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The media type.",
        "name": "media_type"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; Preview images don't have an ID attribute.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "image",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "A preview image of the media.",
        "name": "preview_image"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The alt text of the media.",
        "name": "alt"
      }
    ],
    "summary": "An abstract media object that can represent the following object types:\n\n- [`image`](/docs/api/liquid/objects/image)\n- [`model`](/docs/api/liquid/objects/model)\n- [`video`](/docs/api/liquid/objects/video)\n- [`external_video`](/docs/api/liquid/objects/external_video)",
    "name": "media",
    "examples": [

    ],
    "json_data": {
      "path": "/products/dandelion-milk",
      "handle": "product.media[0]",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "checkout",
          "property": "billing_address"
        },
        {
          "object": "checkout",
          "property": "shipping_address"
        },
        {
          "object": "customer",
          "property": "addresses"
        },
        {
          "object": "customer",
          "property": "default_address"
        },
        {
          "object": "location",
          "property": "address"
        },
        {
          "object": "order",
          "property": "billing_address"
        },
        {
          "object": "order",
          "property": "shipping_address"
        },
        {
          "object": "shop",
          "property": "address"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "&gt; Tip:\n&gt; Use the [`format_address` filter](/docs/api/liquid/filters/format_address) to output an address according to its locale.",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If no company is specified, then `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The company of the address.",
        "name": "company"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If no phone number is specified, then `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The phone number of the address.",
        "name": "phone"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The first name of the address.",
        "name": "first_name"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The last name of the address.",
        "name": "last_name"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "A combination of the first and last names of the address.",
        "name": "name"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; This only applies to customer addresses.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The relative URL for the address.",
        "name": "url"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "A summary of the address, including the following properties:\n\n- First and last name\n- First and second lines\n- City\n- Province\n- Country",
        "name": "summary"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ID of the address.",
        "name": "id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The first line of the address.",
        "name": "address1"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If no second line is specified, then `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The second line of the address.",
        "name": "address2"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The city of the address.",
        "name": "city"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The zip or postal code of the address.",
        "name": "zip"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The country of the address in [ISO 3166-1 (alpha 2) format](https://www.iso.org/glossary-for-iso-3166.html).",
        "name": "country_code"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; The value doesn't include the preceding [ISO 3166-1](https://www.iso.org/glossary-for-iso-3166.html) country code.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The province of the address in [ISO 3166-2 (alpha 2) format](https://www.iso.org/glossary-for-iso-3166.html).",
        "name": "province_code"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "country",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The country of the address.",
        "name": "country"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "A combination of the first and second lines of the address.",
        "name": "street"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The province of the address.",
        "name": "province"
      }
    ],
    "summary": "An address, such as a customer address or order shipping address.",
    "name": "address",
    "examples": [

    ],
    "json_data": {
      "path": "/",
      "handle": "shop.address",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": true,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [

    ],
    "summary": "All of the [collections](/docs/api/liquid/objects/collection) on a store.",
    "name": "collections",
    "examples": [
      {
        "name": "Iterate over the collections",
        "description": "You can iterate over `collections` to build a collection list.\n",
        "syntax": "",
        "path": "/",
        "raw_liquid": "{% for collection in collections %}\n  {{- collection.title | link_to: collection.url }}\n{% endfor %}",
        "parameter": false,
        "display_type": "text",
        "show_data_tab": true
      },
      {
        "name": "Access a specific collection",
        "description": "You can use `collections` to access a collection by its [handle](/docs/api/liquid/basics#handles).\n",
        "syntax": "",
        "path": "/",
        "raw_liquid": "{% for product in collections['sale-potions'].products %}\n  {{- product.title | link_to: product.url }}\n{% endfor %}",
        "parameter": false,
        "display_type": "text",
        "show_data_tab": true
      }
    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": ""
    },
    "return_type": [
      {
        "type": "array",
        "name": "",
        "description": "",
        "array_value": "collection"
      }
    ]
  },
  {
    "access": {
      "global": true,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [

    ],
    "summary": "All of the [pages](/docs/api/liquid/objects/page) on a store.",
    "name": "pages",
    "examples": [
      {
        "name": "",
        "description": "You can access a specific page through the `pages` object using the page's [handle](/docs/api/liquid/basics#handles).\n",
        "syntax": "",
        "path": "/",
        "raw_liquid": "{{ pages.contact.title }}\n{{ pages['about-us'].title }}",
        "parameter": false,
        "display_type": "text",
        "show_data_tab": true
      },
      {
        "name": "Paginate the `pages` object",
        "description": "You can [paginate](/docs/api/liquid/tags/paginate) the `pages` object, allowing you to iterate over up to 50 pages at a time.\n",
        "syntax": "",
        "path": "/",
        "raw_liquid": "{% paginate pages by 2 -%}\n  {% for page in pages -%}\n    {{ page.title | link_to: page.url }}\n  {%- endfor %}\n\n  {{- paginate | default_pagination }}\n{%- endpaginate %}",
        "parameter": false,
        "display_type": "text",
        "show_data_tab": true
      }
    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": ""
    },
    "return_type": [
      {
        "type": "array",
        "name": "",
        "description": "",
        "array_value": "page"
      }
    ]
  },
  {
    "access": {
      "global": true,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "&gt; Note:\n&gt; The `all_products` object has a limit of 20 unique handles per page. If you want more than 20 products,\nthen consider using a collection instead.",
    "properties": [

    ],
    "summary": "All of the products on a store.",
    "name": "all_products",
    "examples": [
      {
        "name": "",
        "description": "You can use `all_products` to access a product by its [handle](/docs/api/liquid/basics#handles). If the product isn't found, then `empty` is returned.",
        "syntax": "",
        "path": "/",
        "raw_liquid": "{{ all_products['love-potion'].title }}",
        "parameter": false,
        "display_type": "text",
        "show_data_tab": true
      }
    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": ""
    },
    "return_type": [
      {
        "type": "array",
        "name": "",
        "description": "",
        "array_value": "product"
      }
    ]
  },
  {
    "access": {
      "global": false,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [

        ],
        "summary": "The [metafields](/docs/api/liquid/objects/metafield) that are [owned by the app](/apps/metafields/app-owned).",
        "name": "metafields"
      }
    ],
    "summary": "An app. This object is usually used to access app-specific information for use with [theme app extensions](/apps/online-store/theme-app-extensions).",
    "name": "app",
    "examples": [

    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "cart",
          "property": "discounts"
        },
        {
          "object": "line_item",
          "property": "discounts"
        },
        {
          "object": "order",
          "property": "discounts"
        },
        {
          "object": "checkout",
          "property": "discount"
        }
      ],
      "template": [

      ]
    },
    "deprecated": true,
    "deprecation_reason": "Deprecated because not all discount types and details are captured.\n\nThe `discount` object has been replaced by the [`discount_allocation`](/docs/api/liquid/objects/discount_allocation) and\n[`discount_application`](/docs/api/liquid/objects/discount_application) objects.",
    "description": "",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; This is the same value as [`discount.total_amount`](/docs/api/liquid/objects/discount#discount-total_amount).\n\nThe value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted amount.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The amount of the discount in the currency's subunit.",
        "name": "amount"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; This is the same value as [`discount.amount`](/docs/api/liquid/objects/discount#discount-amount).\n\nThe value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted amount.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The amount of the discount in the currency's subunit.",
        "name": "total_amount"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; This is the same value as [`discount.title`](/docs/api/liquid/objects/discount#discount-title).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The customer-facing name of the discount.",
        "name": "code"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; This is the same value as [`discount.code`](/docs/api/liquid/objects/discount#discount-code).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The customer-facing name of the discount.",
        "name": "title"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "FixedAmountDiscount",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "PercentageDiscount",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "ShippingDiscount",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The type of the discount.",
        "name": "type"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; This is the same value as [`discount.total_savings`](/docs/api/liquid/objects/discount#discount-total_savings).\nThe value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted amount.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The amount of the discount as a negative value, in the currency's subunit.",
        "name": "savings"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; This is the same value as [`discount.savings`](/docs/api/liquid/objects/discount#discount-savings).\nThe value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted amount.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The amount of the discount as a negative value, in the currency's subunit.",
        "name": "total_savings"
      }
    ],
    "summary": "A discount applied to a cart, line item, or order.",
    "name": "discount",
    "examples": [

    ],
    "json_data": {
      "path": "/",
      "handle": "customer.orders[2].discounts[0]",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": true,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [

    ],
    "summary": "All of the articles across the blogs in the store.",
    "name": "articles",
    "examples": [
      {
        "name": "",
        "description": "You can use `articles` to access an article by its [handle](/docs/api/liquid/basics#handles).\n",
        "syntax": "",
        "path": "/",
        "raw_liquid": "{% assign article = articles['potion-notions/new-potions-for-spring'] %}\n{{ article.title | link_to: article.url }}",
        "parameter": false,
        "display_type": "text",
        "show_data_tab": true
      }
    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": ""
    },
    "return_type": [
      {
        "type": "array",
        "name": "",
        "description": "",
        "array_value": "article"
      }
    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "articles",
          "property": ""
        },
        {
          "object": "blog",
          "property": "articles"
        }
      ],
      "template": [
        "article"
      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "image",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The featured image for the article.",
        "name": "image"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The full name of the author of the article.",
        "name": "author"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; To learn about how to create metafields, refer to [Create and manage metafields](/apps/metafields/manage) or visit\n&gt; the [Shopify Help Center](https://help.shopify.com/manual/metafields).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "untyped",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [metafields](/docs/api/liquid/objects/metafield) applied to the article.",
        "name": "metafields"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [handle](/docs/api/liquid/basics#handles) of the article.",
        "name": "handle"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ID of the article.",
        "name": "id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The title of the article.",
        "name": "title"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The relative URL of the article.",
        "name": "url"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The name doesn't include the `article.` prefix, or the file extension (`.json` or `.liquid`).\n\n If a custom template isn't assigned to the article, then `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The name of the [custom template](/themes/architecture/templates#alternate-templates) assigned to the article.",
        "name": "template_suffix"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; Use the [`date` filter](/docs/api/liquid/filters/date) to format the timestamp.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "A timestamp for when the article was created.",
        "name": "created_at"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; Use the [`date` filter](/docs/api/liquid/filters/date) to format the timestamp.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "A timestamp for when the article was published.",
        "name": "published_at"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; Use the [`date` filter](/docs/api/liquid/filters/date) to format the timestamp.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "A timestamp for when the article was updated.",
        "name": "updated_at"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the blog that the article belongs to is set to [moderate comments](https://help.shopify.com/manual/online-store/blogs/managing-comments).\nReturns `false` if not.",
        "name": "moderated?"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "Returns an empty array if comments are disabled.\n\n&gt; Tip:\n&gt; Use the [paginate](/docs/api/liquid/tags/paginate) tag to choose how many comments to show at once, up to a limit of 50.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "comment"
          }
        ],
        "summary": "The published comments for the article.",
        "name": "comments"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The number of published comments for the article.",
        "name": "comments_count"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if comments are enabled. Returns `false` if not.",
        "name": "comments_enabled?"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The relative URL where POST requests are sent when creating new comments.",
        "name": "comment_post_url"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The content of the article.",
        "name": "content"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The excerpt of the article.",
        "name": "excerpt"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns the article [excerpt](/docs/api/liquid/objects/article#article-excerpt) if it exists. Returns the article\n[content](/docs/api/liquid/objects/article#article-content) if no excerpt exists.",
        "name": "excerpt_or_content"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [
          {
            "name": "Show the total tag count",
            "description": "When looping through `article.tags`, you can print how many times a tag is used with `tag.total_count`. This number shows visitors how many blog posts have been tagged with a particular tag.\n",
            "syntax": "",
            "path": "/blogs/potion-notions/how-to-tell-if-you-have-run-out-of-invisibility-potion",
            "raw_liquid": "{% for tag in article.tags -%}\n  {{ tag }} ({{ tag.total_count }})\n{%- endfor %}",
            "parameter": false,
            "display_type": "text",
            "show_data_tab": true
          }
        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "string"
          }
        ],
        "summary": "The tags applied to the article.",
        "name": "tags"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "user",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The user associated with the author of the article.",
        "name": "user"
      }
    ],
    "summary": "An article, or [blog post](https://help.shopify.com/manual/online-store/blogs/writing-blogs), in a blog.",
    "name": "article",
    "examples": [

    ],
    "json_data": {
      "path": "/blogs/potion-notions/how-to-tell-if-you-have-run-out-of-invisibility-potion",
      "handle": "article",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "section",
          "property": "blocks"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "Sections and blocks are reusable modules of content that make up [templates](/themes/architecture/templates).\n\nTo learn more about using blocks, refer to the [Shopify Partners blog](https://www.shopify.com/partners/blog/theme-blocks).",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The ID is dynamically generated by Shopify.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ID of the block.",
        "name": "id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "To learn about how to access settings, refer to [Access settings](/themes/architecture/settings#access-settings). To learn which input settings can be applied to the `type` property within settings, refer to [Input settings](/themes/architecture/settings/input-settings).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "untyped",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [settings](/themes/architecture/sections/section-schema#blocks) of the block.",
        "name": "settings"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The type is a free-form string that's defined in the [block's schema](/themes/architecture/sections/section-schema#blocks).\nYou can use the type as an identifier. For example, you might display different markup based on the block type.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The type of the block.",
        "name": "type"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The theme editor's [JavaScript API](/themes/architecture/sections/integrate-sections-with-the-theme-editor#section-and-block-javascript-events)\nuses the data attributes to identify blocks and listen for events. No value for `block.shopify_attributes` is returned\noutside the theme editor.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The data attributes for the block for use in the theme editor.",
        "name": "shopify_attributes"
      }
    ],
    "summary": "The content and settings of a [section block](/themes/architecture/sections/section-schema#blocks).",
    "name": "block",
    "examples": [

    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": "{\"id\":\"column1\",\"settings\":\"array\",\"shopify_attributes\":\"data-shopify-editor-block=\\\"{\\\"id\\\":\\\"column1\\\",\\\"type\\\":\\\"column\\\"}\\\"\",\"type\":\"column\"}"
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": true,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [

    ],
    "summary": "All of the blogs in the store.",
    "name": "blogs",
    "examples": [
      {
        "name": "",
        "description": "You can use `blogs` to access a blog by its [handle](/docs/api/liquid/basics#handles).\n",
        "syntax": "",
        "path": "/",
        "raw_liquid": "{% for article in blogs.potion-notions.articles %}\n  {{- article.title | link_to: article.url }}\n{% endfor %}",
        "parameter": false,
        "display_type": "text",
        "show_data_tab": true
      }
    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": ""
    },
    "return_type": [
      {
        "type": "array",
        "name": "",
        "description": "",
        "array_value": "blog"
      }
    ]
  },
  {
    "access": {
      "global": false,
      "parents": [

      ],
      "template": [
        "blog",
        "article"
      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ID of the blog.",
        "name": "id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The title of the blog.",
        "name": "title"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [handle](/docs/api/liquid/basics#handles) of the blog.",
        "name": "handle"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; Use the [paginate](/docs/api/liquid/tags/paginate) tag to choose how many articles to show per page, up to a limit of 50.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "article"
          }
        ],
        "summary": "The articles in the blog.",
        "name": "articles"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The total number of articles in the blog. This total doesn't include hidden articles.",
        "name": "articles_count"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; To learn about how to create metafields, refer to [Create and manage metafields](/apps/metafields/manage) or visit\n&gt; the [Shopify Help Center](https://help.shopify.com/manual/metafields).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "metafield"
          }
        ],
        "summary": "The [metafields](/docs/api/liquid/objects/metafield) applied to the blog.",
        "name": "metafields"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The relative URL of the blog.",
        "name": "url"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The name doesn't include the `blog.` prefix, or the file extension (`.json` or `.liquid`).\n\n If a custom template isn't assigned to the blog, then `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The name of the [custom template](/themes/architecture/templates#alternate-templates) assigned to the blog.",
        "name": "template_suffix"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "This includes tags of articles that aren't in the current pagination view.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "string"
          }
        ],
        "summary": "All of the tags on the articles in the blog.",
        "name": "all_tags"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "string"
          }
        ],
        "summary": "A list of all of the tags on all of the articles in the blog.\n\nUnlike [`blog.all_tags`](/docs/api/liquid/objects/blog#blog-all_tags), this property only returns tags of articles that are in the\nfiltered view.",
        "name": "tags"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if comments are enabled for the blog. Returns `false` if not.",
        "name": "comments_enabled?"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the blog is set to\n[moderate comments](https://help.shopify.com/manual/online-store/blogs/managing-comments). Returns `false` if not.",
        "name": "moderated?"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "Returns `nil` if there is no next article.\n\nThis property can be used on the [article page](/themes/architecture/templates/article) to output `next` links.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "article",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The next (older) article in the blog.",
        "name": "next_article"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "Returns `nil` if there is no previous article.\n\nThis property can be used on the [article page](/themes/architecture/templates/article) to output `previous` links.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "article",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The previous (newer) article in the blog.",
        "name": "previous_article"
      }
    ],
    "summary": "Information about a specific [blog](https://help.shopify.com/manual/online-store/blogs/adding-a-blog) in the store.",
    "name": "blog",
    "examples": [

    ],
    "json_data": {
      "path": "/blogs/potion-notions/new-potions-for-spring",
      "handle": "blog",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "shop",
          "property": "brand"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The slogan for the brand.",
        "name": "slogan"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "A short description of the brand.",
        "name": "short_description"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "image",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The square logo for the brand, resized to 32x32 px.",
        "name": "favicon_url"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "image",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The square logo for the brand, resized to 32x32 px.",
        "name": "cover_image"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "image",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The default logo for the brand.",
        "name": "logo"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "image",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The square logo for the brand.",
        "name": "square_logo"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "To learn about how to access brand colors, refer to [`brand_color`](/docs/api/liquid/objects/brand_color).",
        "examples": [

        ],
        "return_type": [

        ],
        "summary": "The brand's colors.",
        "name": "colors"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "Social links are stored in [metafields](/docs/api/liquid/objects/metafield), and can be accessed using the syntax `shop.brand.metafields.social_links.&lt;platform&gt;.value`.\n\n| Platforms |\n| --- |\n| `facebook` |\n| `pinterest` |\n| `instagram` |\n| `tiktok` |\n| `tumblr` |\n| `snapchat` |\n| `vimeo` |",
        "examples": [
          {
            "name": "Access social links",
            "description": "",
            "syntax": "",
            "path": "/",
            "raw_liquid": "{{ shop.brand.metafields.social_links.twitter.value }}\n{{ shop.brand.metafields.social_links.youtube.value }}",
            "parameter": false,
            "display_type": "text",
            "show_data_tab": true
          }
        ],
        "return_type": [

        ],
        "summary": "The social links for the brand.",
        "name": "metafields"
      }
    ],
    "summary": "The [brand assets](https://help.shopify.com/manual/promoting-marketing/managing-brand-assets) for the store.",
    "name": "brand",
    "examples": [

    ],
    "json_data": {
      "path": "/",
      "handle": "shop.brand",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": true,
      "parents": [

      ],
      "template": [
        "cart"
      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if any of the products in the cart require shipping. Returns `false` if not.",
        "name": "requires_shipping"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "To learn more about capturing cart notes, refer to the [`cart` template](/themes/architecture/templates/cart#support-cart-notes-and-attributes).",
        "examples": [
          {
            "name": "Capture cart notes",
            "description": "To capture a cart note, include an HTML input such as a `&lt;textarea&gt;` with an attribute of `name=\"note\"` within the cart `&lt;form&gt;`.\n\n```liquid\n&lt;label&gt;Gift note:&lt;/label&gt;\n&lt;textarea name=\"note\"&gt;&lt;/textarea&gt;\n```\n\n&gt; Note:\n&gt; There can only be one instance of `{{ cart.note }}` on the cart page. If there are multiple instances,\n&gt; then the one that comes latest in the Document Object Model (DOM) will be submitted with the form.\n",
            "syntax": "",
            "path": "/cart",
            "raw_liquid": "",
            "parameter": false,
            "display_type": "text",
            "show_data_tab": true
          }
        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Additional information captured with the cart.",
        "name": "note"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The number of items in the cart.",
        "name": "item_count"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted amount.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The total price of all of the items in the cart in the currency's subunit, after discounts have been applied.",
        "name": "total_price"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted price.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The amount that the customer will be charged at checkout in the currency's subunit.",
        "name": "checkout_charge_amount"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted amount.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The total price of all of the items in the cart in the currency's subunit, before discounts have been applied.",
        "name": "original_total_price"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted amount.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The total price of all of the items in the cart in the currency's subunit, after any line item discounts. This\ndoesn't include taxes (unless taxes are included in the prices), cart discounts, or shipping costs.",
        "name": "items_subtotal_price"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted amount.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The total amount of all discounts (the amount saved) for the cart in the currency's subunit.",
        "name": "total_discount"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "line_item"
          }
        ],
        "summary": "The line items in the cart.",
        "name": "items"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if there are no items in the cart. Return's `false` if there are.",
        "name": "empty?"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If the store uses multi-currency, then this is the same as the customer's local\n(presentment) currency. Otherwise, it's the same as the store currency.\n\n&gt; Tip:\n&gt; You can output the store's available currencies using [`shop.enabled_currencies`](/docs/api/liquid/objects/shop#shop-enabled_currencies).",
        "examples": [

        ],
        "return_type": [

        ],
        "summary": "The currency of the cart.",
        "name": "currency"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; Use the [`weight_with_unit`](/docs/api/liquid/filters/weight_with_unit) filter to format the weight in\n&gt; [the store's format](https://www.shopify.com/admin/settings/general), or override the default unit.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The total weight of all of the items in the cart in grams.",
        "name": "total_weight"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [
          {
            "name": "Display discount applications",
            "description": "",
            "syntax": "",
            "path": "/cart",
            "raw_liquid": "{% for discount_application in cart.discount_applications %}\n  Discount name: {{ discount_application.title }}\n  Savings: -{{ discount_application.total_allocated_amount | money }}\n{% endfor %}",
            "parameter": false,
            "display_type": "text",
            "show_data_tab": true
          }
        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "discount_application"
          }
        ],
        "summary": "The discount applications for the cart.",
        "name": "discount_applications"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "To learn more about capturing cart attributes, refer to the [`cart` template](/themes/architecture/templates/cart#support-cart-notes-and-attributes).",
        "examples": [
          {
            "name": "Capture cart attributes",
            "description": "To capture a cart attribute, include an HTML input with an attribute of `name=\"attributes[attribute-name]\"` within the cart `&lt;form&gt;`.\n\n```liquid\n&lt;label&gt;What do you want engraved on your cauldron?&lt;/label&gt;\n&lt;input type=\"text\" name=\"attributes[cauldron-engraving]\" value=\"{{ cart.attributes.cauldron-engraving }}\" /&gt;\n```\n\n&gt; Tip:\n&gt; You can add a double underscore `__` prefix to an attribute name to make it private. Private attributes behave like other cart attributes, except that they can't be read from Liquid or the Ajax API.\n&gt; You can use them for data that doesn't affect the page rendering, which allows for more effective page caching.\n",
            "syntax": "",
            "path": "/cart",
            "raw_liquid": "",
            "parameter": false,
            "display_type": "text",
            "show_data_tab": true
          }
        ],
        "return_type": [
          {
            "type": "untyped",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Additional attributes entered by the customer with the cart.",
        "name": "attributes"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [
          {
            "name": "Display cart-level discount applications",
            "description": "",
            "syntax": "",
            "path": "/cart",
            "raw_liquid": "{% for discount_application in cart.cart_level_discount_applications %}\n  Discount name: {{ discount_application.title }}\n  Savings: -{{ discount_application.total_allocated_amount | money }}\n{% endfor %}",
            "parameter": false,
            "display_type": "text",
            "show_data_tab": true
          }
        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "discount_application"
          }
        ],
        "summary": "The cart-specific discount applications for the cart.",
        "name": "cart_level_discount_applications"
      },
      {
        "deprecated": true,
        "deprecation_reason": "Deprecated because not all discount types and details are available.\n\nThe `cart.discounts` property has been replaced by [`cart.discount_applications`](/docs/api/liquid/objects/cart#cart-discount_applications).",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "discount"
          }
        ],
        "summary": "The discounts applied to the cart.",
        "name": "discounts"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "This can be set in a store’s [tax settings](https://www.shopify.com/admin/settings/taxes).\n\nIf the store includes or exclude tax [based on the customer’s country](https://help.shopify.com/manual/taxes/location#include-or-exclude-tax-based-on-your-customers-country),\nthen the value reflects the tax requirements of the customer’s country.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if taxes are included in the prices of products in the cart. Returns `false` if not.",
        "name": "taxes_included"
      }
    ],
    "summary": "A customer’s cart.",
    "name": "cart",
    "examples": [

    ],
    "json_data": {
      "path": "/",
      "handle": "cart",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "collections",
          "property": ""
        }
      ],
      "template": [
        "collection"
      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; To learn about how to create metafields, refer to [Create and manage metafields](/apps/metafields/manage) or visit\n&gt; the [Shopify Help Center](https://help.shopify.com/manual/metafields).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "metafield"
          }
        ],
        "summary": "The [metafields](/docs/api/liquid/objects/metafield) applied to the collection.",
        "name": "metafields"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ID of the collection.",
        "name": "id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [handle](/docs/api/liquid/basics#handles) of the collection.",
        "name": "handle"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The title of the collection.",
        "name": "title"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The description of the collection.",
        "name": "description"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The name doesn't include the `collection.` prefix, or the file extension (`.json` or `.liquid`).\n\n If a custom template isn't assigned to the collection, then `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The name of the [custom template](/themes/architecture/templates#alternate-templates) assigned to the collection.",
        "name": "template_suffix"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "You can query for products from a certain vendor at the `/collections/vendors` URL\nwith a query parameter in the format of `?q=[vendor]`, where `[vendor]` is your desired product vendor.\n\n&gt; Tip:\n&gt; The query value is case-insensitive, so `apparelco` is equivalent to `ApparelCo` or `APPARELCO`.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The vendor name on a vendor collection page.",
        "name": "current_vendor"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "You can query for products of a certain type at the `/collections/types` URL\nwith a query parameter in the format of `?q=[type]`, where `[type]` is your desired product type.\n\n&gt; Tip:\n&gt; The query value is case-insensitive, so `shirts` is equivalent to `Shirts` or `SHIRTS`.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The product type on a product type collection page.",
        "name": "current_type"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The relative URL of the collection.",
        "name": "url"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; Use the [`date` filter](/docs/api/liquid/filters/date) to format the timestamp.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "A timestamp for when the collection was published.",
        "name": "published_at"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "This image is added on the collection's page in the Shopify admin.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "image",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The image for the collection.",
        "name": "image"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [
          {
            "name": "Output the sort options",
            "description": "",
            "syntax": "",
            "path": "/collections/all",
            "raw_liquid": "{%- assign sort_by = collection.sort_by | default: collection.default_sort_by -%}\n\n&lt;select&gt;\n{%- for option in collection.sort_options %}\n  &lt;option\n    value=\"{{ option.value }}\"\n    {%- if option.value == sort_by %}\n      selected=\"selected\"\n    {%- endif %}\n  &gt;\n    {{ option.name }}\n  &lt;/option&gt;\n{% endfor -%}\n&lt;/select&gt;",
            "parameter": false,
            "display_type": "text",
            "show_data_tab": true
          }
        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "sort_option"
          }
        ],
        "summary": "The available sorting options for the collection.",
        "name": "sort_options"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If there's no `sort_by` URL parameter, then the value is `nil`.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The sort order applied to the collection by the `sort_by` URL parameter.",
        "name": "sort_by"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "This is set on the collection's page in the Shopify admin.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "manual",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "best-selling",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "title-ascending",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "price-ascending",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "price-descending",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "created-ascending",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "created-descending",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The default sort order of the collection.",
        "name": "default_sort_by"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "This property can be used on the [product page](/themes/architecture/templates/product) to output `next` links.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "product",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The next product in the collection. Returns `nil` if there's no next product.",
        "name": "next_product"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "This property can be used on the [product page](/themes/architecture/templates/product) to output `previous` links.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "product",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The previous product in the collection. Returns `nil` if there's no previous product.",
        "name": "previous_product"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The total number of products in the current view of the collection.",
        "name": "products_count"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; Use the [paginate](/docs/api/liquid/tags/paginate) tag to choose how many products to show per page, up to a limit of 50.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "product"
          }
        ],
        "summary": "All of the products in the collection.",
        "name": "products"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "This includes products that have been filtered out of the current view.\n\n&gt; Tip:\n&gt; To display the number of products in a filtered collection, use [`collection.products_count`](/docs/api/liquid/objects/collection#collection-products_count).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The total number of products in a collection.",
        "name": "all_products_count"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "This includes tags for products that have been filtered out of the current view.\nA maximum of 1,000 tags can be returned.\n\n&gt; Tip:\n&gt; To display the tags that are currently applied, use [`collection.tags`](/docs/api/liquid/objects/collection#collection-tags).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "string"
          }
        ],
        "summary": "All of the tags applied to the products in the collection.",
        "name": "all_tags"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "This doesn't include tags for products that have been filtered out of the current view.\nReturns `nil` if no tags have been applied, or all products with tags have been filtered out of the current view.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "string"
          }
        ],
        "summary": "The tags that are currently applied to the collection.",
        "name": "tags"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [
          {
            "name": "Create links to product types",
            "description": "Use the [`link_to_type`](/docs/api/liquid/filters/link_to_type) filter to create links to the product types in a collection.\n",
            "syntax": "",
            "path": "/collections/ingredients",
            "raw_liquid": "{% for product_type in collection.all_types -%}\n  {{- product_type | link_to_type }}\n{%- endfor %}",
            "parameter": false,
            "display_type": "text",
            "show_data_tab": true
          }
        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "string"
          }
        ],
        "summary": "All of the product types in a collection.",
        "name": "all_types"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [
          {
            "name": "Create links to vendors",
            "description": "Use the [`link_to_vendor`](/docs/api/liquid/filters/link_to_vendor) filter to create links to the vendors in a collection.\n",
            "syntax": "",
            "path": "/collections/ingredients",
            "raw_liquid": "{% for product_vendor in collection.all_vendors %}\n  {{- product_vendor | link_to_vendor }}\n{% endfor %}",
            "parameter": false,
            "display_type": "text",
            "show_data_tab": true
          }
        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "string"
          }
        ],
        "summary": "All of the product vendors in a collection.",
        "name": "all_vendors"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "Only filters relevant to the current collection are returned. Filters will be empty for collections that contain over 5000 products.\n\nTo learn about supporting filters in your theme, refer to [Support storefront filtering](/themes/navigation-search/filtering/storefront-filtering/support-storefront-filtering).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "filter"
          }
        ],
        "summary": "The [storefront filters](https://help.shopify.com/manual/online-store/themes/customizing-themes/storefront-filters) that\nhave been set up on the collection.",
        "name": "filters"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The default is the [collection image](/docs/api/liquid/objects/collection#collection-image). If this image isn't available, then\nShopify falls back to the featured image of the first product in the collection. If the first product in the collection\ndoesn't have a featured image, then `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "image",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The featured image for the collection.",
        "name": "featured_image"
      }
    ],
    "summary": "A [collection](https://help.shopify.com/manual/products/collections) in a store.",
    "name": "collection",
    "examples": [

    ],
    "json_data": {
      "path": "/collections/ingredients/burning",
      "handle": "collection",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "brand",
          "property": "colors"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [

    ],
    "summary": "The colors defined as part of a store's [brand assets](https://help.shopify.com/manual/promoting-marketing/managing-brand-assets).",
    "name": "brand_color",
    "examples": [
      {
        "name": "",
        "description": "To access a brand color, specify the following:\n- The brand color group: either `primary` or `secondary`\n- The color role: Whether the color is a `background` or `foreground` (contrasting) color\n- The 0-based index of the color within the group and role\n",
        "syntax": "shop.brand.colors.group[index].role",
        "path": "/",
        "raw_liquid": "{{ shop.brand.colors.primary[0].background }}\n{{ shop.brand.colors.primary[0].foreground }}\n{{ shop.brand.colors.secondary[0].background }}\n{{ shop.brand.colors.secondary[1].background }}\n{{ shop.brand.colors.secondary[0].foreground }}",
        "parameter": false,
        "display_type": "text",
        "show_data_tab": true
      }
    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": ""
    },
    "return_type": [
      {
        "type": "string",
        "name": "",
        "description": "",
        "array_value": ""
      }
    ]
  },
  {
    "access": {
      "global": false,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "&gt; Tip:\n&gt; Use [color filters](/docs/api/liquid/filters/color-filters) to modify or extract properties of a `color` object.",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The red component of the color, which is a number between 0 and 255.",
        "name": "red"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The green component of the color, which is a number between 0 and 255.",
        "name": "green"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The blue component of the color, which is a number between 0 and 255.",
        "name": "blue"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The red, green, and blue values of the color, represented as a space-separated string.",
        "name": "rgb"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The red, green, blue, and alpha values of the color, represented as a\nspace-separated string, with a slash before the alpha channel.",
        "name": "rgba"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The hue component of the color, which is a number between 0 and 360.",
        "name": "hue"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The saturation component of the color, which is a number between 0 and 100.",
        "name": "saturation"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The lightness component of the color, which is a number between 0 and 100.",
        "name": "lightness"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The alpha component of the color, which is a decimal number between 0.0 and 1.0.",
        "name": "alpha"
      }
    ],
    "summary": "A color from a [`color` setting](/themes/architecture/settings/input-settings#color).",
    "name": "color",
    "examples": [
      {
        "name": "Referencing color settings directly",
        "description": "When a color setting is referenced directly, the hexidecimal color code is returned.\n",
        "syntax": "",
        "path": "/",
        "raw_liquid": "{{ settings.colors_accent_2 }}",
        "parameter": false,
        "display_type": "text",
        "show_data_tab": true
      }
    ],
    "json_data": {
      "path": "/",
      "handle": "settings.colors_accent_2",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "&gt; Tip:\n&gt; To learn about color scheme groups in themes, refer to [`color_scheme_group` setting](/themes/architecture/settings/input-settings#color_scheme_group).",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ID of the color_scheme",
        "name": "id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "untyped",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [settings](https://shopify.dev/docs/themes/architecture/settings/input-settings#color_scheme_group) of the color_scheme.",
        "name": "settings"
      }
    ],
    "summary": "A color_scheme from a [`color_scheme` setting](/themes/architecture/settings/input-settings#color_scheme).",
    "name": "color_scheme",
    "examples": [
      {
        "name": "Referencing color_scheme settings directly",
        "description": "When a color_scheme setting is referenced directly, the color scheme ID is returned.\n",
        "syntax": "",
        "path": "/",
        "raw_liquid": "{{ settings.card_color_scheme }}",
        "parameter": false,
        "display_type": "text",
        "show_data_tab": true
      }
    ],
    "json_data": {
      "path": "/",
      "handle": "settings.card_color_scheme",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "&gt; Tip:\n&gt; To learn about color schemes in themes, refer to [`color_scheme` setting](/themes/architecture/settings/input-settings#color_scheme).",
    "properties": [

    ],
    "summary": "A color_scheme_group from a [`color_scheme_group` setting](/themes/architecture/settings/input-settings#color_scheme_group).",
    "name": "color_scheme_group",
    "examples": [
      {
        "name": "Referencing color_scheme_group settings directly",
        "description": "",
        "syntax": "",
        "path": "/",
        "raw_liquid": "{% for scheme in settings.color_schemes %}\n  .color-{{ scheme.id }} {\n    --color-background: {{ scheme.settings.background }};\n    --color-text: {{ scheme.settings.text }};\n  }\n{% endfor %}",
        "parameter": false,
        "display_type": "text",
        "show_data_tab": true
      }
    ],
    "json_data": {
      "path": "/",
      "handle": "settings.color_schemes",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "company_location",
          "property": "shipping_address"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "To learn about B2B in themes, refer to [Support B2B customers in your theme](/themes/pricing-payments/b2b).",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The attention line of the address.",
        "name": "attention"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ID of the address.",
        "name": "id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The first line of the address.",
        "name": "address1"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If no second line is specified, then `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The second line of the address.",
        "name": "address2"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The city of the address.",
        "name": "city"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The zip or postal code of the address.",
        "name": "zip"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The country of the address in [ISO 3166-1 (alpha 2) format](https://www.iso.org/glossary-for-iso-3166.html).",
        "name": "country_code"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; The value doesn't include the preceding [ISO 3166-1](https://www.iso.org/glossary-for-iso-3166.html) country code.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The province of the address in [ISO 3166-2 (alpha 2) format](https://www.iso.org/glossary-for-iso-3166.html).",
        "name": "province_code"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "country",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The country of the address.",
        "name": "country"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "A combination of the first and second lines of the address.",
        "name": "street"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The province of the address.",
        "name": "province"
      }
    ],
    "summary": "The address of a company location.",
    "name": "company_address",
    "examples": [

    ],
    "json_data": {
      "path": "/",
      "handle": "customer.company_available_locations[0].shipping_address",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "company_location",
          "property": "company"
        },
        {
          "object": "customer",
          "property": "current_company"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "To learn about B2B in themes, refer to [Support B2B customers in your theme](/themes/pricing-payments/b2b).",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ID of the company.",
        "name": "id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The name of the company.",
        "name": "name"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "company_location"
          }
        ],
        "summary": "The company locations that the current customer has access to, or can interact with.",
        "name": "available_locations"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; To learn about how to create metafields, refer to [Create and manage metafields](/apps/metafields/manage) or visit\n&gt; the [Shopify Help Center](https://help.shopify.com/manual/metafields).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "metafield"
          }
        ],
        "summary": "The [metafields](/docs/api/liquid/objects/metafield) applied to the company.",
        "name": "metafields"
      }
    ],
    "summary": "A company that a [customer](/docs/api/liquid/objects/customer) is purchasing for.",
    "name": "company",
    "examples": [

    ],
    "json_data": {
      "path": "/",
      "handle": "customer.company_available_locations[0].company",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "company",
          "property": "available_locations"
        },
        {
          "object": "customer",
          "property": "company_available_locations"
        },
        {
          "object": "customer",
          "property": "current_location"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "To learn about B2B in themes, refer to [Support B2B customers in your theme](/themes/pricing-payments/b2b).",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ID of the location.",
        "name": "id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The name of the location.",
        "name": "name"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The URL to set the location as the current location for the customer.",
        "name": "url_to_set_as_current"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the location is currently selected. Returns `false` if not.",
        "name": "current?"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "company",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The company that the location is associated with.",
        "name": "company"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "company_address",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The address of the location.",
        "name": "shipping_address"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The tax ID of the location.",
        "name": "tax_registration_id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; To learn about how to create metafields, refer to [Create and manage metafields](/apps/metafields/manage) or visit\n&gt; the [Shopify Help Center](https://help.shopify.com/manual/metafields).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "metafield"
          }
        ],
        "summary": "The [metafields](/docs/api/liquid/objects/metafield) applied to the company location.",
        "name": "metafields"
      }
    ],
    "summary": "A location of the [company](/docs/api/liquid/objects/company) that a [customer](/docs/api/liquid/objects/customer) is purchasing for.",
    "name": "company_location",
    "examples": [

    ],
    "json_data": {
      "path": "/",
      "handle": "customer.company_available_locations[0]",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": true,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "Include the `content_for_header` object in your [layout files](/themes/architecture/layouts) between the `&lt;head&gt;` and\n`&lt;/head&gt;` HTML tags.\n\nYou shouldn't try to modify or parse the `content_for_header` object because the contents are subject to change, which can\nchange the behaviour of your code.\n\n&gt; Note:\n&gt; The `content_for_header` object is required in `theme.liquid`.",
    "properties": [

    ],
    "summary": "Dynamically returns all scripts required by Shopify.",
    "name": "content_for_header",
    "examples": [

    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "localization",
          "property": "available_countries"
        },
        {
          "object": "localization",
          "property": "country"
        },
        {
          "object": "address",
          "property": "country"
        },
        {
          "object": "company_address",
          "property": "country"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "To learn how to use the `country` object to offer localization options in your theme,\nrefer to [Support multiple currencies and languages](/themes/internationalization/multiple-currencies-languages).",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The name of the country.",
        "name": "name"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ISO code of the country in [ISO 3166-1 (alpha 2) format](https://www.iso.org/glossary-for-iso-3166.html).",
        "name": "iso_code"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "imperial",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "metric",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The unit system of the country.",
        "name": "unit_system"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "currency",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The currency used in the country.",
        "name": "currency"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "market",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The market that includes this country.",
        "name": "market"
      }
    ],
    "summary": "A country supported by the store's localization options.",
    "name": "country",
    "examples": [
      {
        "name": "Referencing the `country` object directly",
        "description": "When the country object is referenced directly, `country.name` is returned.\n",
        "syntax": "",
        "path": "/",
        "raw_liquid": "{% for country in localization.available_countries -%}\n  {{ country }}\n{%- endfor %}",
        "parameter": false,
        "display_type": "text",
        "show_data_tab": true
      },
      {
        "name": "Rendering a flag image",
        "description": "When the country object is passed to the [`image_url`](/docs/api/liquid/filters#image_url) filter, a [CDN URL](/themes/best-practices/performance/platform#shopify-cdn) for that country’s flag is returned. All country’s flags are SVGs, normalized to an aspect ratio of 4:3.\n",
        "syntax": "",
        "path": "/",
        "raw_liquid": "{{ localization.country | image_url: width: 32 | image_tag }}",
        "parameter": false,
        "display_type": "text",
        "show_data_tab": true
      }
    ],
    "json_data": {
      "path": "/",
      "handle": "localization.country",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "cart",
          "property": "currency"
        },
        {
          "object": "country",
          "property": "currency"
        },
        {
          "object": "shop",
          "property": "enabled_currencies"
        },
        {
          "object": "money",
          "property": "currency"
        },
        {
          "object": "shop",
          "property": "currency"
        },
        {
          "object": "shop",
          "property": "money_format"
        },
        {
          "object": "shop",
          "property": "money_with_currency_format"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [ISO code](https://www.iso.org/iso-4217-currency-codes.html) of the currency.",
        "name": "iso_code"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The symbol of the currency.",
        "name": "symbol"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The name of the currency.",
        "name": "name"
      }
    ],
    "summary": "Information about a currency, like the ISO code and symbol.",
    "name": "currency",
    "examples": [

    ],
    "json_data": {
      "path": "/",
      "handle": "localization.country.currency",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": true,
      "parents": [
        {
          "object": "checkout",
          "property": "customer"
        },
        {
          "object": "gift_card",
          "property": "customer"
        },
        {
          "object": "order",
          "property": "customer"
        }
      ],
      "template": [
        "customers/account",
        "customers/addresses",
        "customers/order"
      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "The `customer` object is directly accessible globally when a customer is logged in to their account. It's also defined in\nthe following contexts:\n\n- The [`customers/account` template](/themes/architecture/templates/customers-account)\n- The [`customers/addresses` template](/themes/architecture/templates/customers-addresses)\n- The [`customers/order` template](/themes/architecture/templates/customers-order)\n- When accessing [`checkout.customer`](/docs/api/liquid/objects/checkout#checkout-customer)\n- When accessing [`gift_card.customer`](/docs/api/liquid/objects/gift_card#gift_card-customer)\n- When accessing [`order.customer`](/docs/api/liquid/objects/order#order-customer)\n\nOutside of the above contexts, if the customer isn't logged into their account, the `customer` object returns `nil`.",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The first name of the customer.",
        "name": "first_name"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The last name of the customer.",
        "name": "last_name"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The total number of orders that the customer has placed.",
        "name": "orders_count"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted amount.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The total amount that the customer has spent on all orders in the currency's subunit.",
        "name": "total_spent"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; Use the [paginate](/docs/api/liquid/tags/paginate) tag to choose how many orders to show at once, up to a limit of 20.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "order"
          }
        ],
        "summary": "All of the orders placed by the customer.",
        "name": "orders"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "order",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The last order placed by the customer, not including test orders.",
        "name": "last_order"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The full name of the customer.",
        "name": "name"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The email of the customer.",
        "name": "email"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "This phone number is only populated if the customer checks out using a phone number during checkout, opts in to SMS\nnotifications, or if the merchant has manually entered it.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The phone number of the customer.",
        "name": "phone"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "A customer can complete a checkout without making an account with the store. If the customer\ndoesn't have an account with the store, then `customer.has_account` is `false` at checkout.\n\nDuring the checkout process, if the customer has an account with the store and enters an email associated\nwith an account, then `customer.has_account` is `true`. The email is associated with the account regardless\nof whether the customer has logged into their account.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the email associated with the customer is tied to a\n[customer account](https://help.shopify.com/manual/customers/customer-accounts). Returns `false` if not.",
        "name": "has_account"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the customer accepts marketing. Returns `false` if not.",
        "name": "accepts_marketing"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ID of the customer.",
        "name": "id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "string"
          }
        ],
        "summary": "The tags associated with the customer.",
        "name": "tags"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "address",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The default address of the customer.",
        "name": "default_address"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; Use the [paginate](/docs/api/liquid/tags/paginate) tag to choose how many addresses to show at once, up to a limit of 20.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "address"
          }
        ],
        "summary": "All of the addresses associated with the customer.",
        "name": "addresses"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The number of addresses associated with the customer.",
        "name": "addresses_count"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the customer is exempt from taxes. Returns `false` if not.",
        "name": "tax_exempt"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "To learn about B2B in themes, refer to [Support B2B customers in your theme](/themes/pricing-payments/b2b).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the customer is a B2B customer. Returns `false` if not.",
        "name": "b2b?"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "To learn about B2B in themes, refer to [Support B2B customers in your theme](/themes/pricing-payments/b2b).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "company_location"
          }
        ],
        "summary": "The company locations that the customer has access to, or can interact with.",
        "name": "company_available_locations"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "To learn about B2B in themes, refer to [Support B2B customers in your theme](/themes/pricing-payments/b2b).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "company_location",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The currently selected company location.",
        "name": "current_location"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "To learn about B2B in themes, refer to [Support B2B customers in your theme](/themes/pricing-payments/b2b).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "company",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The company that the customer is purchasing for.",
        "name": "current_company"
      }
    ],
    "summary": "A [customer](https://help.shopify.com/manual/customers) of the store.",
    "name": "customer",
    "examples": [
      {
        "name": "Check whether the `customer` object is defined",
        "description": "When using the `customer` object outside of customer-specific templates or objects that specifically return a customer, you should check whether the `customer` object is defined.\n",
        "syntax": "",
        "path": "/",
        "raw_liquid": "{% if customer %}\n  Hello, {{ customer.first_name }}!\n{% endif %}",
        "parameter": false,
        "display_type": "text",
        "show_data_tab": true
      }
    ],
    "json_data": {
      "path": "/",
      "handle": "customer",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "line_item",
          "property": "discount_allocations"
        },
        {
          "object": "shipping_method",
          "property": "discount_allocations"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "To learn about how to display discounts in your theme, refer to [Discounts](/themes/pricing-payments/discounts).",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "discount_application",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The discount application that applies the discount to the item.",
        "name": "discount_application"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted amount.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The amount that the item is discounted by in the currency's subunit.",
        "name": "amount"
      }
    ],
    "summary": "Information about how a discount affects an item.",
    "name": "discount_allocation",
    "examples": [

    ],
    "json_data": {
      "path": "/",
      "handle": "customer.orders[2].line_items[0].discount_allocations[0]",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "cart",
          "property": "discount_applications"
        },
        {
          "object": "order",
          "property": "discount_applications"
        },
        {
          "object": "discount_allocation",
          "property": "discount_application"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "To learn about how to display discounts in your theme, refer to [Discounts](/themes/pricing-payments/discounts).",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted amount.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The total amount of the discount in the currency's subunit.",
        "name": "total_allocated_amount"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The customer-facing name of the discount.",
        "name": "title"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "How this value is interpreted depends on the [value type](/docs/api/liquid/objects/discount_application#discount_application-value_type) of the\ndiscount. The following table outlines what the value represents for each value type:\n\n| Value type | Value |\n| --- | --- |\n| `fixed_amount` | The amount of the discount in the currency's subunit. |\n| `percentage` | The percent amount of the discount. |\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted price.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The value of the discount.",
        "name": "value"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; Whether the selection method applies to line items or shipping lines depends on the discount's\n&gt; [target type](/docs/api/liquid/objects/discount_application#discount_application-target_type).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "all",
            "description": "The discount applies to all line items or shipping lines.",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "entitled",
            "description": "The discount applies to a specific set of line items or shipping lines based on some criteria.",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "explicit",
            "description": "The discount applies to a specific line item or shipping line.",
            "array_value": ""
          }
        ],
        "summary": "The selection method for line items or shipping lines to be discounted.",
        "name": "target_selection"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "automatic",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "discount_code",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "manual",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "script",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The type of the discount.",
        "name": "type"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "fixed_amount",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "percentage",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The value type of the discount.",
        "name": "value_type"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "line_item",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "shipping_line",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The type of item that the discount applies to.",
        "name": "target_type"
      }
    ],
    "summary": "Information about the intent of a discount.",
    "name": "discount_application",
    "examples": [

    ],
    "json_data": {
      "path": "/",
      "handle": "cart.discount_applications[0]",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "product",
          "property": "media"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "&gt; Tip:\n&gt; Use the [`external_video_tag` filter](/docs/api/liquid/filters/external_video_tag) to output the video in an\n&gt; HTML `&lt;iframe&gt;` tag. Use the [`external_video_url` filter](/docs/api/liquid/filters/external_video_url) to specify parameters\n&gt; for the external video player.",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ID of the video from its external source.",
        "name": "external_id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The aspect ratio of the video as a decimal.",
        "name": "aspect_ratio"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "youtube",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "vimeo",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The service that hosts the video.",
        "name": "host"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The alt text of the external video.",
        "name": "alt"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ID of the external video.",
        "name": "id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [
          {
            "name": "Filter for media of a specific type",
            "description": "You can use the `media_type` property with the [`where` filter](/docs/api/liquid/filters/where) to filter the [`product.media` array](/docs/api/liquid/objects/product#product-media) for all media of a desired type.\n",
            "syntax": "",
            "path": "/products/potion-beats",
            "raw_liquid": "{% assign external_videos = product.media | where: 'media_type', 'external_video' %}\n\n{% for external_video in external_videos %}\n  {{- external_video | external_video_tag }}\n{% endfor %}",
            "parameter": false,
            "display_type": "text",
            "show_data_tab": true
          }
        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The media type of the external video. Always returns `external_video`.",
        "name": "media_type"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The position of the external video in the [`product.media`](/docs/api/liquid/objects/product#product-media) array.",
        "name": "position"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; Preview images don't have an ID attribute.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "image",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "A preview image of the media.",
        "name": "preview_image"
      }
    ],
    "summary": "Information about an external video from YouTube or Vimeo.",
    "name": "external_video",
    "examples": [

    ],
    "json_data": {
      "path": "/products/potion-beats",
      "handle": "product.featured_media",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "collection",
          "property": "filters"
        },
        {
          "object": "search",
          "property": "filters"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "To learn about supporting filters in your theme, refer to [Support storefront filtering](/themes/navigation-search/filtering/storefront-filtering/support-storefront-filtering).",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The URL parameter for the filter. For example, `filter.v.option.color`.",
        "name": "param_name"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The customer-facing label for the filter.",
        "name": "label"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "boolean",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "list",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "price_range",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The type of the filter.",
        "name": "type"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "filter_value"
          }
        ],
        "summary": "The values of the filter that are currently active.\n\nThe array can have values only for `boolean` and `list` type filters.",
        "name": "active_values"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The array can have values only for `boolean` and `list` type filters.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "filter_value"
          }
        ],
        "summary": "The values of the filter that are currently inactive.",
        "name": "inactive_values"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "filter_value"
          }
        ],
        "summary": "The values of the filter.\n\nThe array can have values only for `boolean` and `list` type filters.",
        "name": "values"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "filter_value",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The `false` filter value.\n\nReturns a value only for `boolean` type filters. Returns `nil` for other types.",
        "name": "false_value"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "filter_value",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The `true` filter value.\n\nReturns a value only for `boolean` type filters. Returns `nil` for other types.",
        "name": "true_value"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "filter_value",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The highest filter value.\n\nReturns a value only for `price_range` type filters. Returns `nil` for other types.",
        "name": "max_value"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "filter_value",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The lowest filter value.\n\nReturns a value only for `price_range` type filters. Returns `nil` for other types.",
        "name": "min_value"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The highest product price within the collection or search results.\n\nReturns a value only for `price_range` type filters. Returns `nil` for other types.",
        "name": "range_max"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The current page URL with the URL parameter related to the filter removed.",
        "name": "url_to_remove"
      }
    ],
    "summary": "A [storefront filter](https://help.shopify.com/manual/online-store/themes/customizing-themes/storefront-filters).",
    "name": "filter",
    "examples": [

    ],
    "json_data": {
      "path": "/search?q=potion&amp;filter.v.option.strength=Low",
      "handle": "search.filters.to_a[3]",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "filter",
          "property": ""
        },
        {
          "object": "filter",
          "property": "false_value"
        },
        {
          "object": "filter",
          "property": "true_value"
        },
        {
          "object": "filter",
          "property": "max_value"
        },
        {
          "object": "filter",
          "property": "min_value"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "To learn about supporting filters in your theme, refer to [Support storefront filtering](/themes/navigation-search/filtering/storefront-filtering/support-storefront-filtering).",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "For example, `filter.v.option.color`.\n\nFilters of type `price_range` include an extra component depending on whether the filter value is for the filter's\n`min_value` or `max_value`. The following table outlines the URL parameter for each:\n\n| Value type | URL parameter |\n| --- | --- |\n| `min_value` | `filter.v.price.gte` |\n| `max_value` | `filter.v.price.lte` |",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The URL parameter for the parent filter of the filter value.",
        "name": "param_name"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The value.",
        "name": "value"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the value is currently active. Returns `false` if not.\n\nCan only return `true` for filters of type `boolean` or `list`.",
        "name": "active"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The number of results related to the filter value.\n\nReturns a value only for `boolean` and `list` type filters. Returns `nil` for `price_range` type filters.",
        "name": "count"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The customer-facing label for the filter value. For example, `Red` or `Rouge`.\n\nReturns a value only for `boolean` and `list` type filters. Returns `nil` for `price_range` type filters.",
        "name": "label"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The current page URL with the filter value parameter added.",
        "name": "url_to_add"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The current page URL with the filter value parameter removed.",
        "name": "url_to_remove"
      }
    ],
    "summary": "A specific value of a filter.",
    "name": "filter_value",
    "examples": [

    ],
    "json_data": {
      "path": "/search?q=potion&amp;filter.v.option.strength=Low",
      "handle": "search.filters.to_a[3].values[0]",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "image_presentation",
          "property": "focal_point"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "The focal point will remain visible when the image is cropped by the\ntheme. [Learn more about supporting focal points in your theme](https://shopify.dev/themes/architecture/settings/input-settings#image-focal-points).\n\n&gt; Tip:\n&gt; Use the [`image_tag`](/docs/api/liquid/filters/image_tag) filter to automatically apply focal point settings to an\n&gt; image on the storefront. This applies the focal point using the `object-position` CSS property.",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The horizontal position of the focal point, as a percent of the image width. Returns `50` if no focal point is set.",
        "name": "x"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The vertical position of the focal point, as a percent of the image height. Returns `50` if no focal point is set.",
        "name": "y"
      }
    ],
    "summary": "The focal point for an image.",
    "name": "focal_point",
    "examples": [
      {
        "name": "Referencing the `focal_point` object directly",
        "description": "When a `focal_point` object is referenced directly, the coordinates are returned as a string, in the format `X% Y%`.\n",
        "syntax": "",
        "path": "/",
        "raw_liquid": "{{ images['potions-header.png'].presentation.focal_point }}",
        "parameter": false,
        "display_type": "text",
        "show_data_tab": true
      }
    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "You can use the `font` object in Liquid [assets](/themes/architecture#assets) or inside a [`style` tag](/docs/api/liquid/tags/style)\nto apply font setting values to theme CSS.\n\n&gt; Tip:\n&gt; Use [font filters](/docs/api/liquid/filters/font-filters) to modify properties of the `font` object, load the font,\n&gt; or obtain font variants.",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The family name of the font.",
        "name": "family"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The fallback families of the font.",
        "name": "fallback_families"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The baseline ratio of the font as a decimal.",
        "name": "baseline_ratio"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The weight of the font.",
        "name": "weight"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The style of the font.",
        "name": "style"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "font"
          }
        ],
        "summary": "The variants in the family of the font.",
        "name": "variants"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; You can use this property to determine whether you need to include a corresponding [font-face](/docs/api/liquid/filters/font_face)\n&gt; declaration for the font.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the font is a system font. Returns `false` if not.",
        "name": "system?"
      }
    ],
    "summary": "A font from a [`font_picker` setting](/themes/architecture/settings/input-settings#font_picker).",
    "name": "font",
    "examples": [

    ],
    "json_data": {
      "path": "/",
      "handle": "settings.type_header_font",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If there are no errors, then `nil` is returned.\n\n&gt; Tip:\n&gt; You can apply the [`default_errors` filter](/docs/api/liquid/filters/default_errors) to `form.errors` to output default\n&gt; error messages without having to loop through the array.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "form_errors",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Any errors from the form.",
        "name": "errors"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "This property is exclusive to the [`customer_address` form](/docs/api/liquid/tags/form#form-customer_address).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The first address line associated with the address.",
        "name": "address1"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "This property is exclusive to the [`customer_address` form](/docs/api/liquid/tags/form#form-customer_address).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The second address line associated with the address.",
        "name": "address2"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "This property is exclusive to the [`new_comment` form](/docs/api/liquid/tags/form#form-new_comment).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The name of the author of the article comment.",
        "name": "author"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "This property is exclusive to the [`contact`](/docs/api/liquid/tags/form#form-contact) and [`new_comment`](/docs/api/liquid/tags/form#form-new_comment)\nforms.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The content of the contact submission or article comment.",
        "name": "body"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "This property is exclusive to the [`customer_address` form](/docs/api/liquid/tags/form#form-customer_address).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The city associated with the address.",
        "name": "city"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "This property is exclusive to the [`customer_address` form](/docs/api/liquid/tags/form#form-customer_address).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The company associated with the address.",
        "name": "company"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "This property is exclusive to the [`customer_address` form](/docs/api/liquid/tags/form#form-customer_address).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The country associated with the address.",
        "name": "country"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "This property is exclusive to the following forms:\n\n- [`contact`](/docs/api/liquid/tags/form#form-contact)\n- [`create_customer`](/docs/api/liquid/tags/form#form-create_customer)\n- [`customer`](/docs/api/liquid/tags/form#form-customer)\n- [`customer_login`](/docs/api/liquid/tags/form#form-customer_login)\n- [`new_comment`](/docs/api/liquid/tags/form#form-new_comment)\n- [`recover_customer_password`](/docs/api/liquid/tags/form#form-recover_customer_password)\n- [`product`](/docs/api/liquid/tags/form#form-product)",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The email associated with the form.",
        "name": "email"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "This property is exclusive to the [`create_customer`](/docs/api/liquid/tags/form#form-create_customer) and\n[`customer_address`](/docs/api/liquid/tags/form#form-customer_address) forms.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The first name associated with the customer or address.",
        "name": "first_name"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ID of the form.",
        "name": "id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "This property is exclusive to the [`create_customer`](/docs/api/liquid/tags/form#form-create_customer) and\n[`customer_address`](/docs/api/liquid/tags/form#form-customer_address) forms.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The last name associated with the customer or address.",
        "name": "last_name"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "This property is exclusive to the [`customer_login` form](/docs/api/liquid/tags/form#form-customer_login).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true`.",
        "name": "password_needed"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "This property is exclusive to the [`customer_address` form](/docs/api/liquid/tags/form#form-customer_address).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The phone number associated with the address.",
        "name": "phone"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; The [`customer_address` form](/docs/api/liquid/tags/form#form-customer_address) always returns `true`.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the form was submitted successfully. Returns `false` if there were errors.",
        "name": "posted_successfully?"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "This property is exclusive to the [`customer_address` form](/docs/api/liquid/tags/form#form-customer_address).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The province associated with the address.",
        "name": "province"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "This property is exclusive to the [`customer_address` form](/docs/api/liquid/tags/form#form-customer_address).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Renders an HTML checkbox that can submit the address as the customer's default address.",
        "name": "set_as_default_checkbox"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "This property is exclusive to the [`product` form](/docs/api/liquid/tags/form#form-product).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The nickname of the gift card recipient.",
        "name": "name"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "This property is exclusive to the [`product` form](/docs/api/liquid/tags/form#form-product).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The personalized message intended for the recipient.",
        "name": "message"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "This property is exclusive to the [`customer_address` form](/docs/api/liquid/tags/form#form-customer_address).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The zip or postal code associated with the address.",
        "name": "zip"
      }
    ],
    "summary": "Information about a form created by a [`form` tag](/docs/api/liquid/tags/form).",
    "name": "form",
    "examples": [

    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": "{\"address1\":\"12 Phoenix Feather Alley\",\"address2\":\"1\",\"author\":null,\"body\":null,\"city\":\"Calgary\",\"company\":null,\"country\":\"Canada\",\"email\":null,\"errors\":null,\"first_name\":\"Cornelius\",\"id\":\"new\",\"last_name\":\"Potionmaker\",\"password_needed?\":false,\"phone\":\"44 131 496 0905\",\"posted_successfully?\":true,\"province\":\"Alberta\",\"set_as_default_checkbox\":\"&lt;input type='checkbox' id='address_default_address_new' name='address[default]' value='1'&gt;\",\"zip\":\"T1X 0L4\"}"
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "line_item",
          "property": "fulfillment"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; Use the [`date` filter](/docs/api/liquid/filters/date) to format the timestamp.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "A timestamp for when the fulfillment was created.",
        "name": "created_at"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The number of items in the fulfillment.",
        "name": "item_count"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "line_item"
          }
        ],
        "summary": "The line items in the fulfillment.",
        "name": "fulfillment_line_items"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The name of the fulfillment service.",
        "name": "tracking_company"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "string"
          }
        ],
        "summary": "An array of the fulfillment's tracking numbers.",
        "name": "tracking_numbers"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If there's no tracking number, then `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The fulfillment's tracking number.",
        "name": "tracking_number"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If there's no tracking number, then `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The URL for the fulfillment's tracking number.",
        "name": "tracking_url"
      }
    ],
    "summary": "An order [fulfillment](https://help.shopify.com/manual/orders/fulfillment), which includes information like the line items\nbeing fulfilled and shipment tracking.",
    "name": "fulfillment",
    "examples": [

    ],
    "json_data": {
      "path": "/",
      "handle": "customer.orders[4].line_items[0].fulfillment",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "metafield",
          "property": "value"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "&gt; Tip:\n&gt; To learn about metafield types, refer to [Metafield types](/apps/metafields/types).",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [CDN URL](/themes/best-practices/performance/platform#shopify-cdn) for the file.",
        "name": "url"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ID of the file.",
        "name": "id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The media type of the model. Always returns `generic_file`.",
        "name": "media_type"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "image",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "A preview image for the file.",
        "name": "preview_image"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If the source is a [`file_reference` metafield](/apps/metafields/types), then `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The position of the media in the [`product.media` array](/docs/api/liquid/objects/product#product-media).",
        "name": "position"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The alt text of the media.",
        "name": "alt"
      }
    ],
    "summary": "A file from a `file_reference` type [metafield](/docs/api/liquid/objects/metafield) that is neither an image or video.",
    "name": "generic_file",
    "examples": [

    ],
    "json_data": {
      "path": "/products/health-potion",
      "handle": "product.metafields.information.disclaimers.value",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [

      ],
      "template": [
        "gift_card.liquid"
      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted amount.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The remaining balance of the gift card in the currency's subunit.",
        "name": "balance"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The code used to redeem the gift card.",
        "name": "code"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [ISO code](https://www.iso.org/iso-4217-currency-codes.html) of the currency that the gift card was issued in.",
        "name": "currency"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "customer",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The customer associated with the gift card.",
        "name": "customer"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If there is no recipient associated with the gift card, then `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "recipient",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The recipient associated with the gift card.",
        "name": "recipient"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If there is no message intended for the recipient, then `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The personalized message intended for the recipient.",
        "name": "message"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If the gift card does not have a scheduled date, then `nil` is returned.\n&gt; Tip:\n&gt; Use the [`date` filter](/docs/api/liquid/filters/date) to format the date.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The scheduled date on which the gift card will be sent to the recipient.",
        "name": "send_on"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the gift card is enabled. Returns `false` if not.",
        "name": "enabled"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the gift card is expired. Returns `false` if not.",
        "name": "expired"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If the gift card never expires, then `nil` is returned.\n&gt; Tip:\n&gt; Use the [`date` filter](/docs/api/liquid/filters/date) to format the timestamp.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "A timestamp for when the gift card expires.",
        "name": "expires_on"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted amount.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The initial balance of the gift card in the currency's subunit.",
        "name": "initial_value"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; The page at this URL is rendered through the [`gift_card.liquid` template](/themes/architecture/templates/gift-card-liquid)\n&gt; of the theme.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The URL to view the gift card. This URL is on the `checkout.shopify.com` domain.",
        "name": "url"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The name doesn't include the `gift_card.` prefix, or the `.liquid` file extension.\n\n If a custom template isn't assigned to the gift card, then `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The name of the [custom template](/themes/architecture/templates#alternate-templates) assigned to the gift card.",
        "name": "template_suffix"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If there aren't any line item properties, then an [`EmptyDrop`](/docs/api/liquid/basics#emptydrop) is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "untyped"
          }
        ],
        "summary": "The [line item properties](/docs/api/liquid/objects/line_item#line_item-properties) assigned to the gift card.",
        "name": "properties"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "A string used to generate a QR code for the gift card.",
        "name": "qr_identifier"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The URL to download the gift card as an Apple Wallet Pass.",
        "name": "pass_url"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "product",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The product associated with the gift card.",
        "name": "product"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The last 4 characters of the code used to redeem the gift card.",
        "name": "last_four_characters"
      }
    ],
    "summary": "A [gift card](https://help.shopify.com/manual/products/gift-card-products) that's been issued to a customer or a recipient.",
    "name": "gift_card",
    "examples": [

    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": "{\"balance\":5000,\"code\":\"WCGX 7X97 K9HJ DFR8\",\"currency\":\"CAD\",\"customer\":{},\"enabled\":true,\"expired\":false,\"expires_on\":null,\"initial_value\":5000,\"last_four_characters\":\"DFR8\",\"message\":null,\"send_on\":null,\"pass_url\":\"https://polinas-potent-potions.myshopify.com/v1/passes/pass.com.shopify.giftcardnext/94af7fbe55d010130df8d8bc4a338d36/\",\"product\":{},\"properties\":{},\"qr_identifier\":\"shopify-giftcard-v1-3TKWJKJBM3X7PBRK\",\"recipient\":null,\"template_suffix\":null,\"url\":\"https://checkout.shopify.com/gift_cards/56174706753/0011c591fc720d0a51b80cdb694f969e\"}"
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "article",
          "property": "image"
        },
        {
          "object": "blog",
          "property": "image"
        },
        {
          "object": "collection",
          "property": "image"
        },
        {
          "object": "generic_file",
          "property": "preview_image"
        },
        {
          "object": "line_item",
          "property": "image"
        },
        {
          "object": "media",
          "property": "preview_image"
        },
        {
          "object": "model",
          "property": "preview_image"
        },
        {
          "object": "product",
          "property": "featured_image"
        },
        {
          "object": "product",
          "property": "media"
        },
        {
          "object": "product",
          "property": "images"
        },
        {
          "object": "variant",
          "property": "image"
        },
        {
          "object": "video",
          "property": "preview_image"
        },
        {
          "object": "brand",
          "property": "favicon_url"
        },
        {
          "object": "brand",
          "property": "cover_image"
        },
        {
          "object": "brand",
          "property": "logo"
        },
        {
          "object": "brand",
          "property": "square_logo"
        },
        {
          "object": "collection",
          "property": "featured_image"
        },
        {
          "object": "external_video",
          "property": "preview_image"
        },
        {
          "object": "image",
          "property": "preview_image"
        },
        {
          "object": "variant",
          "property": "featured_image"
        },
        {
          "object": "user",
          "property": "image"
        },
        {
          "object": "page_image",
          "property": ""
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "To learn about the image formats that Shopify supports, visit the [Shopify Help Center](https://help.shopify.com/manual/online-store/images/theme-images#image-formats).\n\n&gt; Tip:\n&gt; Use the [`image_url`](/docs/api/liquid/filters/image_url) and [`image_tag`](/docs/api/liquid/filters/image_tag) filters to display\n&gt; images on the storefront.",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "image_presentation",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The presentation settings for the image.",
        "name": "presentation"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The relative URL of the image.",
        "name": "src"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The width of the image in pixels.",
        "name": "width"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The height of the image in pixels.",
        "name": "height"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The aspect ratio of the image as a decimal.",
        "name": "aspect_ratio"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The alt text of the image.",
        "name": "alt"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The `attached_to_variant?` property is only available for images accessed through the following sources:\n\n- [`product.featured_image`](/docs/api/liquid/objects/product#product-featured_image)\n- [`product.images`](/docs/api/liquid/objects/product#product-images)\n\nIf you reference this property on an image from another source, then `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the image is associated with a variant. Returns `false` if not.",
        "name": "attached_to_variant?"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If you reference the `id` property for preview images of [`generic_file`](/docs/api/liquid/objects/generic_file) or\n[`media`](/docs/api/liquid/objects/media) objects, then `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ID of the image.",
        "name": "id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The `media_type` property is only available for images accessed through the following sources:\n\n- [`product.media`](/docs/api/liquid/objects/product#product-media)\n- [`file_reference` type metafields](/apps/metafields/types#supported-types)\n\nIf you reference this property on an image from another source, then `nil` is returned.",
        "examples": [
          {
            "name": "Filter for media of a specific type",
            "description": "You can use the `media_type` property with the [`where` filter](/docs/api/liquid/filters/where) to filter the [`product.media` array](/docs/api/liquid/objects/product#product-media) for all media of a desired type.\n",
            "syntax": "",
            "path": "/products/snake-venom",
            "raw_liquid": "{% assign images = product.media | where: 'media_type', 'image' %}\n\n{% for image in images %}\n  {{- image | image_url: width: 300 | image_tag }}\n{% endfor %}",
            "parameter": false,
            "display_type": "text",
            "show_data_tab": true
          }
        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The media type of the image. Always returns `image`.",
        "name": "media_type"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The `position` property is only available for images that are associated with a product. If you reference this property\non an image from another source, then `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The position of the image in the [`product.images`](/docs/api/liquid/objects/product#product-images) or [`product.media`](/docs/api/liquid/objects/product#product-media)\narray.",
        "name": "position"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The `preview_image` property is only available for images accessed through the following sources:\n\n- [`product.featured_media`](/docs/api/liquid/objects/product#product-featured_media)\n- [`product.media`](/docs/api/liquid/objects/product#product-media)\n- [`file_reference` type metafields](/apps/metafields/types#supported-types)\n\nIf you reference this property on an image from another source, then `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "image",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "A preview image for the image.",
        "name": "preview_image"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The `product_id` property is only available for images associated with a product. If you reference this property on\nan image from another source, then `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ID of the product that the image is associated with.",
        "name": "product_id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The `variants` property is only available for images accessed through the following sources:\n\n- [`product.featured_image`](/docs/api/liquid/objects#product-featured_image)\n- [`product.images`](/docs/api/liquid/objects/product#product-images)\n\nIf you reference this property on an image from another source, then `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "variant"
          }
        ],
        "summary": "The product variants that the image is associated with.",
        "name": "variants"
      }
    ],
    "summary": "An image, such as a product or collection image.",
    "name": "image",
    "examples": [
      {
        "name": "Referencing the `image` object directly",
        "description": "When an `image` object is referenced directly, the image's relative URL path is returned.\n",
        "syntax": "",
        "path": "/products/forest-mushroom",
        "raw_liquid": "{{ product.featured_image }}",
        "parameter": false,
        "display_type": "text",
        "show_data_tab": true
      }
    ],
    "json_data": {
      "path": "/products/charcoal",
      "handle": "product.featured_image",
      "data_from_file": ""
    },
    "return_type": [
      {
        "type": "array",
        "name": "",
        "description": "",
        "array_value": "image"
      }
    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "image",
          "property": "presentation"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "focal_point",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The focal point for the image.",
        "name": "focal_point"
      }
    ],
    "summary": "The presentation settings for an image.",
    "name": "image_presentation",
    "examples": [

    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": true,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [

    ],
    "summary": "All of the [images](/docs/api/liquid/objects/image) that have been [uploaded](https://help.shopify.com/manual/online-store/images/theme-images#upload-images)\nto a store.",
    "name": "images",
    "examples": [
      {
        "name": "",
        "description": "You can access images from the `images` array by their filename.\n",
        "syntax": "",
        "path": "/",
        "raw_liquid": "{{ images['potions-header.png'] | image_url: width: 300 | image_tag }}",
        "parameter": false,
        "display_type": "text",
        "show_data_tab": true
      }
    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": ""
    },
    "return_type": [
      {
        "type": "array",
        "name": "",
        "description": "",
        "array_value": "image"
      }
    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "cart",
          "property": "line_items"
        },
        {
          "object": "checkout",
          "property": "line_items"
        },
        {
          "object": "order",
          "property": "line_items"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The ID differs depending on the context. The following table outlines the possible contexts and their associated values:\n\n| Context | Value |\n| --- | --- |\n| [`cart.items`](/docs/api/liquid/objects/cart#cart-items) | The ID of the line item's variant.&lt;br&gt;&lt;br&gt;This ID isn't unique, and can be shared by multiple items with the same variant. |\n| [`checkout.line_items`](/docs/api/liquid/objects/checkout#checkout-line_items) | A temporary unique hash generated for the checkout. |\n| [`order.line_items`](/docs/api/liquid/objects/order#order-line_items) | A unique integer ID. |",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ID of the line item.",
        "name": "id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The quantity of the line item.",
        "name": "quantity"
      },
      {
        "deprecated": true,
        "deprecation_reason": "Deprecated because discounts from automatic discounts and discount codes aren't included.\n\nThe `line_item.price` property has been replaced by [`line_item.final_price`](/docs/api/liquid/objects/line_item#line_item-final_price).",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted price.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The price of the line item in the currency's subunit. This includes any discounts from [Shopify Scripts](https://help.shopify.com/manual/checkout-settings/script-editor).",
        "name": "price"
      },
      {
        "deprecated": true,
        "deprecation_reason": "Deprecated because discounts from automatic discounts and discount codes aren't included.\n\nThe `line_item.line_price` property has been replaced by [`line_item.final_line_price`](/docs/api/liquid/objects/line_item#line_item-final_line_price).",
        "description": "The value is equal to `line_item.price` multiplied by `line_item.quantity`. It's output in the customer's local\n(presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted price.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The combined price, in the currency's subunit, of all of the items in a line item. This includes any discounts from [Shopify Scripts](https://help.shopify.com/manual/checkout-settings/script-editor).",
        "name": "line_price"
      },
      {
        "deprecated": true,
        "deprecation_reason": "Deprecated because discounts from automatic discounts and discount codes aren't included.\n\nThe `line_item.total_discount` property has been replaced by [`line_item.line_level_total_discount`](/docs/api/liquid/objects/line_item#line_item-line_level_total_discount).",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted amount.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The total amount, in the currency's subunit, of any discounts applied to the line item by [Shopify Scripts](https://help.shopify.com/manual/checkout-settings/script-editor).",
        "name": "total_discount"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Caution:\n&gt; Not applicable for item component as discounts are applied to the parent line item.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "discount_allocation"
          }
        ],
        "summary": "The discount allocations that apply to the line item.",
        "name": "discount_allocations"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted price.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The price of the line item in the currency's subunit. This includes any line-level discounts.",
        "name": "final_price"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is equal to `line_item.final_price` multiplied by `line_item.quantity`. It's output in the customer's local\n(presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted price.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The combined price, in the currency's subunit, of all of the items in the line item. This includes any line-level discounts.",
        "name": "final_line_price"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [ID](/docs/api/liquid/objects/variant#variant-id) of the line item's variant.",
        "name": "variant_id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [ID](/docs/api/liquid/objects/product#product-id) of the line item's product.",
        "name": "product_id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "product",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The product associated with the line item.",
        "name": "product"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "variant",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The variant associated with the line item.",
        "name": "variant"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "tax_line"
          }
        ],
        "summary": "The tax lines for the line item.",
        "name": "tax_lines"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "fulfillment",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The fulfillment of the line item.",
        "name": "fulfillment"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The number of items from the line item that have been successfully fulfilled.",
        "name": "successfully_fulfilled_quantity"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [fulfillment service](https://help.shopify.com/manual/shipping/understanding-shipping/dropshipping-and-fulfillment-services)\nfor the vartiant associated with the line item. If there's no fulfillment service, then `manual` is returned.",
        "name": "fulfillment_service"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "You can add, or allow customers to add, custom information to a line item with line item properties.\n\nLine item properties consist of a name and value pair. They can be captured with the following methods:\n\n- [A custom input inside a product form](/themes/architecture/templates/product#line-item-properties)\n- [The AJAX Cart API](/api/ajax/reference/cart#add-line-item-properties)\n\n&gt; Tip:\n&gt; To learn about how to display captured properties, refer to [Display line item properties](/themes/architecture/templates/cart#display-line-item-properties).",
        "examples": [
          {
            "name": "Capture line item properties in the product form",
            "description": "To capture line item properties inside the [product form](/docs/api/liquid/tags/form#form-product), you need to include an input, for each property. Each  input needs a unique `name` attribute. Use the following format:\n\n```\nname=\"properties[property-name]\"\n```\n\nThe value of the input is captured as the value of the property.\n\nFor example, you can use the following code to capture custom engraving text for a product:\n\n```liquid\n{% form 'product', product %}\n  ...\n  &lt;label for=\"engravingText\"&gt;Engraving&lt;label&gt;\n  &lt;input type=\"text\" id=\"engravingText\" name=\"properties[Engraving]\"&gt;\n  ...\n{% endform %}\n```\n\n&gt; Tip:\n&gt; You can add an underscore to the beginning of a property name to hide it from customers at checkout. For example,\n&gt; `properties[_hiddenPropertyName]`.\n",
            "syntax": "",
            "path": "/products/health-potion",
            "raw_liquid": "",
            "parameter": false,
            "display_type": "text",
            "show_data_tab": true
          }
        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "untyped"
          }
        ],
        "summary": "The properties of the line item.",
        "name": "properties"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; Unit prices are available only to stores located in Germany or France.\n\nTo learn about how to display unit prices in your theme, refer to [Unit pricing](/themes/pricing-payments/unit-pricing).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "unit_price_measurement",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The unit price measurement of the line item.",
        "name": "unit_price_measurement"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The price reflects any discounts that are applied to the line item. The value is output in the customer's local\n(presentment) currency.\n\n&gt; Note:\n&gt; Unit prices are available only to stores located in Germany and France.\n\nTo learn about how to display unit prices in your theme, refer to [Unit pricing](/themes/pricing-payments/unit-pricing).\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted price.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [unit price](https://help.shopify.com/manual/intro-to-shopify/initial-setup/sell-in-france/price-per-unit#add-unit-prices-to-your-product)\n of the line item in the currency's subunit.",
        "name": "unit_price"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [sku](/docs/api/liquid/objects/variant#variant-sku) of the variant associated with the line item.",
        "name": "sku"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The following table outlines what's returned depending on the number of discounts affecting the line item:\n\n| Number of discounts | Value |\n| --- | --- |\n| 0 | `nil` |\n| 1 | The [title](/docs/api/liquid/objects/discount_application#discount_application-title) of the discount. |\n| More than 1 | A Shopify generated string noting how many discounts have been applied. |",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Information about the discounts that have affected the line item.",
        "name": "message"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The vendor of the variant associated with the line item.",
        "name": "vendor"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "In most contexts, the line item title appears in the customer's preferred language. However, in the context of an\n[order](/docs/api/liquid/objects/order), the line item title appears in the language that the customer checked out in.\n\n#### Line item title history\n\nWhen referencing line item, product, and variant titles in the context of an order, the following changes might result\nin a different output than you expect:\n\n- A product or variant being deleted\n- A product or variant title being edited\n\nWhen `line_item.title` is referenced for an order, the line item title at the time of the order is returned.\nHowever, when `line_item.product.title` and `line_item.variant.title` are referenced, the current value for\neach title is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The title of the line item. The title is a combination of `line_item.product.title` and `line_item.variant.title`, separated\nby a hyphen.",
        "name": "title"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if taxes should be charged on the line item. Returns `false` if not.",
        "name": "taxable"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted price.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The price of the line item in the currency's subunit, before discounts have been applied.",
        "name": "original_price"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is equal to `line_item.original_price` multiplied by `line_item.quantity`. It's output in the customer's local\n(presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted price.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The combined price of all of the items in a line item in the currency's subunit, before any discounts have been applied.",
        "name": "original_line_price"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted amount.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The total amount of any discounts applied to the line item in the currency's subunit.",
        "name": "line_level_total_discount"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Caution:\n&gt; Not applicable for item component as discounts are applied to the parent line item.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "discount_allocation"
          }
        ],
        "summary": "The discount allocations that apply directly to the line item.",
        "name": "line_level_discount_allocations"
      },
      {
        "deprecated": true,
        "deprecation_reason": "Deprecated because not all discount types and details are available.\n\nThe `line_item.discounts` property has been replaced by [`line_item.discount_allocations`](/docs/api/liquid/objects/line_item#line_item-discount_allocations).",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "discount"
          }
        ],
        "summary": "The discounts applied to the line item.",
        "name": "discounts"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the product associated with the line item is a gift card. Returns `false` if not.",
        "name": "gift_card"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the variant associated with the line item requires shipping. Returns `false` if not.",
        "name": "requires_shipping"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; The array is never empty because variants with no options still have a default option. Because of this, you should use\n&gt; `line_item.product.has_only_default_variant` to check whether there's any information to output.",
        "examples": [
          {
            "name": "Output the option values",
            "description": "",
            "syntax": "",
            "path": "/",
            "raw_liquid": "{% for item in cart.items %}\n&lt;div class=\"cart__item\"&gt;\n  &lt;p class=\"cart__item-title\"&gt;\n    {{ item.title }}\n  &lt;/p&gt;\n\n  {%- unless item.product.has_only_default_variant %}\n  &lt;ul&gt;\n    {% for option in item.options_with_values -%}\n    &lt;li&gt;{{ option.name }}: {{ option.value }}&lt;/li&gt;\n    {%- endfor %}\n  &lt;/ul&gt;\n  {% endunless %}\n&lt;/div&gt;\n{% endfor %}",
            "parameter": false,
            "display_type": "text",
            "show_data_tab": true
          }
        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "untyped"
          }
        ],
        "summary": "The name and value pairs for each option of the variant associated with the line item.",
        "name": "options_with_values"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "Line item keys are unique identifiers that consist of the following components separated by a colon:\n\n- The ID of the variant associated with the line item\n- A hash of the properties of the line item, even if there are no properties",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The key of the line item.",
        "name": "key"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; Use this property with the [`weight_with_unit` filter](/docs/api/liquid/filters/weight_with_unit) to format the weight.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The weight of the line item in the store's [default weight unit](https://help.shopify.com/manual/intro-to-shopify/initial-setup/setup-business-settings#set-or-change-your-stores-default-weight-unit).",
        "name": "grams"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The relative URL of the variant associated with the line item.",
        "name": "url"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; To learn more about how to use this property in your theme, refer to [Remove line items from the cart](/themes/architecture/templates/cart#remove-line-items-from-the-cart).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "A URL to remove the line item from the cart.",
        "name": "url_to_remove"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The image can come from one of the following sources:\n\n- The image of the variant associated with the line item\n- The featured image of the product associated with the line item, if there's no variant image",
        "examples": [

        ],
        "return_type": [
          {
            "type": "image",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The image of the line item.",
        "name": "image"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "#### Availability of selling plan information\n\nThe following properties aren't available when referencing selling plan information through an\n[order's line items](/docs/api/liquid/objects/order#order-line_items):\n\n- [`selling_plan_allocation.compare_at_price`](/docs/api/liquid/objects/selling_plan_allocation#selling_plan_allocation-compare_at_price)\n- [`selling_plan_allocation.price_adjustments`](/docs/api/liquid/objects/selling_plan_allocation#selling_plan_allocation-price_adjustments)\n- [`selling_plan_allocation.selling_plan.group_id`](/docs/api/liquid/objects/selling_plan#selling_plan-group_id)\n- [`selling_plan_allocation.selling_plan.options`](/docs/api/liquid/objects/selling_plan#selling_plan-options)\n- [`selling_plan_allocation.selling_plan.price_adjustments`](/docs/api/liquid/objects/selling_plan#selling_plan-price_adjustments)\n- [`selling_plan_allocation.selling_plan_group_id`](/docs/api/liquid/objects/selling_plan_allocation#selling_plan_allocation-selling_plan_group_id)\n\n&gt; Tip:\n&gt; If you need to show selling plan information post-purchase, then you should use [`selling_plan.name`](/docs/api/liquid/objects/selling_plan#selling_plan-name).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "selling_plan_allocation",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The selling plan allocation of the line item. If the line item doesn't have a selling plan allocation, then `nil` is returned.",
        "name": "selling_plan_allocation"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; This field is applicable for cart line item only.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "line_item"
          }
        ],
        "summary": "The components of a line item.",
        "name": "item_components"
      }
    ],
    "summary": "A line in a cart, checkout, or order. Each line item represents a product variant.",
    "name": "line_item",
    "examples": [

    ],
    "json_data": {
      "path": "/",
      "handle": "customer.orders[4].line_items[0]",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "linklist",
          "property": "links"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "To learn about how to implement navigation in a theme, refer to [Add navigation to your theme](/themes/navigation-search/navigation).",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "A link is considered to be active if the current URL path matches, or contains, the link's [url](/docs/api/liquid/objects/link#link-url).\nFor example, if the current URL path is `/blog/potion-notions/new-potions-for-spring`, then the following link URLs\nwould be considered active:\n\n- `/blog/potion-notions/new-potions-for-spring`\n- `/blog/potion-notions`\n\n&gt; Tip:\n&gt; The `link.active` property is useful for menu designs that highlight when top-level navigation categories are being\n&gt; viewed. For example, if a customer is viewing an article from the \"Potion notions\" blog, then the \"Potion notions\" link\n&gt; is highlighted in the menu.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the link is active. Returns `false` if not.",
        "name": "active"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; URL parameters are ignored when determining a match.\n&gt;\n&gt; Product URLs [within the context of a collection](/docs/api/liquid/filters/within) are treated as equal to a standard product\n&gt; URL for the same product.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the current URL path matches the [URL](/docs/api/liquid/objects/link#link-url) of the link. Returns `false` if not.",
        "name": "current"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "A link is considered to be active if the current URL path matches, or contains, the [URL](/docs/api/liquid/objects/link#link-url) of\nthe link.\n\nFor example, if the current URL path is `/blog/potion-notions/new-potions-for-spring`, then the following link URLs\nwould be considered active:\n\n- `/blog/potion-notions/new-potions-for-spring`\n- `/blog/potion-notions`",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if a link's child link is active. Returns `false` if not.",
        "name": "child_active"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; URL parameters are ignored when determining a match.\n&gt;\n&gt; Product URLs [within the context of a collection](/docs/api/liquid/filters/within) and standard product URLs are treated\n&gt; the same.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if current URL path matches a link's child link [URL](/docs/api/liquid/objects/link#link-url). Returns `false` if not.",
        "name": "child_current"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [handle](/docs/api/liquid/basics#handles) of the link.",
        "name": "handle"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [
          {
            "name": "Check the number of links",
            "description": "",
            "syntax": "",
            "path": "/",
            "raw_liquid": "{% for link in linklists.main-menu.links -%}\n  {% if link.links.size &gt; 0 -%}\n    - {{ link.title }} ({{ link.links.size }} children)&lt;br&gt;\n  {%- else -%}\n    - {{ link.title }}&lt;br&gt;\n  {%- endif %}\n{%- endfor %}",
            "parameter": false,
            "display_type": "text",
            "show_data_tab": true
          }
        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "link"
          }
        ],
        "summary": "The child links of the link.",
        "name": "links"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The object can be one of the following:\n\n- [`article`](/docs/api/liquid/objects/article)\n- [`blog`](/docs/api/liquid/objects/blog)\n- [`collection`](/docs/api/liquid/objects/collection)\n- [`page`](/docs/api/liquid/objects/page)\n- [`policy`](/docs/api/liquid/objects/policy)\n- [`product`](/docs/api/liquid/objects/product)",
        "examples": [

        ],
        "return_type": [
          {
            "type": "untyped",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The object associated with the link.",
        "name": "object"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The title of the link.",
        "name": "title"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "article_link",
            "description": "The link points to an article.",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "blog_link",
            "description": "The link points to an blog.",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "catalog_link",
            "description": "The link points to the [catalog page](https://help.shopify.com/manual/online-store/themes/customizing-themes/change-catalog-page).",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "collection_link",
            "description": "The link points to a collection.",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "collections_link",
            "description": "The link points to the [collection list page](/themes/architecture/templates/list-collections).",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "frontpage_link",
            "description": "The link points to the home page.",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "http_link",
            "description": "The link points to an external web page, or a product type or vendor collection.",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "page_link",
            "description": "The link points to a [page](https://help.shopify.com/manual/online-store/themes/theme-structure/pages).",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "policy_link",
            "description": "The link points to a [policy page](https://help.shopify.com/manual/checkout-settings/refund-privacy-tos#add-links-to-your-policies-within-pages-or-on-social-media).",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "product_link",
            "description": "The link points to a product page.",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "search_link",
            "description": "The link points to the search page.",
            "array_value": ""
          }
        ],
        "summary": "The type of the link.",
        "name": "type"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The number of nested levels under the link.",
        "name": "levels"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The URL of the link.",
        "name": "url"
      }
    ],
    "summary": "A link in a [menu](https://help.shopify.com/manual/online-store/menus-and-links/drop-down-menus).",
    "name": "link",
    "examples": [

    ],
    "json_data": {
      "path": "/",
      "handle": "linklists.to_a[0].links[2]",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": true,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [

    ],
    "summary": "All of the [menus](https://help.shopify.com/manual/online-store/menus-and-links/drop-down-menus) in a store.",
    "name": "linklists",
    "examples": [
      {
        "name": "",
        "description": "You can access a specific menu through the `linklists` object using the menu's [handle](/docs/api/liquid/basics#handles).\n",
        "syntax": "",
        "path": "/",
        "raw_liquid": "&lt;!-- Main menu --&gt;\n{% for link in linklists.main-menu.links -%}\n  {{ link.title | link_to: link.url }}\n{%- endfor %}\n\n&lt;!-- Footer menu --&gt;\n{% for link in linklists['footer'].links -%}\n  {{ link.title | link_to: link.url }}\n{%- endfor %}",
        "parameter": false,
        "display_type": "text",
        "show_data_tab": true
      }
    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": ""
    },
    "return_type": [
      {
        "type": "array",
        "name": "",
        "description": "",
        "array_value": "linklist"
      }
    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "linklists",
          "property": ""
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "To learn about how to implement navigation in a theme, refer to [Add navigation to your theme](/themes/navigation-search/navigation).",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "link"
          }
        ],
        "summary": "The links in the menu.",
        "name": "links"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [handle](/docs/api/liquid/basics#handles) of the menu.",
        "name": "handle"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; There's a maximum of 3 levels.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The number of nested levels in the menu.",
        "name": "levels"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The title of the menu.",
        "name": "title"
      }
    ],
    "summary": "A [menu](https://help.shopify.com/manual/online-store/menus-and-links/drop-down-menus) in a store.",
    "name": "linklist",
    "examples": [

    ],
    "json_data": {
      "path": "/",
      "handle": "linklists.to_a[0]",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "forloop",
          "property": "parentloop"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The total number of iterations in the loop.",
        "name": "length"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If the current `for` loop isn't nested inside another `for` loop, then `nil` is returned.",
        "examples": [
          {
            "name": "Use the `parentloop` property",
            "description": "",
            "syntax": "",
            "path": "/",
            "raw_liquid": "{% for i in (1..3) -%}\n  {% for j in (1..3) -%}\n    {{ forloop.parentloop.index }} - {{ forloop.index }}\n  {%- endfor %}\n{%- endfor %}",
            "parameter": false,
            "display_type": "text",
            "show_data_tab": true
          }
        ],
        "return_type": [
          {
            "type": "forloop",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The parent `forloop` object.",
        "name": "parentloop"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The 1-based index of the current iteration.",
        "name": "index"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The 0-based index of the current iteration.",
        "name": "index0"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The 1-based index of the current iteration, in reverse order.",
        "name": "rindex"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The 0-based index of the current iteration, in reverse order.",
        "name": "rindex0"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the current iteration is the first. Returns `false` if not.",
        "name": "first"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the current iteration is the last. Returns `false` if not.",
        "name": "last"
      }
    ],
    "summary": "Information about a parent [`for` loop](/docs/api/liquid/tags/for).",
    "name": "forloop",
    "examples": [
      {
        "name": "Use the `forloop` object",
        "description": "",
        "syntax": "",
        "path": "/",
        "raw_liquid": "{% for page in pages -%}\n  {%- if forloop.length &gt; 0 -%}\n    {{ page.title }}{% unless forloop.last %}, {% endunless -%}\n  {%- endif -%}\n{% endfor %}",
        "parameter": false,
        "display_type": "text",
        "show_data_tab": true
      }
    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": "{\"first\":true,\"index\":1,\"index0\":0,\"last\":false,\"length\":4,\"rindex\":3}"
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The total number of iterations in the loop.",
        "name": "length"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The 1-based index of the current column.",
        "name": "col"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The 1-based index of current row.",
        "name": "row"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The 1-based index of the current iteration.",
        "name": "index"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The 0-based index of the current iteration.",
        "name": "index0"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The 0-based index of the current column.",
        "name": "col0"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The 1-based index of the current iteration, in reverse order.",
        "name": "rindex"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The 0-based index of the current iteration, in reverse order.",
        "name": "rindex0"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the current iteration is the first. Returns `false` if not.",
        "name": "first"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the current iteration is the last. Returns `false` if not.",
        "name": "last"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the current column is the first in the row. Returns `false` if not.",
        "name": "col_first"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the current column is the last in the row. Returns `false` if not.",
        "name": "col_last"
      }
    ],
    "summary": "Information about a parent [`tablerow` loop](/docs/api/liquid/tags/tablerow).",
    "name": "tablerowloop",
    "examples": [

    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": "{\"col\":1,\"col0\":0,\"col_first\":true,\"col_last\":false,\"first\":true,\"index\":1,\"index0\":0,\"last\":false,\"length\":5,\"rindex\":5,\"rindex0\":4,\"row\":1}"
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": true,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "The `localization` object can be used in a [localization form](/docs/api/liquid/tags/form#form-localization).\n\nTo learn about how to offer localization options in your theme, refer to [Support multiple currencies and languages](/themes/internationalization/multiple-currencies-languages).",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "country"
          }
        ],
        "summary": "The countries that are available on the store.",
        "name": "available_countries"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "shop_locale"
          }
        ],
        "summary": "The languages that are available on the store.",
        "name": "available_languages"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "market",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The currently selected market on the storefront.",
        "name": "market"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "country",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The currently selected country on the storefront.",
        "name": "country"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "shop_locale",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The currently selected language on the storefront.",
        "name": "language"
      }
    ],
    "summary": "Information about the countries and languages that are available on a store.",
    "name": "localization",
    "examples": [

    ],
    "json_data": {
      "path": "/",
      "handle": "localization",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "store_availability",
          "property": "location"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "&gt; Tip:\n&gt; The `location` object is defined only if one or more locations has [local pickup](https://help.shopify.com/manual/shipping/setting-up-and-managing-your-shipping/local-methods/local-pickup)\n&gt; enabled.",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The location's ID.",
        "name": "id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The location's name.",
        "name": "name"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "address",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The location's address.",
        "name": "address"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If the location's address isn't verified, then `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The latitude of the location's address.",
        "name": "latitude"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If the location's address isn't verified, then `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The longitude of the location's address.",
        "name": "longitude"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; To learn about how to create metafields, refer to [Create and manage metafields](/apps/metafields/manage) or visit\n&gt; the [Shopify Help Center](https://help.shopify.com/manual/metafields).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "untyped",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [metafields](/docs/api/liquid/objects/metafield) applied to the location.",
        "name": "metafields"
      }
    ],
    "summary": "A store [location](https://help.shopify.com/manual/locations).",
    "name": "location",
    "examples": [

    ],
    "json_data": {
      "path": "/products/health-potion?variant=39897499729985",
      "handle": "product.selected_variant.store_availabilities[0].location",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "localization",
          "property": "market"
        },
        {
          "object": "country",
          "property": "market"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "To learn more about markets, refer to [Shopify Markets](/docs/apps/markets).\nTo make sure that visitors interact with the optimal version of a store using Shopify Markets,\nrefer to [Detect and set a visitor's optimal localization](/docs/themes/markets/localization-discovery).",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ID of the market.",
        "name": "id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [handle](/docs/api/liquid/basics#handles) of the market.",
        "name": "handle"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; To learn about how to create metafields, refer to [Create and manage\n&gt; metafields](/apps/metafields/manage) or visit the [Shopify Help\n&gt; Center](https://help.shopify.com/manual/metafields).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "metafield"
          }
        ],
        "summary": "The [metafields](/docs/api/liquid/objects/metafield) applied to the market.",
        "name": "metafields"
      }
    ],
    "summary": "A group of one or more regions of the world that a merchant is targeting for sales.",
    "name": "market",
    "examples": [

    ],
    "json_data": {
      "path": "/",
      "handle": "localization.market",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "metafield",
          "property": "value"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "&gt; Tip:\n&gt; To learn about metafield types, refer to [Metafield types](/apps/metafields/types).",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "dimension",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "volume",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "weight",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The measurement type.",
        "name": "type"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The measurement value.",
        "name": "value"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The measurement unit.",
        "name": "unit"
      }
    ],
    "summary": "A measurement from one of the following metafield types:\n\n- `dimension`\n- `volume`\n- `weight`",
    "name": "measurement",
    "examples": [

    ],
    "json_data": {
      "path": "/products/dandelion-milk",
      "handle": "product.metafields.details.milk_container_volume.value",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "app",
          "property": "metafields"
        },
        {
          "object": "article",
          "property": "metafields"
        },
        {
          "object": "blog",
          "property": "metafields"
        },
        {
          "object": "collection",
          "property": "metafields"
        },
        {
          "object": "customer",
          "property": "metafields"
        },
        {
          "object": "location",
          "property": "metafields"
        },
        {
          "object": "order",
          "property": "metafields"
        },
        {
          "object": "page",
          "property": "metafields"
        },
        {
          "object": "product",
          "property": "metafields"
        },
        {
          "object": "shop",
          "property": "metafields"
        },
        {
          "object": "variant",
          "property": "metafields"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "To learn about how to access a metafield on a specific object, refer to [Access metafields](/docs/api/liquid/objects/metafield#metafield-access-metafields).\n\nMetafields support [multiple data types](/apps/metafields/types), which determine the kind of information that's stored\nin the metafield. You can also output the metafield content in a type-specific format using\n[metafield filters](/docs/api/liquid/filters/metafield-filters).\n\n&gt; Note:\n&gt; You can't create metafields in Liquid. Metafields can be created in only the following ways:\n&gt;\n&gt; - [In the Shopify admin](https://help.shopify.com/manual/metafields)\n&gt; - [Through an app](https://shopify.dev/apps/metafields)\n\n&gt; Note:\n&gt; Metafields of type `integer`, `json_string`, and `string` are older implementations that don't have the properties\n  noted on this page, and aren't compatible with metafield filters. To learn more, refer to [Deprecated metafields](/docs/api/liquid/objects/metafield#metafield-deprecated-metafields).",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The following table outlines the value format for each metafield type:\n\n&lt;table&gt;\n  &lt;thead&gt;\n    &lt;tr&gt;\n      &lt;th&gt;Type&lt;/th&gt;\n      &lt;th&gt;Returned format&lt;/th&gt;\n    &lt;/tr&gt;\n  &lt;/thead&gt;\n  &lt;tbody&gt;\n    &lt;tr&gt;\n      &lt;td&gt;\n        &lt;code&gt;single_line_text_field&lt;/code&gt;&lt;br&gt;&lt;br&gt;\n        &lt;code&gt;multi_line_text_field&lt;/code&gt;\n      &lt;/td&gt;\n      &lt;td&gt;&lt;a href=\"/docs/api/liquid/basics#string\"&gt;A string&lt;/a&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n      &lt;td&gt;\n        &lt;code&gt;rich_text_field&lt;/code&gt;\n      &lt;/td&gt;\n      &lt;td&gt;A field that supports headings, lists, links, bold, and italics&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n      &lt;td&gt;\n        &lt;code&gt;product_reference&lt;/code&gt;\n      &lt;/td&gt;\n      &lt;td&gt;&lt;a href=\"/docs/api/liquid/objects/product\"&gt;A product object&lt;/a&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n      &lt;td&gt;\n        &lt;code&gt;collection_reference&lt;/code&gt;\n      &lt;/td&gt;\n      &lt;td&gt;&lt;a href=\"/docs/api/liquid/objects/collection\"&gt;A collection object&lt;/a&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n      &lt;td&gt;\n        &lt;code&gt;variant_reference&lt;/code&gt;\n      &lt;/td&gt;\n      &lt;td&gt;&lt;a href=\"/docs/api/liquid/objects/variant\"&gt;A variant object&lt;/a&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n      &lt;td&gt;\n       &lt;code&gt;page_reference&lt;/code&gt;\n     &lt;/td&gt;\n     &lt;td&gt;&lt;a href=\"/docs/api/liquid/objects/page\"&gt;A page object&lt;/a&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n      &lt;td&gt;\n        &lt;code&gt;file_reference&lt;/code&gt;\n     &lt;/td&gt;\n     &lt;td&gt;\n       &lt;a href=\"/docs/api/liquid/objects/generic-file\"&gt;A generic_file object&lt;/a&gt;&lt;br&gt;&lt;br&gt;\n       &lt;a href=\"/docs/api/liquid/objects/media\"&gt;A media object (images and videos only)&lt;/a&gt;\n     &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n      &lt;td&gt;\n        &lt;code&gt;number_integer&lt;/code&gt;&lt;br&gt;&lt;br&gt;\n        &lt;code&gt;number_decimal&lt;/code&gt;\n      &lt;/td&gt;\n      &lt;td&gt;&lt;a href=\"/docs/api/liquid/basics#number\"&gt;A number&lt;/a&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n      &lt;td&gt;\n        &lt;code&gt;date&lt;/code&gt;&lt;br&gt;&lt;br&gt;\n        &lt;code&gt;date_time&lt;/code&gt;\n      &lt;/td&gt;\n      &lt;td&gt;A date string. To format the string, use the &lt;a href=\"/docs/api/liquid/filters/date\"&gt;date&lt;/a&gt; filter.&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n      &lt;td&gt;\n        &lt;code&gt;url_reference&lt;/code&gt;\n      &lt;/td&gt;\n      &lt;td&gt;&lt;a href=\"/docs/api/liquid/basics#string\"&gt;A url string&lt;/a&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n      &lt;td&gt;\n        &lt;code&gt;json&lt;/code&gt;\n      &lt;/td&gt;\n      &lt;td&gt;&lt;a href=\"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/JSON\"&gt;A JSON object&lt;/a&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n      &lt;td&gt;\n       &lt;code&gt;boolean&lt;/code&gt;\n      &lt;/td&gt;\n      &lt;td&gt;&lt;a href=\"/docs/api/liquid/basics#boolean\"&gt;A boolean&lt;/a&gt;&lt;/td&gt;\n    &lt;tr&gt;\n      &lt;td&gt;\n        &lt;code&gt;color&lt;/code&gt;\n      &lt;/td&gt;\n      &lt;td&gt;&lt;a href=\"/docs/api/liquid/objects/color\"&gt;A color object&lt;/a&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n      &lt;td&gt;\n        &lt;code&gt;weight&lt;/code&gt;&lt;br&gt;&lt;br&gt;\n        &lt;code&gt;volume&lt;/code&gt;&lt;br&gt;&lt;br&gt;\n        &lt;code&gt;dimension&lt;/code&gt;\n      &lt;/td&gt;\n      &lt;td&gt;&lt;a href=\"/docs/api/liquid/objects/measurement\"&gt;A measurement object&lt;/a&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n      &lt;td&gt;\n        &lt;code&gt;rating&lt;/code&gt;\n      &lt;/td&gt;\n      &lt;td&gt;&lt;a href=\"/docs/api/liquid/objects/rating\"&gt;A rating object&lt;/a&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n      &lt;td&gt;\n        &lt;code&gt;list&lt;/code&gt;\n      &lt;/td&gt;\n      &lt;td&gt;&lt;a href=\"/docs/api/liquid/basics#array\"&gt;An array of objects, numbers, or strings, depending on the list type&lt;/a&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n      &lt;td&gt;\n        &lt;code&gt;money&lt;/code&gt;\n      &lt;/td&gt;\n      &lt;td&gt;&lt;a href=\"/docs/api/liquid/objects/money\"&gt;A money object, displayed in the customer's local (presentment) currency.&lt;/a&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n  &lt;/tbody&gt;\n&lt;/table&gt;",
        "examples": [

        ],
        "return_type": [
          {
            "type": "untyped",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The value of the metafield.",
        "name": "value"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "single_line_text_field",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "multi_line_text_field",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "rich_text_field",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "product_reference",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "collection_reference",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "variant_reference",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "page_reference",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "file_reference",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "number_integer",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "number_decimal",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "date",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "date_time",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "url_reference",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "json",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "boolean",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "color",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "weight",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "volume",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "dimension",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "rating",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "list",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "money",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [type](/apps/metafields/types) of the metafield.",
        "name": "type"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; To learn about metafield types, refer to [Metafield types](/apps/metafields/types).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the metafield is a list type. Returns `false` if not.",
        "name": "list?"
      }
    ],
    "summary": "A [metafield](/apps/metafields) attached to a parent object.",
    "name": "metafield",
    "examples": [
      {
        "name": "Access metafields",
        "description": "The access path for metafields consists of two layers:\n\n- namespace - A grouping of metafields to prevent conflicts.\n- key - The metafield name.\n\nGiven this, you can access the metafield object with the following syntax:\n\n```liquid\n{{ resource.metafields.namespace.key }}\n```\n",
        "syntax": "",
        "path": "/products/health-potion",
        "raw_liquid": "Type: {{ product.metafields.information.directions.type }}\nValue: {{ product.metafields.information.directions.value }}",
        "parameter": false,
        "display_type": "text",
        "show_data_tab": false
      },
      {
        "name": "Accessing metafields of type `json`",
        "description": "The `value` property of metafields of type `json` returns a [JSON object](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/JSON). You can access the properties of this object directly in Liquid, either by name or 0-based index. You can also iterate through the properties.\n",
        "syntax": "",
        "path": "/products/charcoal",
        "raw_liquid": "Temperature: {{ product.metafields.information.burn_temperature.value.temperature }}\nUnit: {{ product.metafields.information.burn_temperature.value['unit'] }}\n\n{% for property in product.metafields.information.burn_temperature.value -%}\n  {{ property.first | capitalize }}: {{ property.last }}\n{%- endfor %}",
        "parameter": false,
        "display_type": "text",
        "show_data_tab": false
      },
      {
        "name": "Accessing metafields of type `list`",
        "description": "The `value` property of metafields of type `list` returns an array. You can iterate through the array to access the values.\n",
        "syntax": "",
        "path": "/products/ground-mandrake-root",
        "raw_liquid": "{% for item in product.metafields.information.combine_with.value -%}\n  {{ item.product.title }}\n{%- endfor %}",
        "parameter": false,
        "display_type": "text",
        "show_data_tab": true
      },
      {
        "name": "",
        "description": "&lt;br&gt;&lt;br&gt; If the list is of type `single_line_text_field`, then you can access the items in the array directly in Liquid by using a 0-based index.\n",
        "syntax": "",
        "path": "/products/health-potion",
        "raw_liquid": "First item in list: {{ product.metafields.information.pickup_locations.value[0] }}\nLast item in list: {{ product.metafields.information.pickup_locations.value.last }}",
        "parameter": false,
        "display_type": "text",
        "show_data_tab": true
      },
      {
        "name": "Deprecated metafields",
        "description": "Deprecated metafields are older metafield types with limited functionality. The following metafield types are deprecated:\n\n- `integer`\n- `json_string`\n- `string`\n\nThese metafield types don't have the same metafield object properties mentioned in the previous sections. Instead, they return the metafield value directly.\n\nThe following table outlines the value type for each deprecated metafield type:\n\n| Metafield type | Value type |\n| --- | --- |\n| `integer` | [An integer](/docs/api/liquid/basics#number) |\n| `json_string` | [A JSON object](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/JSON) |\n| `string` | [A string](/docs/api/liquid/basics#string) |\n",
        "syntax": "",
        "path": "/",
        "raw_liquid": "",
        "parameter": false,
        "display_type": "text",
        "show_data_tab": true
      }
    ],
    "json_data": {
      "path": "/products/health-potion",
      "handle": "product.metafields.information.directions",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "One or more corresponding [`metaobject`](/docs/api/liquid/objects#metaobject) objects contain values for\nthe fields specified in the metaobject definition.",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "metaobject"
          }
        ],
        "summary": "The [metaobjects](/docs/api/liquid/objects#metaobject) that follow the definition.",
        "name": "values"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The total number of entries for the metaobject definition.",
        "name": "values_count"
      }
    ],
    "summary": "A `metaobject_definition` defines the structure of a metaobject type for the store, which consists of\na merchant-defined set of [field definitions](https://help.shopify.com/en/manual/metafields/metafield-definitions).",
    "name": "metaobject_definition",
    "examples": [
      {
        "name": "Loop over entries of a metaobject definition",
        "description": "If a metaobject definition has multiple metaobject entries, then you can loop over them using the `values` property.\nYou can loop over a maximum of 50 entries in a metaobject definition.\nFor example, you can display the field `author` for each metaobject using the following `forloop`:\n\n```liquid\n{% for testimonial in shop.metaobjects.testimonials.values %}\n  {{ testimonial.author.value }}\n{% endfor %}\n```\n\n&gt; Note:\n&gt; When the [`publishable` capability](/apps/data-extensions/metaobjects/capabilities) is enabled, loops return only metaobjects with a status of `active`. Metaobjects with a status of `draft` are skipped.\n",
        "syntax": "",
        "path": "",
        "raw_liquid": "",
        "parameter": false,
        "display_type": "text",
        "show_data_tab": false
      }
    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "shop",
          "property": "metaobjects"
        }
      ],
      "template": [
        "metaobject"
      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "metaobject_system",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Basic information about the metaobject. These properties are grouped under the `system` object to avoid collisions between system property names and user-defined metaobject fields.",
        "name": "system"
      }
    ],
    "summary": "A metaobject entry, which includes the values for a set of [fields](/docs/api/liquid/objects#metafield).\nThe set is defined by the parent [`metaobject_definition`](/docs/api/liquid/objects#metaobject_definition).",
    "name": "metaobject",
    "examples": [
      {
        "name": "Access metaobjects individually",
        "description": "The access path for a metaobject consists of two layers:\n\n- type - The type of the parent metaobject definition.\n- handle - The unique [handle](/docs/api/liquid/basics#handles) of the metaobject.\n\nGiven this, you can access a metaobject with the following syntax:\n\n```liquid\n{{ shop.metaobjects.type.handle }}\n```\n\nYou can also use square bracket notation:\n\n```liquid\n{{ shop.metaobjects['type']['handle'] }}\n```\n\nA metaobjects's field values can be accessed using the key of the desired field:\n\n```liquid\n{{ shop.metaobjects.testimonials.homepage.title }}\n{{ shop.metaobjects['highlights']['washable'].image.value }}\n```\n\n&gt; Note:\n&gt; When the [`publishable` capability](/apps/data-extensions/metaobjects/capabilities) is enabled, a metaobject can only be accessed if its status is `active`.  If its status is `draft`, then the return value is `nil`.\n",
        "syntax": "",
        "path": "",
        "raw_liquid": "",
        "parameter": false,
        "display_type": "text",
        "show_data_tab": false
      },
      {
        "name": "Usage in metaobject templates",
        "description": "Within a metaobject template, the `metaobject` Liquid object represents the metaobject drop being rendered by the template. You can access it directly as `{{ metaobject }}`.\n\nHere's a basic example of accessing a field within the associated metaobject template:\n```liquid\n{{ metaobject.title.value }}\n```\n\nIn this example, replace `title` with the key of the field you want to access. This will output the value of that field for the current metaobject.\n",
        "syntax": "",
        "path": "",
        "raw_liquid": "",
        "parameter": false,
        "display_type": "text",
        "show_data_tab": false
      }
    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "metaobject",
          "property": "system"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "This is a free-form string that's defined when the metaobject definition is created.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The type of the metaobject definition.",
        "name": "type"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The unique [handle](/api/liquid/basics#handles) of the metaobject.",
        "name": "handle"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ID of the metaobject.",
        "name": "id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "Only set for metaobjects that have the `online_store` capability.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The relative URL of the metaobject.",
        "name": "url"
      }
    ],
    "summary": "Basic information about a [`metaobject`](/api/liquid/objects#metaobject). These properties are grouped under the `system` object to avoid collisions between system property names and user-defined metaobject fields.",
    "name": "metaobject_system",
    "examples": [
      {
        "name": "Using the `metaobject_system` object",
        "description": "You can access the `metaobject_system` object and its properties through the metaobject's `system` property. You can use the following syntax:\n\n```liquid\n{{ shop.metaobjects.testimonials[\"home_page\"].system.id }}\n```\n\nYou can also access `metaobject_system` properties when iterating over a list of metaobjects:\n\n```liquid\n{% for metaobject in product.metafields.custom.mixed_metaobject_list.value %}\n  {% if metaobject.system.type == \"testimonial\" %}\n    {% render 'testimonial' with metaobject as testimonial  %}\n  {% else %}\n    {{ metaobject.system.handle }}\n  {% endif %}\n{% endfor %}\n```\n",
        "syntax": "",
        "path": "",
        "raw_liquid": "",
        "parameter": false,
        "display_type": "text",
        "show_data_tab": false
      }
    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "product",
          "property": "media"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "&gt; Tip:\n&gt; Use the [`model_viewer_tag` filter](/docs/api/liquid/filters/model_viewer_tag) to output a [Google model viewer component](https://modelviewer.dev)\n&gt; for the model.",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "model_source"
          }
        ],
        "summary": "The source files for the model.",
        "name": "sources"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The alt text of the model.",
        "name": "alt"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ID of the model.",
        "name": "id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [
          {
            "name": "Filter for media of a specific type",
            "description": "You can use the `media_type` property with the [`where` filter](/docs/api/liquid/filters/where) to filter the [`product.media` array](/docs/api/liquid/objects/product#product-media) for all media of a desired type.\n",
            "syntax": "",
            "path": "/products/potion-bottle",
            "raw_liquid": "{% assign models = product.media | where: 'media_type', 'model' %}\n\n{% for model in models %}\n  {{- model | model_viewer_tag }}\n{% endfor %}",
            "parameter": false,
            "display_type": "text",
            "show_data_tab": true
          }
        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The media type of the model. Always returns `model`.",
        "name": "media_type"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The position of the model in the [`product.media`](/docs/api/liquid/objects/product#product-media) array.",
        "name": "position"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "image",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "A preview image for the model.",
        "name": "preview_image"
      }
    ],
    "summary": "A 3D model uploaded as product media.",
    "name": "model",
    "examples": [

    ],
    "json_data": {
      "path": "/products/potion-bottle",
      "handle": "product.featured_media",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "model",
          "property": ""
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The format of the model source file.",
        "name": "format"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the model source file.",
        "name": "mime_type"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [CDN URL](/themes/best-practices/performance/platform#shopify-cdn) of the model source file.",
        "name": "url"
      }
    ],
    "summary": "A model source file.",
    "name": "model_source",
    "examples": [

    ],
    "json_data": {
      "path": "/products/potion-bottle",
      "handle": "product.featured_media.sources[0]",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "metafield",
          "property": "value"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted price.",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "currency",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The customer's local (presentment) currency.",
        "name": "currency"
      }
    ],
    "summary": "A money value, in the the customer's local (presentment) currency.",
    "name": "money",
    "examples": [
      {
        "name": "Referencing money objects directly",
        "description": "When a money object is referenced directly, the money value in cents is returned.\n",
        "syntax": "",
        "path": "/products/dried-chamomile",
        "raw_liquid": "{{ product.metafields.details.price_per_100g.value }}",
        "parameter": false,
        "display_type": "text",
        "show_data_tab": true
      }
    ],
    "json_data": {
      "path": "/products/dried-chamomile",
      "handle": "product.metafields.details.price_per_100g.value",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "checkout",
          "property": "order"
        },
        {
          "object": "customer",
          "property": "last_order"
        },
        {
          "object": "customer",
          "property": "orders"
        }
      ],
      "template": [
        "customers/order"
      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [
      {
        "deprecated": true,
        "deprecation_reason": "Deprecated because not all discount types and details are captured.\n\nThe `order.discounts` property has been replaced by [`order.discount_applications`](/docs/api/liquid/objects/order#order-discount_applications).",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "discount",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The discounts on the order.",
        "name": "discounts"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If there are no attributes on the order, then `nil` is returned.\n&gt; Tip:\n&gt; Attributes are [collected with the cart](https://shopify.dev/themes/architecture/templates/cart#support-cart-notes-and-attributes).",
        "examples": [
          {
            "name": "Output the attributes",
            "description": "```liquid\n&lt;ul&gt;\n  {% for attribute in order.attributes -%}\n    &lt;li&gt;&lt;strong&gt;{{ attribute.first }}:&lt;/strong&gt; {{ attribute.last }}&lt;/li&gt;\n  {%- endfor %}\n&lt;/ul&gt;\n```\n",
            "syntax": "",
            "path": "/",
            "raw_liquid": "",
            "parameter": false,
            "display_type": "text",
            "show_data_tab": true
          }
        ],
        "return_type": [
          {
            "type": "untyped",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The attributes on the order.",
        "name": "attributes"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "customer",
            "description": "Customer changed/cancelled order",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "declined",
            "description": "Payment declined",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "fraud",
            "description": "Fraudulent order",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "inventory",
            "description": "Items unavailable",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "staff",
            "description": "Staff error",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "other",
            "description": "Other",
            "array_value": ""
          }
        ],
        "summary": "The reason that the order was cancelled.",
        "name": "cancel_reason"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; Use this property to output the cancellation reason on the storefront.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The localized version of the [cancellation reason](/docs/api/liquid/objects/order#order-cancel_reason) for the order.",
        "name": "cancel_reason_label"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the order was cancelled. Returns `false` if not.",
        "name": "cancelled"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; Use the [`date` filter](/docs/api/liquid/filters/date) to format the timestamp.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "A timestamp for when the order was cancelled.",
        "name": "cancelled_at"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "discount_application"
          }
        ],
        "summary": "The discount applications that apply at the order level.",
        "name": "cart_level_discount_applications"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; Use the [`date` filter](/docs/api/liquid/filters/date) to format the timestamp.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "A timestamp for when the order was created.",
        "name": "created_at"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If there are no duties, then `nil` is returned. The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted amount.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The sum of all duties applied to the line items in the order in the currency's subunit.",
        "name": "total_duties"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The URL for the customer to view the order in their account.",
        "name": "customer_url"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "customer",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The customer that placed the order.",
        "name": "customer"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "discount_application"
          }
        ],
        "summary": "All of the discount applications for the order and its line items.",
        "name": "discount_applications"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted amount.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The total amount of all discounts applied to the order in the currency's subunit.",
        "name": "total_discounts"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The amount is calculated after refunds are applied, so is equal to `order.total_price` minus `order.total_refunded_amount`.\n\nThe value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted amount.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The net amount of the order in the currency's subunit.",
        "name": "total_net_amount"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted amount.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The total amount of taxes applied to the order in the currency's subunit.",
        "name": "tax_price"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted amount.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The total amount that's been refunded from the order in the currency's subunit.",
        "name": "total_refunded_amount"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If no email is associated with the order, then `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The email that's associated with the order.",
        "name": "email"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "authorized",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "expired",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "paid",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "partially_paid",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "partially_refunded",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "pending",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "refunded",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "unpaid",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "voided",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The order's financial status.",
        "name": "financial_status"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; Use this property to output the financial status on the storefront.",
        "examples": [

        ],
        "return_type": [

        ],
        "summary": "The localized version of the [financial status](/docs/api/liquid/objects/order#order-financial_status) of the order.",
        "name": "financial_status_label"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The fulfillment status of the order.",
        "name": "fulfillment_status"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; Use this property to output the fulfillment status on the storefront.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "complete",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "fulfilled",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "partial",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "restocked",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "unfulfilled",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The localized version of the [fulfillment status](/docs/api/liquid/objects/order#order-fulfillment_status) of the order.",
        "name": "fulfillment_status_label"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ID of the order.",
        "name": "id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; To learn about how to create metafields, refer to [Create and manage metafields](/apps/metafields/manage) or visit\n&gt; the [Shopify Help Center](https://help.shopify.com/manual/metafields).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "untyped",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [metafields](/docs/api/liquid/objects/metafield) applied to the order.",
        "name": "metafields"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The name of the order.",
        "name": "name"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If there's no note on the order, then `nil` is returned.\n&gt; Tip:\n&gt; Notes are [collected with the cart](https://shopify.dev/themes/architecture/templates/cart#support-cart-notes-and-attributes).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The note on the order.",
        "name": "note"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "A randomly generated alpha-numeric identifier for the order that may be shown to the customer\ninstead of the sequential order name. For example, \"XPAV284CT\", \"R50KELTJP\" or \"35PKUN0UJ\".\nThis value isn't guaranteed to be unique.",
        "name": "confirmation_number"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The integer representation of the order [name](/docs/api/liquid/objects/order#order-name).",
        "name": "order_number"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The URL for the [order status page](https://help.shopify.com/manual/orders/status-tracking) for the order.",
        "name": "order_status_url"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The new customer accounts includes a list of Buyers Orders and an Order Details View.\nThis liquid function exposes a URL to a specific Orders Details in new customer accounts.\n[Setup process for the new order details page](https://help.shopify.com/en/manual/customers/customer-accounts/new-customer-accounts)\ncan be found in the help center.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The URL for the new order details page.",
        "name": "customer_order_url"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The phone number associated with the order.",
        "name": "phone"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "address",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The shipping address of the order.",
        "name": "shipping_address"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "address",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The billing address of the order.",
        "name": "billing_address"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The tags are returned in alphabetical order.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "string"
          }
        ],
        "summary": "The [tags](https://help.shopify.com/manual/shopify-admin/productivity-tools/using-tags) on the order.",
        "name": "tags"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "tax_line"
          }
        ],
        "summary": "The tax lines on the order.",
        "name": "tax_lines"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "transaction"
          }
        ],
        "summary": "The transactions of the order.",
        "name": "transactions"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "line_item"
          }
        ],
        "summary": "The line items in the order.",
        "name": "line_items"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; These line items are used to calculate the the [subtotal price](/docs/api/liquid/objects/order#order-subtotal_price).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "line_item"
          }
        ],
        "summary": "The non-tip line items in the order.",
        "name": "subtotal_line_items"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The number of items in the order.",
        "name": "item_count"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "shipping_method"
          }
        ],
        "summary": "The shipping methods for the order.",
        "name": "shipping_methods"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted amount.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The sum of the prices of all of the line items in the order in the currency's subunit, after any line item discounts have\nbeen applied.",
        "name": "line_items_subtotal_price"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted amount.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The sum of the prices of the [subtotal line items](/docs/api/liquid/objects/order#order-subtotal_line_items) in the currency's subunit, after any line item or\ncart discounts have been applied.",
        "name": "subtotal_price"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; The total price is calculated before refunds are applied. Use [`order.total_net_amount`](/docs/api/liquid/objects/order#order-total_net_amount)\n&gt; to output the total minus any refunds.\n\nThe value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted amount.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The total price of the order in the currency's subunit.",
        "name": "total_price"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted amount.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The shipping price of the order in the currency's subunit.",
        "name": "shipping_price"
      }
    ],
    "summary": "An [order](https://help.shopify.com/manual/orders).",
    "name": "order",
    "examples": [

    ],
    "json_data": {
      "path": "/",
      "handle": "customer.orders[4]",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "pages",
          "property": ""
        },
        {
          "object": "metafield",
          "property": "value"
        }
      ],
      "template": [
        "page"
      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ID of the page.",
        "name": "id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The author of the page.",
        "name": "author"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [handle](/docs/api/liquid/basics#handles) of the page.",
        "name": "handle"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The title of the page.",
        "name": "title"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The name doesn't include the `page.` prefix, or the file extension (`.json` or `.liquid`).\n\n If a custom template isn't assigned to the page, then `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The name of the [custom template](/themes/architecture/templates#alternate-templates) assigned to the page.",
        "name": "template_suffix"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The content of the page.",
        "name": "content"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The relative URL of the page.",
        "name": "url"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; To learn about how to create metafields, refer to [Create and manage metafields](/apps/metafields/manage) or visit\n&gt; the [Shopify Help Center](https://help.shopify.com/manual/metafields).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "untyped",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [metafields](/docs/api/liquid/objects/metafield) applied to the page.",
        "name": "metafields"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; Use the [`date` filter](/docs/api/liquid/filters/date) to format the timestamp.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "A timestamp for when the page was published.",
        "name": "published_at"
      }
    ],
    "summary": "A [page](https://help.shopify.com/manual/online-store/themes/theme-structure/pages) on a store.",
    "name": "page",
    "examples": [

    ],
    "json_data": {
      "path": "/pages/about-us",
      "handle": "page",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "&gt; Tip:\n&gt; Use the [`default_pagination` filter](/docs/api/liquid/filters/default_pagination) to output pagination links.",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The number of items displayed per page.",
        "name": "page_size"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "For example, if you show 5 items per page and are on page 3, then the value of `paginate.current_offset` is 10.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The total number of items on pages previous to the current page.",
        "name": "current_offset"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The page number of the current page.",
        "name": "current_page"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "For example, if you paginate a collection of 120 products, then the value of `paginate.items` is 120.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The total number of items to be paginated.",
        "name": "items"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "Pagination parts are used to build pagination navigation.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "part"
          }
        ],
        "summary": "The pagination parts.",
        "name": "parts"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "part",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The pagination part to go to the next page.",
        "name": "next"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "part",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The pagination part to go to the previous page.",
        "name": "previous"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The total number of pages.",
        "name": "pages"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The default value is `page`.\n\nIf you paginate over an array defined in a setting or a metafield list type, then a unique key is appended to page to allow the paginated list to\noperate independently from other lists on the page. For example, a paginated list defined in a setting might use the key\n`page_a9e329dc`.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The URL parameter denoting the pagination.",
        "name": "page_param"
      }
    ],
    "summary": "Information about the pagination inside a set of [`paginate` tags](/docs/api/liquid/tags/paginate).",
    "name": "paginate",
    "examples": [

    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": "{\"current_offset\":10,\"current_page\":3,\"items\":17,\"next\":{},\"page_param\":\"page\",\"page_size\":5,\"pages\":4,\"parts\":[],\"previous\":{}}"
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "&gt; Note:\n&gt; The `predictive_search` object returns results only when rendered in a section using the Predictive Saerch API and the\n[Section Rendering API](/api/section-rendering). To learn about how to include predictive search in your theme,\n&gt; refer to [Add predictive search to your theme](/themes/navigation-search/search/predictive-search).",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` when being referenced inside a section that's been rendered using the Predictive Search API and\nthe Section Rendering API. Returns `false` if not.",
        "name": "performed"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "You can check whether any resources of a specific type were returned using the [`size` filter](/docs/api/liquid/filters/size).\n\n```liquid\n{% if predictive_search.resources.articles.size &gt; 0 %}\n  {% for article in predictive_search.resources.articles %}\n    {{ article.title }}\n  {% endfor %}\n{% endif %}\n```",
        "examples": [

        ],
        "return_type": [
          {
            "type": "predictive_search_resources",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The resources associated with the query.",
        "name": "resources"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; Use the [`highlight` filter](/docs/api/liquid/filters/highlight) to highlight the search terms in search results content.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The entered search terms.",
        "name": "terms"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "Searches can be performed on the following object types:\n\n- [`article`](/docs/api/liquid/objects/article)\n- [`collection`](/docs/api/liquid/objects/collection)\n- [`page`](/docs/api/liquid/objects/page)\n- [`product`](/docs/api/liquid/objects/product)\n\n&gt; Note:\n&gt; The types are determined by the [`type` query parameter](/api/ajax/reference/predictive-search#query-parameters).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "string"
          }
        ],
        "summary": "The object types that the search was performed on.",
        "name": "types"
      }
    ],
    "summary": "Information about the results from a predictive search query through the\n[Predictive Search API](/api/ajax/reference/predictive-search#get-locale-search-suggest).",
    "name": "predictive_search",
    "examples": [

    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": "{\"performed\":true,\"resources\":{},\"terms\":\"potion\",\"types\":[]}"
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "selling_plan_allocation",
          "property": "price_adjustments"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "To learn about how to support selling plans in your theme, refer to [Purchase options](/themes/pricing-payments/purchase-options).",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The number of orders that the price adjustment applies to.",
        "name": "order_count"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The 1-based index of the price adjustment in the [`selling_plan.price_adjustments` array](/docs/api/liquid/objects/selling_plan#selling_plan-price_adjustments).",
        "name": "position"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "percentage",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "fixed_amount",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "price",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The type of price adjustment.",
        "name": "value_type"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "How this value is interpreted depends on the [value type](/docs/api/liquid/objects/selling_plan_price_adjustment#selling_plan_price_adjustment-value_type) of\nthe price adjustment. The following table outlines what the value represents for each value type:\n\n| Value type | Value |\n| --- | --- |\n| `fixed_amount` | The amount that the original price is being adjusted by, in the currency's subunit. |\n| `percentage` | The percent amount that the original price is being adjusted by. |\n| `price` | The adjusted amount in the currency's subunit. |\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted price.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The value of the price adjustment as a decimal.",
        "name": "value"
      }
    ],
    "summary": "Information about how a selling plan changes the price of a variant for a given period of time.",
    "name": "selling_plan_price_adjustment",
    "examples": [

    ],
    "json_data": {
      "path": "/products/health-potion?selling_plan=610435137",
      "handle": "product.selected_selling_plan.price_adjustments[0]",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "all_products",
          "property": ""
        },
        {
          "object": "collection",
          "property": "products"
        },
        {
          "object": "line_item",
          "property": "product"
        },
        {
          "object": "link",
          "property": "object"
        },
        {
          "object": "metafield",
          "property": "value"
        },
        {
          "object": "recommendations",
          "property": "products"
        },
        {
          "object": "search",
          "property": "results"
        },
        {
          "object": "variant",
          "property": "product"
        }
      ],
      "template": [
        "product"
      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "variant"
          }
        ],
        "summary": "The variants of the product.",
        "name": "variants"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "image"
          }
        ],
        "summary": "The images attached to the product.",
        "name": "images"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; To learn about how to create metafields, refer to [Create and manage metafields](/apps/metafields/manage) or visit\n&gt; the [Shopify Help Center](https://help.shopify.com/manual/metafields).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "untyped",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [metafields](/docs/api/liquid/objects/metafield) applied to the product.",
        "name": "metafields"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "product_option"
          }
        ],
        "summary": "The options on the product.",
        "name": "options_with_values"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ID of the product.",
        "name": "id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The title of the product.",
        "name": "title"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [handle](/docs/api/liquid/basics#handles) of the product.",
        "name": "handle"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The name doesn't include the `product.` prefix, or the file extension (`.json` or `.liquid`).\n\nIf a custom template isn't assigned to the product, then `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The name of the [custom template](/themes/architecture/templates#alternate-templates) of the product.",
        "name": "template_suffix"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The vendor of the product.",
        "name": "vendor"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; This is the same value as [`product.content`](/docs/api/liquid/objects/product#product-content).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The description of the product.",
        "name": "description"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; This is the same value as [`product.description`](/docs/api/liquid/objects/product#product-description).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The description of the product.",
        "name": "content"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "image",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The first (featured) image attached to the product.",
        "name": "featured_image"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; You can use [media filters](/docs/api/liquid/filters/media-filters) to output media URLs and displays. To learn about how\n&gt; to include media in your theme, refer to [Support product media](/themes/product-merchandising/media/support-media).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "media",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The first (featured) media attached to the product.",
        "name": "featured_media"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; You can use [media filters](/docs/api/liquid/filters/media-filters) to output media URLs and displays. To learn about how\n&gt; to include media in your theme, refer to [Support product media](/themes/product-merchandising/media/support-media).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "media"
          }
        ],
        "summary": "The media attached to the product, sorted by the date it was added to the product.",
        "name": "media"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; This is the same value as [`product.price`](/docs/api/liquid/objects/product#product-price).\n\nThe value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted price.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The lowest price of any variants of the product in the currency's subunit.",
        "name": "price_min"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; This is the same value as [`product.price_min`](/docs/api/liquid/objects/product#product-price_min).\n\nThe value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted price.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The lowest price of any variants of the product in the currency's subunit.",
        "name": "price"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted price.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The highest price of any variants of the product in the currency's subunit.",
        "name": "price_max"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the product's variant prices vary. Returns `false` if not.",
        "name": "price_varies"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; The selected variant is determined by the `variant` URL parameter. The `selected_variant` parameter is available on product pages only.\n\nFor a variant to be available, it needs to meet one of the following criteria:\n\n- The `variant.inventory_quantity` is greater than 0.\n- The `variant.inventory_policy` is set to `continue`.\n- The `variant.inventory_management` is `nil`.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "variant",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The currently selected or first available variant of the product.",
        "name": "selected_or_first_available_variant"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; Collections that aren't [available](https://help.shopify.com/manual/products/collections/make-collections-available) on\n&gt; the Online Store sales channel aren't included.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "collection"
          }
        ],
        "summary": "The collections that the product belongs to.",
        "name": "collections"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If no variant is currently selected, then `nil` is returned.\n\n&gt; Note:\n&gt; The selected variant is determined by the `variant` URL parameter. This URL parameter is available on product pages URLs only.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "variant",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The currently selected variant of the product.",
        "name": "selected_variant"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "For a variant to be available, it needs to meet one of the following criteria:\n\n- The `variant.inventory_quantity` is greater than 0.\n- The `variant.inventory_policy` is set to `continue`.\n- The `variant.inventory_management` is `nil`.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "variant",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The first available variant of the product.",
        "name": "first_available_variant"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "For a variant to be available, it needs to meet one of the following criteria:\n\n- The `variant.inventory_quantity` is greater than 0.\n- The `variant.inventory_policy` is set to `continue`.\n- The `variant.inventory_management` is `nil`.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if at least one of the variants of the product is available. Returns `false` if not.",
        "name": "available"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [
          {
            "name": "Output the options",
            "description": "You can use the [`size` filter](/docs/api/liquid/filters/size) with dot notation to determine how many options a product has.\n",
            "syntax": "",
            "path": "/products/health-potion",
            "raw_liquid": "{% if product.options.size &gt; 0 -%}\n  {% for option in product.options -%}\n    - {{ option }}\n  {%- endfor %}\n{%- endif %}",
            "parameter": false,
            "display_type": "text",
            "show_data_tab": true
          }
        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "string"
          }
        ],
        "summary": "The option names of the product.",
        "name": "options"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The type of the product.",
        "name": "type"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted price.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The lowest **compare at** price of any variants of the product in the currency's subunit. This is the same as\n`product.compare_at_price`.",
        "name": "compare_at_price_min"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted price.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The highest **compare at** price of any variants of the product in the currency's subunit.",
        "name": "compare_at_price_max"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted price.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The lowest **compare at** price of any variants of the product in the currency's subunit.",
        "name": "compare_at_price"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the variant **compare at** prices of the product vary. Returns `false` if not.",
        "name": "compare_at_price_varies"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The relative URL of the product.",
        "name": "url"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; The tags are returned in alphabetical order.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "string"
          }
        ],
        "summary": "The [tags](https://help.shopify.com/manual/shopify-admin/productivity-tools/using-tags) of the product.",
        "name": "tags"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; Use the [`date` filter](/docs/api/liquid/filters/date) to format the timestamp.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "A timestamp for when the product was published.",
        "name": "published_at"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; Use the [`date` filter](/docs/api/liquid/filters/date) to format the timestamp.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "A timestamp for when the product was created.",
        "name": "created_at"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [
          {
            "name": "Output the values for a specific option",
            "description": "When accessing a specific option, the name is case-insensitive.",
            "syntax": "",
            "path": "/products/health-potion",
            "raw_liquid": "&lt;label&gt;\n  Strength\n  &lt;select&gt;\n    {%- for value in product.options_by_name['strength'].values %}\n    &lt;option&gt;{{ value }}&lt;/option&gt;\n    {%- endfor %}\n  &lt;/select&gt;\n&lt;/label&gt;",
            "parameter": false,
            "display_type": "text",
            "show_data_tab": false
          }
        ],
        "return_type": [
          {
            "type": "untyped",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Allows you to access a specific [product option](/docs/api/liquid/objects/product_option) by its name.",
        "name": "options_by_name"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the product doesn't have any options. Returns `false` if not.",
        "name": "has_only_default_variant"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the product has at least one variant with quantity price breaks in the current customer context.\nReturns `false` if not.",
        "name": "quantity_price_breaks_configured?"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; A variant requires a selling plan if [`variant.requires_selling_plan`](/docs/api/liquid/objects/variant#variant-requires_selling_plan)\n&gt; is `true`.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if all of the variants of the product require a selling plan. Returns `false` if not.",
        "name": "requires_selling_plan"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "selling_plan_group"
          }
        ],
        "summary": "The selling plan groups that the variants of the product are included in.",
        "name": "selling_plan_groups"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If no selling plan is selected, then `nil` is returned.\n\n&gt; Note:\n&gt; The selected selling plan is determined by the `selling_plan` URL parameter.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "selling_plan",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The currently selected selling plan.",
        "name": "selected_selling_plan"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If no variant and selling plan are selected, then `nil` is returned.\n\n&gt; Note:\n&gt; The selected variant is determined by the `variant` URL parameter, and the selected selling plan is determined by the\n&gt; `selling_plan` URL parameter.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "selling_plan_allocation",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The currently selected selling plan allocation for the currently selected variant.",
        "name": "selected_selling_plan_allocation"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The following logic is used to determine which selling plan allocation is returned:\n\n| Selling plan allocation | Return criteria |\n| --- | --- |\n| The currently selected allocation | Returned if a variant and selling plan are selected.&lt;br&gt;&lt;br&gt;The selected variant is determined by the `variant` URL parameter, and the selected selling plan is determined by the `selling_plan` URL parameter. |\n| The first allocation on the first available variant | Returned if no allocation is currently selected. |\n| The first allocation on the first variant | Returned if no allocation is currently selected, and there are no available variants. |\n\nIf the product doesn't have any selling plans, then `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "selling_plan_allocation",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The currently selected, or first available, selling plan allocation.",
        "name": "selected_or_first_available_selling_plan_allocation"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the product is a gift card. Returns `false` if not.",
        "name": "gift_card?"
      }
    ],
    "summary": "A [product](https://help.shopify.com/manual/products) in the store.",
    "name": "product",
    "examples": [

    ],
    "json_data": {
      "path": "/products/health-potion",
      "handle": "product",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "product",
          "property": "options_with_values"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The name of the product option.",
        "name": "name"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The 1-based index of the product option in the [`product.options_with_values` array](/docs/api/liquid/objects/product#product-options_with_values).",
        "name": "position"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "string"
          }
        ],
        "summary": "The possible values for the product option.",
        "name": "values"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If no value is currently selected, then `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The currently selected product option value.",
        "name": "selected_value"
      }
    ],
    "summary": "A product option, such as size or color.",
    "name": "product_option",
    "examples": [

    ],
    "json_data": {
      "path": "/products/health-potion",
      "handle": "product.options_with_values[0]",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "line_item",
          "property": "variant"
        },
        {
          "object": "product",
          "property": "first_available_variant"
        },
        {
          "object": "product",
          "property": "selected_or_first_available_variant"
        },
        {
          "object": "product",
          "property": "variants"
        },
        {
          "object": "product",
          "property": "selected_variant"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; To learn about how to create metafields, refer to [Create and manage metafields](/apps/metafields/manage) or visit\n&gt; the [Shopify Help Center](https://help.shopify.com/manual/metafields).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "untyped",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [metafields](/docs/api/liquid/objects/metafield) applied to the variant.",
        "name": "metafields"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "product",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The parent product of the variant.",
        "name": "product"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; The selected variant is determined by the `variant` URL parameter. This URL parameter is available on product pages URLs only.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the variant is currently selected. Returns `false` if it's not.",
        "name": "selected"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the variant has been matched by a [storefront filter](https://shopify.dev/themes/navigation-search/filtering/storefront-filtering).\nReturns `false` if it hasn't.",
        "name": "matched"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ID of the variant.",
        "name": "id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [
          {
            "name": "The variant title",
            "description": "",
            "syntax": "",
            "path": "/products/health-potion",
            "raw_liquid": "{{ product.variants.first.title }}",
            "parameter": false,
            "display_type": "text",
            "show_data_tab": true
          }
        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "A concatenation of each variant option, separated by a `/`.",
        "name": "title"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; The default quantity rule is `min=1,max=null,increment=1`.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "quantity_rule",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns the specified quantity rule for the variant if one exists in the current customer context. Otherwise returns `min=1,max=nil,increment=1` if the variant does not have any quantity rule.",
        "name": "quantity_rule"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "quantity_price_break"
          }
        ],
        "summary": "Returns `quantity_price_break` objects for the variant in the current customer context.",
        "name": "quantity_price_breaks"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the variant has any quantity price breaks available in the current customer context.\nReturns `false` if it doesn't.",
        "name": "quantity_price_breaks_configured?"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted price.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The price of the variant in the currency's subunit.",
        "name": "price"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted price.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The **compare at** price of the variant in the currency's subunit.",
        "name": "compare_at_price"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If no selling plan is selected, then `nil` is returned.\n\n&gt; Note:\n&gt; The selected selling plan is determined by the `selling_plan` URL parameter.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "selling_plan_allocation",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The selected `selling_plan_allocation`.",
        "name": "selected_selling_plan_allocation"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "selling_plan_allocation"
          }
        ],
        "summary": "The `selling_plan_allocation` objects for the variant.",
        "name": "selling_plan_allocations"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The SKU of the variant.",
        "name": "sku"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The barcode of the variant.",
        "name": "barcode"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the variant is available. Returns `false` if not.",
        "name": "available"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [
          {
            "name": "Output the options of each variant",
            "description": "",
            "syntax": "",
            "path": "/products/health-potion",
            "raw_liquid": "{% for variant in product.variants -%}\n  {%- capture options -%}\n    {% for option in variant.options -%}\n      {{ option }}{%- unless forloop.last -%}/{%- endunless -%}\n    {%- endfor %}\n  {%- endcapture -%}\n  \n  {{ variant.id }}: {{ options }}\n{%- endfor %}",
            "parameter": false,
            "display_type": "text",
            "show_data_tab": true
          }
        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The values of the variant for each [product option](/docs/api/liquid/objects/product_option).",
        "name": "options"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If there's no first product option, then `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The value of the variant for the first product option.",
        "name": "option1"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If there's no second product option, then `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The value of the variant for the second product option.",
        "name": "option2"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If there's no third product option, then `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The value of the variant for the third product option.",
        "name": "option3"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "Variant URLs use the following structure:\n\n```\n/products/[product-handle]?variant=[variant-id]\n```",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The URL of the variant.",
        "name": "url"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; To output the weight of a variant in this unit, use this property, and the `variant.weight_in_unit` property, with the\n&gt; [`weight_with_unit` filter](/docs/api/liquid/filters/weight_with_unit).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The unit for the weight of the variant.",
        "name": "weight_unit"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; To output this weight, use this property, and the `variant.weight_unit` property, with the [`weight_with_unit` filter](/docs/api/liquid/filters/weight_with_unit).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The weight of the variant in the unit specified by `variant.weight_unit`.",
        "name": "weight_in_unit"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; Use the [`weight_with_unit`](/docs/api/liquid/filters/weight_with_unit) filter to format the weight in\n&gt; [the store's format](https://www.shopify.com/admin/settings/general).\n&gt;\n&gt; Use `variant.weight_in_unit` to output the weight in the unit configured on the variant.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The weight of the variant in grams.",
        "name": "weight"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; Unit prices are available only to stores located in Germany and France.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "unit_price_measurement",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The unit price measurement of the variant.",
        "name": "unit_price_measurement"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The price reflects any discounts that are applied to the line item. The value is output in the customer's local\n(presentment) currency.\n\n&gt; Note:\n&gt; Unit prices are available only to stores located in Germany and France.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted price.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [unit price](https://help.shopify.com/manual/intro-to-shopify/initial-setup/sell-in-france/price-per-unit#add-unit-prices-to-your-product)\nof the variant in the currency's subunit.",
        "name": "unit_price"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If inventory isn't tracked, then the number of items sold is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The inventory quantity of the variant.",
        "name": "inventory_quantity"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If inventory isn't tracked, then `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The inventory management service of the variant.",
        "name": "inventory_management"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; To learn about why merchants might want to continue selling products when they're out of stock, visit the\n&gt; [Shopify Help Center](https://help.shopify.com/manual/products/inventory/getting-started-with-inventory/selling-when-out-of-stock).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "continue",
            "description": "Continue selling when the variant is out of stock.",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "deny",
            "description": "Stop selling when the variant is out of stock.",
            "array_value": ""
          }
        ],
        "summary": "Whether the variant should continue to be sold when it's out of stock.",
        "name": "inventory_policy"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the variant requires shipping. Returns `false` if it doesn't.",
        "name": "requires_shipping"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if taxes should be charged on the variant. Returns `false` if not.",
        "name": "taxable"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; This is the same value as [`variant.image`](/docs/api/liquid/objects/variant#variant-image).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "image",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The image attached to the variant.",
        "name": "featured_image"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; This is the same value as [`variant.featured_image`](/docs/api/liquid/objects/variant#variant-featured_image).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "image",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The image attached to the variant.",
        "name": "image"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "media",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The first media object attached to the variant.",
        "name": "featured_media"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "Incoming inventory information is populated by [inventory transfers](https://help.shopify.com/manual/products/inventory/transfers).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the variant has incoming inventory. Returns `false` if not.",
        "name": "incoming"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "Incoming inventory information is populated by [inventory transfers](https://help.shopify.com/manual/products/inventory/transfers).\n\n&gt; Tip:\n&gt; Use the [`date` filter](/docs/api/liquid/filters/date) to format the date.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The arrival date for the next incoming inventory of the variant.",
        "name": "next_incoming_date"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The array is defined in only the following cases:\n\n- `variant.selected` is `true`\n- The variant is the product's first available variant. For example, `product.first_available_variant` or `product.selected_or_first_available_variant`.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "store_availability"
          }
        ],
        "summary": "The store availabilities for the variant.",
        "name": "store_availabilities"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the variant is set to require a `selling_plan` when being added to the cart. Returns `false` if not.",
        "name": "requires_selling_plan"
      }
    ],
    "summary": "A [product variant](https://help.shopify.com/manual/products/variants).",
    "name": "variant",
    "examples": [

    ],
    "json_data": {
      "path": "/products/health-potion",
      "handle": "product.variants[0]",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "variant",
          "property": "quantity_price_breaks"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The minimum quantity required to qualify for the price break.",
        "name": "minimum_quantity"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is the price in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted price.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The price for the quantity price break once the minimum quantity is met.",
        "name": "price"
      }
    ],
    "summary": "The per-unit price of a variant when purchasing the minimum quantity or more.",
    "name": "quantity_price_break",
    "examples": [

    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": "{\"minimum_quantity\":\"10\",\"price\":\"20.00\"}"
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "metafield",
          "property": "value"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "&gt; Tip:\n&gt; To learn about metafield types, refer to [Metafield types](/apps/metafields/types).",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The rating value.",
        "name": "rating"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The minimum value of the rating scale.",
        "name": "scale_min"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The maximum value of the rating scale.",
        "name": "scale_max"
      }
    ],
    "summary": "Information for a [`rating` type](/apps/metafields/types) metafield.",
    "name": "rating",
    "examples": [

    ],
    "json_data": {
      "path": "/products/health-potion",
      "handle": "product.metafields.details.rating.value",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "gift_card",
          "property": "recipient"
        }
      ],
      "template": [
        "gift_card.liquid"
      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The nickname of the recipient.",
        "name": "nickname"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The email of the recipient.",
        "name": "email"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The full name of the recipient.",
        "name": "name"
      }
    ],
    "summary": "A recipient that is associated with a [gift card](https://help.shopify.com/manual/products/gift-card-products).",
    "name": "recipient",
    "examples": [

    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": "{\"email\":\"cornelius.potionmaker@gmail.com\",\"name\":\"Cornelius Potionmaker\",\"nickname\":\"Cornelius\"}"
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "Product recommendations become more accurate over time as new orders and product data become available. To learn more about\nhow product recommendations are generated, refer to [Product recommendations](/themes/product-merchandising/recommendations).\n\n&gt; Note:\n&gt; The `recommendations` object returns products only when rendered in a section using the [Product Recommendations API](/api/ajax/reference/product-recommendations)\n&gt; and the [Section Rendering API](/api/section-rendering). To learn about how to include product recommendations in your theme,\n&gt; refer to [Show product recommendations](/themes/product-merchandising/recommendations/show-product-recommendations).",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` when being referenced inside a section that's been rendered using the Product Recommendations API and\nthe Section Rendering API. Returns `false` if not.",
        "name": "performed?"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If `performed?` is `false`, then an [EmptyDrop](/docs/api/liquid/basics#emptydrop) is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "product"
          }
        ],
        "summary": "The recommended products.",
        "name": "products"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If `performed?` is `false`, then 0 is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The number of recommended products.",
        "name": "products_count"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If `performed?` is `false`, then `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The recommendation intent.",
        "name": "intent"
      }
    ],
    "summary": "Product recommendations for a specific product based on sales data, product descriptions, and collection relationships.",
    "name": "recommendations",
    "examples": [

    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": "{\"products\":[],\"products_count\":4,\"performed?\":true}"
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": true,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "You can use `request.design_mode` to control theme behavior depending on whether the theme is being viewed in the editor.\nFor example, you can prevent session data from being tracked by tracking scripts in the theme editor.\n\n&gt; Caution:\n&gt; You shouldn't use `request.design_mode` to change customer-facing functionality. The theme editor preview should match\n&gt; what the merchant's customers see on the live store.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the request is being made from within the theme editor. Returns `false` if not.",
        "name": "design_mode"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "404",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "article",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "blog",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "captcha",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "cart",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "collection",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "list-collections",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "customers/account",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "customers/activate_account",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "customers/addresses",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "customers/login",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "customers/order",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "customers/register",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "customers/reset_password",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "gift_card",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "index",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "page",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "password",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "policy",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "product",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "search",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The type of page being requested.",
        "name": "page_type"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The domain that the request is hosted on.",
        "name": "host"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [
          {
            "name": "Create a context-aware absolute URL",
            "description": "You can use `request.origin` with any object, object property, or filter that returns a relative URL to build a context-aware absolute URL.\n",
            "syntax": "",
            "path": "/products/health-potion",
            "raw_liquid": "{{ product.selected_variant.url | default: product.url | prepend: request.origin }}",
            "parameter": false,
            "display_type": "text",
            "show_data_tab": true
          }
        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The protocol and host of the request.",
        "name": "origin"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; If the current path is for a page that doesn't exist, then `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The path of the request.",
        "name": "path"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "shop_locale",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The locale of the request.",
        "name": "locale"
      }
    ],
    "summary": "Information about the current URL and the associated page.",
    "name": "request",
    "examples": [

    ],
    "json_data": {
      "path": "/",
      "handle": "request",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [

      ],
      "template": [
        "robots.txt.liquid"
      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "&gt; Tip:\n&gt; You can [customize the `robots.txt` file](/themes/seo/robots-txt) with the [`robots.txt.liquid` template](/themes/architecture/templates/robots-txt-liquid).",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "group"
          }
        ],
        "summary": "The rule groups.",
        "name": "default_groups"
      }
    ],
    "summary": "The default rule groups for the `robots.txt` file.",
    "name": "robots",
    "examples": [

    ],
    "json_data": {
      "path": "/robots.txt",
      "handle": "robots",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "robots",
          "property": "default_groups"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "&gt; Tip:\n&gt; You can [customize the `robots.txt` file](/themes/seo/robots-txt) with the [`robots.txt.liquid` template](/themes/architecture/templates/robots-txt-liquid).",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "user_agent",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The user agent for the group.",
        "name": "user_agent"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "rule"
          }
        ],
        "summary": "The rules in the group.",
        "name": "rules"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If the group doesn't require a sitemap, then `blank` is returned.\n\nThe sitemap can be accessed at `/sitemap.xml`.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "sitemap",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The sitemap for the group.",
        "name": "sitemap"
      }
    ],
    "summary": "A group of rules for the `robots.txt` file.",
    "name": "group",
    "examples": [

    ],
    "json_data": {
      "path": "/robots.txt",
      "handle": "robots.default_groups[0]",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "group",
          "property": "rules"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "A rule consists of a directive, which can be either `Allow` or `Disallow`, and a value of the associated URL path.\n\nFor example:\n\n```\nDisallow: /policies/\n```\n\nYou can output a rule directly, instead of referencing each of its properties.\n\n&gt; Tip:\n&gt; You can [customize the `robots.txt` file](/themes/seo/robots-txt) with the [`robots.txt.liquid` template](/themes/architecture/templates/robots-txt-liquid).",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The directive of the rule.",
        "name": "directive"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The value of the rule.",
        "name": "value"
      }
    ],
    "summary": "A rule for the `robots.txt` file, which tells crawlers which pages can, or can't, be accessed.",
    "name": "rule",
    "examples": [

    ],
    "json_data": {
      "path": "/robots.txt",
      "handle": "robots.default_groups[0].rules[27]",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": true,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "Using the `routes` object instead of hardcoding URLs helps ensure that your theme supports\n[multiple languages](/themes/internationalization/multiple-currencies-languages), as well as any possible changes in URL\nformat.",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The index (home page) URL.",
        "name": "root_url"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [account page](https://help.shopify.com/manual/customers/customer-accounts) URL. Redirects to [new customer accounts](https://help.shopify.com/en/manual/customers/customer-accounts/new-customer-accounts) when enabled.",
        "name": "account_url"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [account login page](/themes/architecture/templates/customers-login) URL. Redirects to [new customer accounts](https://help.shopify.com/en/manual/customers/customer-accounts/new-customer-accounts) when enabled.",
        "name": "account_login_url"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The URL to log a customer out of their account. Redirects to [new customer accounts](https://help.shopify.com/en/manual/customers/customer-accounts/new-customer-accounts) when enabled.",
        "name": "account_logout_url"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [password recovery page](/themes/architecture/templates/customers-reset-password) URL. Redirects to [new customer accounts](https://help.shopify.com/en/manual/customers/customer-accounts/new-customer-accounts) when enabled.",
        "name": "account_recover_url"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [account registration page](/themes/architecture/templates/customers-register) URL.",
        "name": "account_register_url"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [account addresses page](/themes/architecture/templates/customers-addresses) URL. Redirects to [new customer accounts](https://help.shopify.com/en/manual/customers/customer-accounts/new-customer-accounts) when enabled.",
        "name": "account_addresses_url"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [collection list page](/themes/architecture/templates/list-collections) URL.",
        "name": "collections_url"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The all-products collection is automatically generated by Shopify and contains all products in the store.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The all-products collection page URL.",
        "name": "all_products_collection_url"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [search page](/themes/architecture/templates/search) URL.",
        "name": "search_url"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; To learn about how to support predictive search in your theme, refer to [Add predictive search to your theme](/themes/navigation-search/search/predictive-search).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [Predictive Search API](/api/ajax/reference/predictive-search) URL.",
        "name": "predictive_search_url"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [cart page](/themes/architecture/templates/cart) URL.",
        "name": "cart_url"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The URL for the [`/cart/add` Cart API endpoint](/api/ajax/reference/cart#post-locale-cart-add-js).",
        "name": "cart_add_url"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The URL for the [`/cart/change` Cart API endpoint](/api/ajax/reference/cart#post-locale-cart-change-js).",
        "name": "cart_change_url"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The URL for the [`/cart/clear` Cart API endpoint](/api/ajax/reference/cart#post-locale-cart-clear-js).",
        "name": "cart_clear_url"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The URL for the [`/cart/update` Cart API endpoint](/api/ajax/reference/cart#post-locale-cart-update-js).",
        "name": "cart_update_url"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [Product Recommendations API](https://shopify.dev/api/ajax/reference/product-recommendations) URL.",
        "name": "product_recommendations_url"
      }
    ],
    "summary": "Allows you to generate standard URLs for the storefront.",
    "name": "routes",
    "examples": [

    ],
    "json_data": {
      "path": "/",
      "handle": "routes",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "scripts",
          "property": "cart_calculate_line_items"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "&gt; Tip:\n&gt; To learn more about Shopify Scripts and the Script Editor, visit the [Shopify Help Center](https://help.shopify.com/manual/checkout-settings/script-editor).",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ID of the script.",
        "name": "id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The name of the script.",
        "name": "name"
      }
    ],
    "summary": "Information about a Shopify Script.",
    "name": "script",
    "examples": [

    ],
    "json_data": {
      "path": "/",
      "handle": "scripts.cart_calculate_line_items",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [

      ],
      "template": [
        "search"
      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "To learn about storefront search and how to include it in your theme, refer to [Storefront search](/themes/navigation-search/search).",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; Use the [`highlight` filter](/docs/api/liquid/filters/highlight) to highlight the search terms in search result content.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The entered search terms.",
        "name": "terms"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "Only filters that are relevant to the current search results are returned. If the search results contain more than 1000\nproducts, then the array will be empty.\n\n&gt; Tip:\n&gt; To learn about how to set up filters in the admin, visit the [Shopify Help Center](https://help.shopify.com/manual/online-store/themes/customizing-themes/storefront-filters).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "filter"
          }
        ],
        "summary": "The filters that have been set up on the search page.",
        "name": "filters"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if a search was successfully performed. Returns `false` if not.",
        "name": "performed"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "An item can be an [`article`](/docs/api/liquid/objects/article), a [`page`](/docs/api/liquid/objects/page), or a\n[`product`](/docs/api/liquid/objects/product).\n\n&gt; Tip:\n&gt; Use the [paginate](/docs/api/liquid/tags/paginate) tag to choose how many results to show per page, up to a limit of 50.",
        "examples": [
          {
            "name": "Search result `object_type`",
            "description": "Search results have an additional `object_type` property that returns the object type of the result.",
            "syntax": "",
            "path": "/search?q=potion",
            "raw_liquid": "{% for item in search.results %}\n&lt;!-- Result {{ forloop.index }}--&gt;\n&lt;h3&gt;\n  {{ item.title | link_to: item.url }}\n&lt;/h3&gt;\n\n{% if item.object_type == 'article' -%}\n  {%- comment -%}\n     'item' is an article\n     All article object properties can be accessed.\n  {%- endcomment -%}\n\n  {% if item.image -%}\n    &lt;div class=\"result-image\"&gt;\n      &lt;a href=\"{{ item.url }}\" title=\"{{ item.title | escape }}\"&gt;\n        {{ item | image_url: width: 100 | image_tag }}\n       &lt;/a&gt;\n    &lt;/div&gt;\n   {% endif %}\n{%- elsif item.object_type == 'page' -%}\n  {%- comment -%}\n    'item' is a page.\n     All page object properties can be accessed.\n  {%- endcomment -%}\n{%- else -%}\n  {%- comment -%}\n     'item' is a product.\n     All product object properties can be accessed.\n  {%- endcomment -%}\n\n  {%- if item.featured_image -%}\n    &lt;div class=\"result-image\"&gt;\n       &lt;a href=\"{{ item.url }}\" title=\"{{ item.title | escape }}\"&gt;\n         {{ item.featured_image | image_url: width: 100 | image_tag }}\n      &lt;/a&gt;\n    &lt;/div&gt;\n  {% endif %}\n{%- endif -%}\n\n&lt;span&gt;{{ item.content | strip_html | truncatewords: 40 | highlight: search.terms }}&lt;/span&gt;\n{% endfor %}",
            "parameter": false,
            "display_type": "text",
            "show_data_tab": true
          }
        ],
        "return_type": [
          {
            "type": "untyped",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The search result items.",
        "name": "results"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The number of results.",
        "name": "results_count"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [
          {
            "name": "Output the sort options",
            "description": "",
            "syntax": "",
            "path": "/search?q=potion",
            "raw_liquid": "{%- assign sort_by = search.sort_by | default: search.default_sort_by -%}\n\n&lt;select&gt;\n{%- for option in search.sort_options %}\n  &lt;option\n    value=\"{{ option.value }}\"\n    {%- if option.value == sort_by %}\n      selected=\"selected\"\n    {%- endif %}\n  &gt;\n    {{ option.name }}\n  &lt;/option&gt;\n{% endfor -%}\n&lt;/select&gt;",
            "parameter": false,
            "display_type": "text",
            "show_data_tab": true
          }
        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "sort_option"
          }
        ],
        "summary": "The available sorting options for the search results.",
        "name": "sort_options"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If there's no `sort_by` URL parameter, then the value is `nil`.",
        "examples": [

        ],
        "return_type": [

        ],
        "summary": "The sort order of the search results. This is determined by the `sort_by` URL parameter.",
        "name": "sort_by"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The default sort order of the search results, which is `relevance`.",
        "name": "default_sort_by"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "A search can be performed on the following object types:\n\n- [`article`](/docs/api/liquid/objects/article)\n- [`page`](/docs/api/liquid/objects/page)\n- [`product`](/docs/api/liquid/objects/product)\n\n&gt; Note:\n&gt; The types are determined by the [`type` query parameter](/api/ajax/reference/predictive-search#query-parameters).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "string"
          }
        ],
        "summary": "The object types that the search was performed on.",
        "name": "types"
      }
    ],
    "summary": "Information about a storefront search query.",
    "name": "search",
    "examples": [

    ],
    "json_data": {
      "path": "/search?q=potion",
      "handle": "search",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "&gt; Tip:\n&gt; To learn about sections and using them in a theme, refer to [Sections](/themes/architecture/sections).",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The ID for sections included through [JSON templates](/themes/architecture/templates/json-templates) are dynamically\ngenerated by Shopify.\n\nThe ID for static sections is the section file name without the `.liquid` extension. For example, a `header.liquid`\nsection has an ID of `header`.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ID of the section.",
        "name": "id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "To learn about how to access settings, refer to [Access settings](/themes/architecture/settings#access-settings).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "untyped",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [settings](https://shopify.dev/themes/architecture/sections/section-schema#settings) of the section.",
        "name": "settings"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "block"
          }
        ],
        "summary": "The blocks of the section.",
        "name": "blocks"
      }
    ],
    "summary": "The properties and settings of a section.",
    "name": "section",
    "examples": [

    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": "{\"blocks\":[],\"id\":\"template--14453298921537__cart-items\",\"settings\":{}}"
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "line_item",
          "property": "selling_plan_allocation"
        },
        {
          "object": "variant",
          "property": "selling_plan_allocations"
        },
        {
          "object": "product",
          "property": "selected_selling_plan_allocation"
        },
        {
          "object": "product",
          "property": "selected_or_first_available_selling_plan_allocation"
        },
        {
          "object": "variant",
          "property": "selected_selling_plan_allocation"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "To learn about how to support selling plans in your theme, refer to [Purchase options](/themes/pricing-payments/purchase-options).",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted price.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The price of the selling plan allocation in the currency's subunit.",
        "name": "price"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value of the **compare at** price is the line item's price without the selling plan applied. If the price and compare\nat price are equal, then `nil` is returned.\n\nThe value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted price.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The **compare at** price of the selling plan allocation in the currency's subunit.",
        "name": "compare_at_price"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The maximum length of the array is two. If the associated selling plan doesn't create any price adjustments, then the\narray is empty.\n\nEach `selling_plan_allocation_price_adjustment` maps to a [`selling_plan_price_adjustment`](/docs/api/liquid/objects/selling_plan_price_adjustment)\nin the [`selling_plan.price_adjustments` array](/docs/api/liquid/objects/selling_plan#selling_plan-price_adjustments). The\n`selling_plan.price_adjustments` array contains the intent of the selling plan, and the\n`selling_plan_allocation.price_adjustments` array contains the resulting money amounts.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "selling_plan_allocation_price_adjustment"
          }
        ],
        "summary": "The selling plan allocation price adjustments.",
        "name": "price_adjustments"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If the variant doesn't have a unit price, then `nil` is returned.\n\nThe value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted price.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [unit price](/docs/api/liquid/objects/variant#variant-unit_price) of the variant associated with the selling plan, in the currency's subunit.",
        "name": "unit_price"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If a selling plan includes multiple deliveries, then the `per_delivery_price` is the `price` divided by the number of\ndeliveries.\n\nThe value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted price.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The price for each delivery in the selling plan in the currency's subunit.",
        "name": "per_delivery_price"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "selling_plan",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The selling plan that created the allocation.",
        "name": "selling_plan"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ID of the [`selling_plan_group`](/docs/api/liquid/objects/selling_plan_group) that the selling plan of the allocation belongs to.",
        "name": "selling_plan_group_id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted price.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The amount that the customer will be charged at checkout in the currency's subunit.",
        "name": "checkout_charge_amount"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted price.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The remaining amount for the customer to pay, in the currency's subunit.",
        "name": "remaining_balance_charge_amount"
      }
    ],
    "summary": "Information about how a specific [selling plan](/apps/subscriptions/selling-plans) affects a line item.",
    "name": "selling_plan_allocation",
    "examples": [

    ],
    "json_data": {
      "path": "/products/health-potion?variant=39897499828289&amp;selling_plan=610435137",
      "handle": "product.selected_selling_plan_allocation",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "selling_plan_allocation",
          "property": "price_adjustments"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "To learn about how to support selling plans in your theme, refer to [Purchase options](/themes/pricing-payments/purchase-options).",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The 1-based index of the price adjustment in the\n[`selling_plan_allocation.price_adjustments` array](/docs/api/liquid/objects/selling_plan_allocation#selling_plan_allocation-price_adjustments).",
        "name": "position"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted price.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The price that will be charged for the price adjustment's lifetime, in the currency's subunit.",
        "name": "price"
      }
    ],
    "summary": "The resulting price from the intent of the associated [`selling_plan_price_adjustment`](/docs/api/liquid/objects/selling_plan_price_adjustment).",
    "name": "selling_plan_allocation_price_adjustment",
    "examples": [

    ],
    "json_data": {
      "path": "/products/health-potion?variant=39897499828289&amp;selling_plan=610435137",
      "handle": "product.selected_selling_plan_allocation.price_adjustments[0]",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "line_item",
          "property": "selling_plan_allocation"
        },
        {
          "object": "variant",
          "property": "selling_plan_allocations"
        },
        {
          "object": "selling_plan",
          "property": "checkout_charge"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "To learn about how to support selling plans in your theme, refer to [Purchase options](/themes/pricing-payments/purchase-options).",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "percentage",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "price",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The value type of the checkout charge.",
        "name": "value_type"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "How this value is interpreted depends on the [value type](/docs/api/liquid/objects/selling_plan_checkout_charge#selling_plan_checkout_charge-value_type) of\nthe checkout charge. The following table outlines what the value represents for each value type:\n\n| Value type | Value |\n| --- | --- |\n| `percentage` | The percent amount of the original price that the customer needs to pay.&lt;br&gt;&lt;br&gt;For example, if the value is 50, then the customer needs to pay 50% of the original price. |\n| `price` | The amount that the customer needs to pay in the currency's subunit. |\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted price.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The value of the checkout charge.",
        "name": "value"
      }
    ],
    "summary": "Information about how a specific [selling plan](/apps/subscriptions/selling-plans) affects the amount that a\ncustomer needs to pay for a line item at checkout.",
    "name": "selling_plan_checkout_charge",
    "examples": [

    ],
    "json_data": {
      "path": "/products/health-potion?selling_plan=610435137",
      "handle": "product.selected_selling_plan.checkout_charge",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "line_item",
          "property": "selling_plan_allocation"
        },
        {
          "object": "variant",
          "property": "selling_plan_allocations"
        },
        {
          "object": "product",
          "property": "selected_selling_plan"
        },
        {
          "object": "selling_plan_allocation",
          "property": "selling_plan"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "To learn about how to support selling plans in your theme, refer to [Purchase options](/themes/pricing-payments/purchase-options).",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ID of the selling plan.",
        "name": "id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; The name is shown at checkout with the line item summary.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The name of the selling plan.",
        "name": "name"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The description of the selling plan.",
        "name": "description"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; The name is shown at checkout with the line item summary.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ID of the [`selling_plan_group`](/docs/api/liquid/objects/selling_plan_group) that the selling plan belongs to.",
        "name": "group_id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the selling plan includes multiple deliveries. Returns `false` if not.",
        "name": "recurring_deliveries"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "selling_plan_option"
          }
        ],
        "summary": "The selling plan options.",
        "name": "options"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The maximum length of the array is two. If the selling plan doesn't create any price adjustments, then the\narray is empty.\n\nEach `selling_plan_price_adjustment` maps to a [`selling_plan_allocation_price_adjustment`](/docs/api/liquid/objects/selling_plan_allocation_price_adjustment)\nin the [`selling_plan_allocation.price_adjustments` array](/docs/api/liquid/objects/selling_plan_allocation#selling_plan_allocation-price_adjustments).\nThe `selling_plan.price_adjustments` array contains the intent of the selling plan, and the\n`selling_plan_allocation.price_adjustments` contains the resulting money amounts.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "selling_plan_price_adjustment"
          }
        ],
        "summary": "The selling plan price adjustments.",
        "name": "price_adjustments"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; The selected selling plan is determined by the `selling_plan` URL parameter.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the selling plan is currently selected. Returns `false` if not.",
        "name": "selected"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "selling_plan_checkout_charge",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The checkout charge of the selling plan.",
        "name": "checkout_charge"
      }
    ],
    "summary": "Information about the intent of how a specific [selling plan](/apps/subscriptions/selling-plans) affects a line item.",
    "name": "selling_plan",
    "examples": [

    ],
    "json_data": {
      "path": "/products/health-potion?selling_plan=610435137",
      "handle": "product.selected_selling_plan",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "product",
          "property": ""
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "Selling plans are grouped based on shared [selling plan option names](/docs/api/liquid/objects/selling_plan_option#selling_plan_option-name).\n\nTo learn about how to support selling plans in your theme, refer to [Purchase options](/themes/pricing-payments/purchase-options).",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "selling_plan"
          }
        ],
        "summary": "The selling plans in the group.",
        "name": "selling_plans"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ID of the selling plan group.",
        "name": "id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The name of the selling plan group.",
        "name": "name"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If the app doesn't provide a value, then `nil` is returned.\n\n&gt; Tip:\n&gt; You can use this property, with the [`where` filter](/docs/api/liquid/filters/where), to filter the\n&gt; [`product.selling_plan_groups` array](/docs/api/liquid/objects/product#product-selling_plan_groups) for all selling plan groups\n&gt; from a specific app.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "An optional string provided by an app to identify selling plan groups created by that app.",
        "name": "app_id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "selling_plan_group_option"
          }
        ],
        "summary": "The selling plan group options.",
        "name": "options"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; The selected selling plan is determined by the `selling_plan` URL parameter.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the currently selected selling plan is part of the selling plan group. Returns `false` if not.",
        "name": "selling_plan_selected"
      }
    ],
    "summary": "Information about a specific group of [selling plans](/apps/subscriptions/selling-plans) that include any of a\nproduct's variants.",
    "name": "selling_plan_group",
    "examples": [

    ],
    "json_data": {
      "path": "/products/health-potion",
      "handle": "product.selling_plan_groups[0]",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "selling_plan_group",
          "property": ""
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The name of the option.",
        "name": "name"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The 1-based index of the option in the [`selling_plan_group.options` array](/docs/api/liquid/objects/selling_plan_group#selling_plan_group-options).",
        "name": "position"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "string"
          }
        ],
        "summary": "The values of the option.",
        "name": "values"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If no selling plan is currently selected, then `nil` is returned.\n\n&gt; Note:\n&gt; The selected selling plan is determined by the `selling_plan` URL parameter.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The option value of the currently selected selling plan.",
        "name": "selected_value"
      }
    ],
    "summary": "Information about a specific option in a [selling plan group](/docs/api/liquid/objects/selling_plan_group).",
    "name": "selling_plan_group_option",
    "examples": [

    ],
    "json_data": {
      "path": "/products/health-potion",
      "handle": "product.selling_plan_groups[0].options[0]",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "selling_plan",
          "property": "options"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "To learn about how to support selling plans in your theme, refer to [Purchase options](/themes/pricing-payments/purchase-options).",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The name of the associated `selling_plan_group_option`.",
        "name": "name"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The 1-based index of the selling plan option in the associated [`selling_plan_group.options` array](/docs/api/liquid/objects/selling_plan_group#selling_plan_group-options).",
        "name": "position"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is one of the [`selling_plan_group_option.values`](/docs/api/liquid/objects/selling_plan_group_option#selling_plan_group_option-values).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The value of the selling plan option.",
        "name": "value"
      }
    ],
    "summary": "Information about a selling plan's value for a specific [`selling_plan_group_option`](/docs/api/liquid/objects/selling_plan_group_option).",
    "name": "selling_plan_option",
    "examples": [

    ],
    "json_data": {
      "path": "/products/health-potion?selling_plan=610435137",
      "handle": "product.selected_selling_plan.options[0]",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "checkout",
          "property": "shipping_method"
        },
        {
          "object": "order",
          "property": "shipping_method"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "In most contexts, the shipping method title appears in the customer's preferred language. However, in the context of an\n[order](/docs/api/liquid/objects/order), the shipping method title appears in the language that the customer checked out in.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The title of the shipping method.",
        "name": "title"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted price.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The price of the shipping method in the currency's subunit, before discounts have been applied.",
        "name": "original_price"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted price.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The price of the shipping method in the currency's subunit, after discounts have been applied.",
        "name": "price"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; The price of the shipping method is appended to handle.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [handle](/docs/api/liquid/basics#handles) of the shipping method.",
        "name": "handle"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ID of the shipping method.",
        "name": "id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "tax_line"
          }
        ],
        "summary": "The tax lines for the shipping method.",
        "name": "tax_lines"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "discount_allocation"
          }
        ],
        "summary": "The discount allocations that apply to the shipping method.",
        "name": "discount_allocations"
      }
    ],
    "summary": "Information about the shipping method for an order.",
    "name": "shipping_method",
    "examples": [

    ],
    "json_data": {
      "path": "/",
      "handle": "customer.orders[1].shipping_method",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": true,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ID of the store.",
        "name": "id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The name of the store.",
        "name": "name"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [description](https://help.shopify.com/manual/online-store/setting-up/preferences#edit-the-title-and-meta-description)\nof the store.",
        "name": "description"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; You can get the store's currency with [`shop.currency`](/docs/api/liquid/objects/shop#shop-currency).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "currency"
          }
        ],
        "summary": "The currencies that the store accepts.",
        "name": "enabled_currencies"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "shop_locale"
          }
        ],
        "summary": "The locales (languages) that are published on the store.",
        "name": "published_locales"
      },
      {
        "deprecated": true,
        "deprecation_reason": "Deprecated because the name didn't make it clear that the returned locales were published.\n\nThe `shop.enabled_locales` property has been replaced by [`shop.published_locales`](/docs/api/liquid/objects/shop#shop-published_locales).",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "shop_locale"
          },
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "shop_locale"
          }
        ],
        "summary": "The locales (languages) that are published on the store.",
        "name": "enabled_locales"
      },
      {
        "deprecated": true,
        "deprecation_reason": "Deprecated because this value is contextual to the request and not a property of the shop resource.\n\nThe `shop.locale` property has been replaced by [request.locale](/docs/api/liquid/objects/request#request-locale).",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "shop_locale",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The currently active locale (language).",
        "name": "locale"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The full URL of the store.",
        "name": "url"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [sender email](https://help.shopify.com/manual/intro-to-shopify/initial-setup/setup-your-email#change-your-sender-email-address)\nof the store.",
        "name": "email"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The full URL of the store, with an `https` protocol.",
        "name": "secure_url"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The primary domain of the store.",
        "name": "domain"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The `.myshopify.com` domain of the store.",
        "name": "permanent_domain"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The phone number of the store.",
        "name": "phone"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The password page message of the store.",
        "name": "password_message"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "address",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The address of the store.",
        "name": "address"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if customer accounts are required to complete checkout. Returns `false` if not.",
        "name": "customer_accounts_enabled"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if customer accounts are optional to complete checkout. Returns `false` if not.",
        "name": "customer_accounts_optional"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "currency",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The currency of the store.",
        "name": "currency"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "currency",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The money format of the store.",
        "name": "money_format"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "currency",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The money format of the store with the currency included.",
        "name": "money_with_currency_format"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; To learn about how to create metafields, refer to [Create and manage metafields](/apps/metafields/manage) or visit\n&gt; the [Shopify Help Center](https://help.shopify.com/manual/metafields).",
        "examples": [

        ],
        "return_type": [

        ],
        "summary": "The [metafields](/docs/api/liquid/objects/metafield) applied to the store.",
        "name": "metafields"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The payment types are based on the store's enabled [payment providers](https://help.shopify.com/manual/payments) and\nthe customer's current region and currency.\n\n&gt; Tip:\n&gt; You can output an `svg` logo for each payment type with the [`payment_type_svg_tag` filter](/docs/api/liquid/filters/payment_type_svg_tag).\n&gt; Alternatively, you can get the source URL for each `svg` with the [`payment_type_img_url` filter](/docs/api/liquid/filters/payment_type_img_url).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The accepted payment types on the store.",
        "name": "enabled_payment_types"
      },
      {
        "deprecated": true,
        "deprecation_reason": "Deprecated because whether or not prices have taxes included is dependent on the customer's country.\n\nThe `shop.taxes_included` property has been replaced by [cart.taxes_included](/docs/api/liquid/objects/cart#cart-taxes_included).",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if prices include taxes. Returns `false` if not.",
        "name": "taxes_included"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "policy",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The refund policy for the store.",
        "name": "refund_policy"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "policy",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The shipping policy for the store.",
        "name": "shipping_policy"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "policy",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The privacy policy for the store.",
        "name": "privacy_policy"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "policy",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The terms of service for the store.",
        "name": "terms_of_service"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "policy",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The subscription policy for the store.",
        "name": "subscription_policy"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The policies are set in the store's [Policies settings](https://www.shopify.com/admin/settings/legal).",
        "examples": [
          {
            "name": "Output the policies",
            "description": "",
            "syntax": "",
            "path": "/",
            "raw_liquid": "&lt;ul&gt;\n{%- for policy in shop.policies %}\n  &lt;li&gt;{{ policy.title }}&lt;/li&gt;\n{%- endfor %}\n&lt;/ul&gt;",
            "parameter": false,
            "display_type": "text",
            "show_data_tab": true
          }
        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "policy"
          }
        ],
        "summary": "The policies for the store.",
        "name": "policies"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [
          {
            "name": "Output the vendors",
            "description": "",
            "syntax": "",
            "path": "/",
            "raw_liquid": "{% for vendor in shop.vendors %}\n  {{- vendor | link_to_vendor }}\n{% endfor %}",
            "parameter": false,
            "display_type": "text",
            "show_data_tab": true
          }
        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "string"
          }
        ],
        "summary": "All of the product vendors for the store.",
        "name": "vendors"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [
          {
            "name": "Output the product types",
            "description": "",
            "syntax": "",
            "path": "/",
            "raw_liquid": "{% for type in shop.types %}\n  {{- type | link_to_type }}\n{% endfor %}",
            "parameter": false,
            "display_type": "text",
            "show_data_tab": true
          }
        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "string"
          }
        ],
        "summary": "All of the product types in the store.",
        "name": "types"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The number of products in the store.",
        "name": "products_count"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The number of collections in the store.",
        "name": "collections_count"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the store accepts gift cards. Returns `false` if not.",
        "name": "accepts_gift_cards"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "brand",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [brand assets](https://help.shopify.com/manual/promoting-marketing/managing-brand-assets) for the store.",
        "name": "brand"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "Metaobjects can only be accessed by specifying their type and handle. For more information, refer to [Access metaobjects individually](/docs/api/liquid/objects#metaobject-access-metaobjects-individually).\n\nMetaobjects are created in the [Content](https://www.shopify.com/admin/content) page of the Shopify admin.",
        "examples": [

        ],
        "return_type": [

        ],
        "summary": "All of the [metaobjects](/docs/api/liquid/objects/metaobject) of the store.",
        "name": "metaobjects"
      }
    ],
    "summary": "Information about the store, such as the store address, the total number of products, and various settings.",
    "name": "shop",
    "examples": [

    ],
    "json_data": {
      "path": "/",
      "handle": "shop",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "localization",
          "property": "available_languages"
        },
        {
          "object": "localization",
          "property": "language"
        },
        {
          "object": "request",
          "property": "locale"
        },
        {
          "object": "shop",
          "property": "published_locales"
        },
        {
          "object": "shop",
          "property": "locale"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "To learn how to offer localization options in your theme, refer to [Support multiple currencies and languages](/themes/internationalization/multiple-currencies-languages).",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The name of the locale in the store's primary locale.",
        "name": "name"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The name of the locale in the locale itself.",
        "name": "endonym_name"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ISO code of the locale in [IETF language tag format](https://en.wikipedia.org/wiki/IETF_language_tag).",
        "name": "iso_code"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the locale is the store's primary locale. Returns `false` if not.",
        "name": "primary"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The relative root URL of the locale.",
        "name": "root_url"
      }
    ],
    "summary": "A language in a store.",
    "name": "shop_locale",
    "examples": [

    ],
    "json_data": {
      "path": "/",
      "handle": "shop.published_locales[0]",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "shop",
          "property": "policies"
        },
        {
          "object": "shop",
          "property": "refund_policy"
        },
        {
          "object": "shop",
          "property": "shipping_policy"
        },
        {
          "object": "shop",
          "property": "privacy_policy"
        },
        {
          "object": "shop",
          "property": "terms_of_service"
        },
        {
          "object": "shop",
          "property": "subscription_policy"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ID of the policy.",
        "name": "id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The content of the policy.",
        "name": "body"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The relative URL of the policy.",
        "name": "url"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The title of the policy.",
        "name": "title"
      }
    ],
    "summary": "A [store policy](https://help.shopify.com/manual/checkout-settings/refund-privacy-tos), such as a privacy or return policy.",
    "name": "policy",
    "examples": [

    ],
    "json_data": {
      "path": "/",
      "handle": "shop.policies[0]",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "variant",
          "property": "store_availabilities"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "If a location doesn't stock a variant, then there won't be a `store_availability` for that variant and location.\n\n&gt; Note:\n&gt; The `store_availability` object is defined only if one or more locations has [local pickup](https://help.shopify.com/manual/shipping/setting-up-and-managing-your-shipping/local-methods/local-pickup)\n&gt; enabled.",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the variant has available inventory at the location. Returns `false` if not.",
        "name": "available"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the location has pickup enabled. Returns `false` if not.",
        "name": "pick_up_enabled"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; This value can be configured in the Shopify admin. To learn more, visit the [Shopify Help Center](https://help.shopify.com/en/manual/sell-in-person/shopify-pos/order-management/local-pickup-for-online-orders#manage-preferences-for-a-local-pickup-location).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The amount of time that it takes for pickup orders to be ready at the location.",
        "name": "pick_up_time"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "location",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The location that the variant is stocked at.",
        "name": "location"
      }
    ],
    "summary": "A variant's inventory information for a physical store location.",
    "name": "store_availability",
    "examples": [

    ],
    "json_data": {
      "path": "/products/health-potion?variant=39897499729985",
      "handle": "product.selected_variant.store_availabilities[0]",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "checkout",
          "property": "tax_lines"
        },
        {
          "object": "order",
          "property": "tax_lines"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The title of the tax.",
        "name": "title"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted price.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The tax amount in the currency's subunit.",
        "name": "price"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The decimal value of the tax rate.",
        "name": "rate"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The decimal value of the tax rate, as a percentage.",
        "name": "rate_percentage"
      }
    ],
    "summary": "Information about a tax line of a checkout or order.",
    "name": "tax_line",
    "examples": [

    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": "{\"price\":1901,\"rate\":0.05,\"rate_percentage\":5.0,\"title\":\"GST\"}"
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": true,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": true,
    "deprecation_reason": "Deprecated because the values of this object's properties are subject to change, so can't be relied on within the theme.\n\nIf you want to link to the theme editor for the published theme, then you can use the URL path `/admin/themes/current/editor`.\n\nWhile this object is deprecated in Liquid and shouldn't be used, you can still access it through the [REST Admin API](/api/admin-rest/current/resources/theme).",
    "description": "",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ID of the theme.",
        "name": "id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The name of the theme.",
        "name": "name"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "main",
            "description": "The theme is published. Customers see it when they visit the online store.",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "unpublished",
            "description": "The theme is unpublished. Customers can't see it.",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "demo",
            "description": "The theme is installed on the store as a demo. The theme can't be published until the merchant buys the full version.",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "development",
            "description": "The theme is used for development. The theme can't be published, and is temporary.",
            "array_value": ""
          }
        ],
        "summary": "The role of the theme.",
        "name": "role"
      }
    ],
    "summary": "Information about the current theme.",
    "name": "theme",
    "examples": [

    ],
    "json_data": {
      "path": "/",
      "handle": "theme",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": true,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "&gt; Tip:\n&gt; To learn about the available setting types, refer to [Input settings](/themes/architecture/settings/input-settings).",
    "properties": [

    ],
    "summary": "Allows you to access all of the theme's settings from the [`settings_schema.json` file](/themes/architecture/config/settings-schema-json).",
    "name": "settings",
    "examples": [
      {
        "name": "Reference a setting value",
        "description": "",
        "syntax": "",
        "path": "/",
        "raw_liquid": "{% if settings.favicon != blank %}\n  &lt;link rel=\"icon\" type=\"image/png\" href=\"{{ settings.favicon | image_url: width: 32, height: 32 }}\"&gt;\n{% endif %}",
        "parameter": false,
        "display_type": "text",
        "show_data_tab": true
      }
    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": true,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "404",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "article",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "blog",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "cart",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "collection",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "list-collections",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "customers/account",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "customers/activate_account",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "customers/addresses",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "customers/login",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "customers/order",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "customers/register",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "customers/reset_password",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "gift_card",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "index",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "page",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "password",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "product",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "search",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The name of the template's [type](/docs/themes/architecture/templates#template-types).",
        "name": "name"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "Returns `nil` if the default template is being used.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The custom name of an [alternate template](/themes/architecture/templates#alternate-templates).",
        "name": "suffix"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "Returns `nil` if the template's parent directory is `/templates`.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The name of the template's parent directory.",
        "name": "directory"
      }
    ],
    "summary": "Information about the current [template](/docs/themes/architecture/templates).",
    "name": "template",
    "examples": [

    ],
    "json_data": {
      "path": "/products/health-potion",
      "handle": "template",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "checkout",
          "property": "transactions"
        },
        {
          "object": "order",
          "property": "transactions"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ID of the transaction.",
        "name": "id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The name of the transaction.",
        "name": "name"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "success",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "pending",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "failure",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "error",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The status of the transaction.",
        "name": "status"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; Use the [`date` filter](/docs/api/liquid/filters/date) to format the timestamp.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "A timestamp of when the transaction was created.",
        "name": "created_at"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "This includes things like whether the payment was a test, or an authorization code if there was one.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Information from the payment provider about the payment receipt.",
        "name": "receipt"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "authorization",
            "description": "The reserving of money that the customer has agreed to pay.",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "capture",
            "description": "The transfer of the money that was reserved during the `authorization` step.",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "sale",
            "description": "A combination of `authorization` and `capture` in one step.",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "void",
            "description": "The cancellation of a pending `authorization` or `capture`.",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "refund",
            "description": "The partial, or full, refund of captured funds.",
            "array_value": ""
          }
        ],
        "summary": "The type of transaction.",
        "name": "kind"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [handleized](/docs/api/liquid/basics#modifying-handles) name of the payment provider used for the transaction.",
        "name": "gateway"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The status of the transaction, translated based on the current locale.",
        "name": "status_label"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "transaction_payment_details",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The transaction payment details.",
        "name": "payment_details"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The amount is in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted amount.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The amount of the transaction in the currency's subunit.",
        "name": "amount"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The name of the payment provider used for the transaction.",
        "name": "gateway_display_name"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Whether the transaction is pending, and whether additional customer info is required to process the payment.",
        "name": "show_buyer_pending_payment_instructions?"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "A notice that contains instructions for the customer on how to complete their payment.\nThe messages are specific to the payment method used.",
        "name": "buyer_pending_payment_notice"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "pending_payment_instruction_input"
          }
        ],
        "summary": "A list of `pending_payment_instruction_input` header-value pairs, with payment method-specific details.\nThe customer can use these details to complete their purchase offline.\n\nIf the payment method doesn’t support pending payment instructions, then an empty array is returned.\n\n| Supported payment method | Expected Values |\n| --- | ----------- |\n| ShopifyPayments - Multibanco | [{header=\"Entity\", value=\"12345\"}, {header=\"Reference\", value=\"999999999\"}] |",
        "name": "buyer_pending_payment_instructions"
      }
    ],
    "summary": "A transaction associated with a checkout or order.",
    "name": "transaction",
    "examples": [

    ],
    "json_data": {
      "path": "/",
      "handle": "customer.orders[1].transactions[0]",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "line_item",
          "property": "unit_price_measurement"
        },
        {
          "object": "variant",
          "property": "unit_price_measurement"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "&gt; Note:\n&gt; Unit prices are available only to stores located in Germany and France.",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "volume",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "weight",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "dimension",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The type of unit measurement.",
        "name": "measured_type"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The quantity of the unit.",
        "name": "quantity_value"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The unit of measurement used to measure the [`quantity_value`](/docs/api/liquid/objects/unit_price_measurement#unit_price_measurement-quantity_value).",
        "name": "quantity_unit"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The quantity of the unit for the base unit price.",
        "name": "reference_value"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The unit of measurement used to measure the [`reference_value`](/docs/api/liquid/objects/unit_price_measurement#unit_price_measurement-reference_value).",
        "name": "reference_unit"
      }
    ],
    "summary": "Information about how units of a product variant are measured. It's used to calculate\n[unit prices](https://help.shopify.com/manual/intro-to-shopify/initial-setup/sell-in-france/price-per-unit#add-unit-prices-to-your-product).",
    "name": "unit_price_measurement",
    "examples": [

    ],
    "json_data": {
      "path": "/",
      "handle": "customer.orders[1].line_items[0].unit_price_measurement",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "article",
          "property": "user"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "&gt; Tip:\n&gt; The information returned by the `user` object can be edited on the [**Account** page](https://www.shopify.com/admin/settings/account)\n&gt; of the Shopify admin.",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the author is the account owner of the store. Returns `false` if not.",
        "name": "account_owner"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If no bio is specified, then `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The bio associated with the author's account.",
        "name": "bio"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The email associated with the author's account.",
        "name": "email"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The first name associated with the author's account.",
        "name": "first_name"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If no personal website is specified, then `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The URL for the personal website associated with the author's account.",
        "name": "homepage"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If no image is specified, then `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "image",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The image associated with the author's account.",
        "name": "image"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The last name associated with the author's account.",
        "name": "last_name"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The first and last name associated with the author's account.",
        "name": "name"
      }
    ],
    "summary": "The author of a blog article.",
    "name": "user",
    "examples": [

    ],
    "json_data": {
      "path": "/blogs/potion-notions/how-to-tell-if-you-have-run-out-of-invisibility-potion",
      "handle": "article.user",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "metafield",
          "property": "value"
        },
        {
          "object": "product",
          "property": "media"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "&gt; Tip:\n&gt; Use the [`video_tag` filter](/docs/api/liquid/filters/video_tag) to output the video in an HTML `&lt;video&gt;` tag.",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "video_source"
          }
        ],
        "summary": "The source files for the video.",
        "name": "sources"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The duration of the video in milliseconds.",
        "name": "duration"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The aspect ratio of the video as a decimal.",
        "name": "aspect_ratio"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The alt text of the video.",
        "name": "alt"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ID of the video.",
        "name": "id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [
          {
            "name": "Filter for media of a specific type",
            "description": "You can use the `media_type` property with the [`where` filter](/docs/api/liquid/filters/where) to filter the [`product.media` array](/docs/api/liquid/objects/product#product-media) for all media of a desired type.\n",
            "syntax": "",
            "path": "/products/potion-beats",
            "raw_liquid": "{% assign videos = product.media | where: 'media_type', 'video' %}\n\n{% for video in videos %}\n  {{- video | video_tag }}\n{% endfor %}",
            "parameter": false,
            "display_type": "text",
            "show_data_tab": true
          }
        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The media type of the model. Always returns `video`.",
        "name": "media_type"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The position of the video in the [`product.media`](/docs/api/liquid/objects/product#product-media) array.",
        "name": "position"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "image",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "A preview image for the video.",
        "name": "preview_image"
      }
    ],
    "summary": "Information about a video uploaded as [product media](/docs/api/liquid/objects/product-media) or a [`file_reference` metafield](/apps/metafields/types).",
    "name": "video",
    "examples": [

    ],
    "json_data": {
      "path": "/products/potion-beats",
      "handle": "product.media[1]",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "video",
          "property": "sources"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The width of the video source file.",
        "name": "width"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Note:\n&gt; When mp4 videos are uploaded, Shopify generates an m3u8 file as an additional video source. An m3u8 file enables video\n&gt; players to leverage HTTP live streaming (HLS), resulting in an optimized video experience based on the user's internet\n&gt; connection.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "mov",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "mp4",
            "description": "",
            "array_value": ""
          },
          {
            "type": "string",
            "name": "m3u8",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The format of the video source file.",
        "name": "format"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The height of the video source file.",
        "name": "height"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the video source file.",
        "name": "mime_type"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [CDN URL](/themes/best-practices/performance/platform#shopify-cdn) of the video source file.",
        "name": "url"
      }
    ],
    "summary": "Information about the source files for a video.",
    "name": "video_source",
    "examples": [

    ],
    "json_data": {
      "path": "/products/potion-beats",
      "handle": "product.media[1].sources[1]",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": true,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "Use `additional_checkout_buttons` to check whether these payment providers exist, and\n[`content_for_additional_checkout_buttons`](/docs/api/liquid/objects/content_for_additional_checkout_buttons)\nto show the associated checkout buttons. To learn more about how to use these objects, refer to\n[Accelerated checkout](/themes/pricing-payments/accelerated-checkout).\n\n```liquid\n{% if additional_checkout_buttons %}\n  {{ content_for_additional_checkout_buttons }}\n{% endif %}\n```",
    "properties": [

    ],
    "summary": "Returns `true` if a store has any payment providers with offsite checkouts, such as PayPal Express Checkout.",
    "name": "additional_checkout_buttons",
    "examples": [

    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": ""
    },
    "return_type": [
      {
        "type": "boolean",
        "name": "",
        "description": "",
        "array_value": ""
      }
    ]
  },
  {
    "access": {
      "global": true,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "An attribute called `data-provinces` is set for each `&lt;option&gt;`, and contains a JSON-encoded array of the\ncountry or region's subregions. If a country doesn't have any subregions, then an empty array is set for\nits `data-provinces` attribute.\n\n&gt; Tip:\n&gt; To return only the countries and regions included in the store's shipping zones, use the [`country_option_tags` object](/docs/api/liquid/objects/country_option_tags).",
    "properties": [

    ],
    "summary": "Creates an `&lt;option&gt;` tag for each country.",
    "name": "all_country_option_tags",
    "examples": [
      {
        "name": "",
        "description": "You can wrap the `all_country_option_tags` object in `&lt;select&gt;` tags to build a country option selector.\n\n```liquid\n&lt;select name=\"country\"&gt;\n  {{ all_country_option_tags }}\n&lt;/select&gt;\n```\n",
        "syntax": "",
        "path": "/",
        "raw_liquid": "",
        "parameter": false,
        "display_type": "text",
        "show_data_tab": true
      }
    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": ""
    },
    "return_type": [
      {
        "type": "string",
        "name": "",
        "description": "",
        "array_value": ""
      }
    ]
  },
  {
    "access": {
      "global": true,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "To learn about canonical URLs, refer to [Google's documentation](https://support.google.com/webmasters/answer/139066?hl=en).",
    "properties": [

    ],
    "summary": "The canonical URL for the current page.",
    "name": "canonical_url",
    "examples": [

    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": ""
    },
    "return_type": [
      {
        "type": "string",
        "name": "",
        "description": "",
        "array_value": ""
      }
    ]
  },
  {
    "access": {
      "global": false,
      "parents": [

      ],
      "template": [
        "checkout"
      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "&gt; Deprecated:\n&gt; &lt;p&gt;The &lt;code&gt;checkout&lt;/code&gt; object will be deprecated for the Information, Shipping, and Payment pages on August 13, 2024. Merchants who have customized these pages using &lt;code&gt;checkout.liquid&lt;/code&gt; to &lt;a href=\"https://help.shopify.com/manual/online-store/themes/theme-structure/extend/checkout-migration#migrate-to-checkout-extensibility\"&gt;upgrade to checkout extensibility&lt;/a&gt; before August 13, 2024.&lt;/p&gt;\n&gt; &lt;p&gt;Learn &lt;a href=\"/apps/checkout\"&gt;how to build checkout extensions&lt;/a&gt; that extend the functionality of Shopify checkout.&lt;/p&gt;\n\nYou can access the `checkout` object on the [order status page](https://help.shopify.com/manual/orders/status-tracking/customize-order-status).\n\nShopify Plus merchants can access the `checkout` object in the [`checkout.liquid` layout](/themes/architecture/layouts/checkout-liquid).",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "gift_card"
          }
        ],
        "summary": "The gift cards applied to the checkout.",
        "name": "applied_gift_cards"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "Shopify Plus merchants that have access to `checkout.liquid` can [capture attributes at checkout](/themes/architecture/layouts/checkout-liquid#capture-checkout-attributes).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "untyped",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Additional attributes entered by the customer with the [cart](/docs/api/liquid/objects/cart#cart-attributes).",
        "name": "attributes"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "address",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The billing address entered at checkout.",
        "name": "billing_address"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the customer checks the email marketing subscription checkbox. Returns `false` if not.",
        "name": "buyer_accepts_marketing"
      },
      {
        "deprecated": true,
        "deprecation_reason": "Deprecated because `false` is always returned.",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the checkout has been cancelled. Returns `false` if not.",
        "name": "cancelled"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "discount_application"
          }
        ],
        "summary": "The cart-specific discount applications for the checkout.",
        "name": "cart_level_discount_applications"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The [ISO code](https://www.iso.org/iso-4217-currency-codes.html) of the currency of the checkout.",
        "name": "currency"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "customer",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The customer associated with the checkout.\n&gt; Note:\n&gt; The [`customer` object](/docs/api/liquid/objects/customer) is directly accessible globally when a customer is logged in to their account.",
        "name": "customer"
      },
      {
        "deprecated": true,
        "deprecation_reason": "Deprecated because an unsaved discount doesn't exist on the [Order status page](https://help.shopify.com/manual/orders/status-tracking).",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "discount",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "A discount applied to the checkout without being saved.",
        "name": "discount"
      },
      {
        "deprecated": true,
        "deprecation_reason": "Deprecated because not all discount types and details are captured.\n\nThe `checkout.discounts` property has been replaced by [`checkout.discount_applications`](/docs/api/liquid/objects/checkout#checkout-discount_applications).",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "discount"
          }
        ],
        "summary": "The discounts applied to the checkout.",
        "name": "discounts"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "discount_application"
          }
        ],
        "summary": "The discount applications for the checkout.",
        "name": "discount_applications"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted amount.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "discount_application"
          }
        ],
        "summary": "The total amount of the discounts applied to the checkout in the currency's subunit.",
        "name": "discounts_amount"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted amount.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "discount_application"
          }
        ],
        "summary": "The total amount of the discounts applied to the checkout in the currency's subunit, as a negative value.",
        "name": "discounts_savings"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The email associated with the checkout.",
        "name": "email"
      },
      {
        "deprecated": true,
        "deprecation_reason": "Deprecated because `nil` is always returned.",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The financial status of the checkout.",
        "name": "financial_status"
      },
      {
        "deprecated": true,
        "deprecation_reason": "Deprecated because `nil` is always returned.",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "A timestamp for the fulfullment of the checkout.",
        "name": "fulfilled_at"
      },
      {
        "deprecated": true,
        "deprecation_reason": "Deprecated because the array is always empty.",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "line_item"
          }
        ],
        "summary": "The fulfilled line items from the checkout.",
        "name": "fulfilled_line_items"
      },
      {
        "deprecated": true,
        "deprecation_reason": "Deprecated because `unfulfilled` is always returned.",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The fulfillment status of the checkout.",
        "name": "fulfillment_status"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted amount.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The amount of the checkout price paid in gift cards.",
        "name": "gift_cards_amount"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ID of the checkout.",
        "name": "id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "line_item"
          }
        ],
        "summary": "The line items of the checkout.",
        "name": "line_items"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted amount.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The sum of the prices of all of the line items of the checkout in the currency's subunit, after any line item discounts\nhave been applied.",
        "name": "line_items_subtotal_price"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "This value is the same as [`checkout.id`](/docs/api/liquid/objects/checkout#checkout-id) with a `#` prepended to it.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The name of the checkout.",
        "name": "name"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Additional information entered by the customer with the [cart](/docs/api/liquid/objects/cart#cart-note).",
        "name": "note"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "Depending on the payment provider, the order might not have been created when the [Thank You page](https://help.shopify.com/en/manual/orders/status-tracking)\nis first viewed. In this case, `nil` is returned.\n&gt; Note:\n&gt; The `order` object isn't available on the Thank You page.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "order",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The order created by the checkout.",
        "name": "order"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is the same as [`order.id`](/docs/api/liquid/objects/order#order-id).\n\nDepending on the payment provider, the order might not have been created when the [Order status page](https://help.shopify.com/en/manual/orders/status-tracking)\nis first viewed. In this case, `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ID of the order created by the checkout.",
        "name": "order_id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is the same as [`order.name`](/docs/api/liquid/objects/order#order-name).\n\nDepending on the payment provider, the order might not have been created when the [Order status page](https://help.shopify.com/en/manual/orders/status-tracking)\nis first viewed. In this case, `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The name of the order created by the checkout.",
        "name": "order_name"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is the same as [`order.order_number`](/docs/api/liquid/objects/order#order-order_number).\n\nDepending on the payment provider, the order might not have been created when the [Order status page](https://help.shopify.com/en/manual/orders/status-tracking)\nis first viewed. In this case, `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "An integer representation of the name of the order created by the checkout.",
        "name": "order_number"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if any of the line items of the checkout require shipping. Returns `false` if not.",
        "name": "requires_shipping"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "address",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The shipping address of the checkout.",
        "name": "shipping_address"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "shipping_method",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The shipping method of the checkout.",
        "name": "shipping_method"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted amount.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The shipping price of the checkout in the currency's subunit.",
        "name": "shipping_price"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "tax_line"
          }
        ],
        "summary": "The tax lines for the checkout.",
        "name": "tax_lines"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted amount.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The total tax amount of the checkout in the currency's subunit.",
        "name": "tax_price"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The value is output in the customer's local (presentment) currency.\n\n&gt; Tip:\n&gt; Use [money filters](/docs/api/liquid/filters/money-filters) to output a formatted amount.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The total price of the checkout in the currency's subunit.",
        "name": "total_price"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "transaction"
          }
        ],
        "summary": "The transactions of the checkout.",
        "name": "transactions"
      },
      {
        "deprecated": true,
        "deprecation_reason": "Deprecated because the array is always empty.",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "line_item"
          }
        ],
        "summary": "The unavailable line items of the checkout.",
        "name": "unavailable_line_items"
      },
      {
        "deprecated": true,
        "deprecation_reason": "Deprecated because the array is always the same as [`checkout.line_items`](/docs/api/liquid/objects/checkout#checkout-line_items).",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "line_item"
          }
        ],
        "summary": "The unfulfilled line items of the checkout.",
        "name": "unfulfilled_line_items"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The number of items in the checkout.",
        "name": "item_count"
      }
    ],
    "summary": "A customer's checkout.",
    "name": "checkout",
    "examples": [

    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": "{\"applied_gift_cards\":[],\"attributes\":{},\"billing_address\":{},\"buyer_accepts_marketing\":false,\"cart_level_discount_applications\":[],\"currency\":\"CAD\",\"customer\":{},\"discount_applications\":[],\"discounts_amount\":4224,\"discounts_savings\":-4224,\"email\":\"cornelius.potionmaker@gmail.com\",\"gift_cards_amount\":0,\"id\":29944051400769,\"line_items\":[],\"line_items_subtotal_price\":42249,\"name\":\"#29944051400769\",\"note\":null,\"order\":null,\"order_id\":null,\"order_name\":\"#29944051400769\",\"order_number\":\"#29944051400769\",\"requires_shipping\":true,\"shipping_address\":{},\"shipping_method\":{},\"shipping_price\":0,\"tax_lines\":[],\"tax_price\":0,\"total_price\":38025,\"transactions\":[]}"
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "article",
          "property": "comments"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The full name of the author of the comment.",
        "name": "author"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The content of the comment.",
        "name": "content"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; Use the [`date` filter](/docs/api/liquid/filters/date) to format the timestamp.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "A timestamp for when the comment was created.",
        "name": "created_at"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The email of he author of the comment.",
        "name": "email"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The ID of the comment.",
        "name": "id"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "Outside of the Liquid context, the status of a comment can vary based on spam detection and whether blog comments are\nmoderated. However, only comments with a status of `published` are included in the [`article.comments` array](/docs/api/liquid/objects/article#article-comments).\n\n&gt; Tip:\n&gt; To learn more about blog comments, visit the [Shopify Help Center](https://help.shopify.com/manual/online-store/blogs/managing-comments).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The status of the comment. Always returns `published`.",
        "name": "status"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "&gt; Tip:\n&gt; Use the [`date` filter](/docs/api/liquid/filters/date) to format the timestamp.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "A timestamp for when the status of the comment was last updated.",
        "name": "updated_at"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The relative URL of the article that the comment is associated with, with [`comment.id`](/docs/api/liquid/objects/comment#comment-id)\nappended.",
        "name": "url"
      }
    ],
    "summary": "An article comment.",
    "name": "comment",
    "examples": [

    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": "{\"author\":\"Cornelius\",\"content\":\"Wow, this is going to save me a fortune in invisibility potion!\",\"created_at\":\"2022-06-05 19:33:57 -0400\",\"email\":\"cornelius.potionmaker@gmail.com\",\"id\":129089273921,\"status\":\"published\",\"updated_at\":\"2022-06-05 19:33:57 -0400\",\"url\":\"/blogs/potion-notions/how-to-tell-if-you-have-run-out-of-invisibility-potion#129089273921\"}"
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": true,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "Use [`additional_checkout_buttons`](/docs/api/liquid/objects/additional_checkout_buttons)\nto check whether these payment providers exist, and `content_for_additional_checkout_buttons`\nto show the associated checkout buttons. To learn more about how to use these objects, refer to\n[Accelerated checkout](/themes/pricing-payments/accelerated-checkout).\n\n```liquid\n{% if additional_checkout_buttons %}\n  {{ content_for_additional_checkout_buttons }}\n{% endif %}\n```",
    "properties": [

    ],
    "summary": "Returns checkout buttons for any active payment providers with offsite checkouts.",
    "name": "content_for_additional_checkout_buttons",
    "examples": [

    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": ""
    },
    "return_type": [
      {
        "type": "string",
        "name": "",
        "description": "",
        "array_value": ""
      }
    ]
  },
  {
    "access": {
      "global": true,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "If you use a [Liquid index template](/themes/architecture/templates/index-template) (`templates/index.liquid`), then you must include `{{ content_for_index }}` in the template. This object can't be used in JSON index templates.",
    "properties": [

    ],
    "summary": "Dynamically returns the content of [sections](/themes/architecture/sections) to be rendered on the home page.",
    "name": "content_for_index",
    "examples": [

    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": ""
    },
    "return_type": [
      {
        "type": "string",
        "name": "",
        "description": "",
        "array_value": ""
      }
    ]
  },
  {
    "access": {
      "global": true,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "Include the `content_for_layout` object in your [layout files](/themes/architecture/layouts) between the `&lt;body&gt;` and\n`&lt;/body&gt;` HTML tags.\n\n&gt; Note:\n&gt; The `content_for_layout` object is required in `theme.liquid`.",
    "properties": [

    ],
    "summary": "Dynamically returns content based on the current [template](/themes/architecture/templates).",
    "name": "content_for_layout",
    "examples": [

    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": ""
    },
    "return_type": [
      {
        "type": "string",
        "name": "",
        "description": "",
        "array_value": ""
      }
    ]
  },
  {
    "access": {
      "global": true,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "An attribute called `data-provinces` is set for each `&lt;option&gt;`, and contains a JSON-encoded array of the\ncountry or region's subregions. If a country doesn't have any subregions, then an empty array is set for its\n`data-provinces` attribute.\n\n&gt; Tip:\n&gt; To return all countries and regions included in the store's shipping zones, use [`all_country_option_tags`](/docs/api/liquid/objects/all_country_option_tags).",
    "properties": [

    ],
    "summary": "Creates an `&lt;option&gt;` tag for each country and region that's included in a shipping zone on the [Shipping](https://www.shopify.com/admin/settings/shipping) page of the Shopify admin.",
    "name": "country_option_tags",
    "examples": [
      {
        "name": "",
        "description": "You can wrap the `country_option_tags` object in `&lt;select&gt;` tags to build a country option selector.",
        "syntax": "",
        "path": "/",
        "raw_liquid": "&lt;select name=\"country\"&gt;\n  {{ country_option_tags }}\n&lt;/select&gt;",
        "parameter": false,
        "display_type": "text",
        "show_data_tab": true
      }
    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": ""
    },
    "return_type": [
      {
        "type": "string",
        "name": "",
        "description": "",
        "array_value": ""
      }
    ]
  },
  {
    "access": {
      "global": true,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "The `current_page` object has a value of 1 for non-paginated resources.",
    "properties": [

    ],
    "summary": "The current page number.",
    "name": "current_page",
    "examples": [
      {
        "name": "",
        "description": "",
        "syntax": "",
        "path": "/collections/ingredients?page=2",
        "raw_liquid": "{{ page_title }}{% unless current_page == 1 %} - Page {{ current_page }}{% endunless %}",
        "parameter": false,
        "display_type": "text",
        "show_data_tab": true
      }
    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": ""
    },
    "return_type": [
      {
        "type": "number",
        "name": "",
        "description": "",
        "array_value": ""
      }
    ]
  },
  {
    "access": {
      "global": false,
      "parents": [

      ],
      "template": [
        "blog",
        "collection"
      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "You can [add tags](https://help.shopify.com/en/manual/shopify-admin/productivity-tools/using-tags) to articles and\nproducts. Article tags can be used to [filter a blog page](/themes/architecture/templates/blog#filter-articles-by-tag)\nto show only articles with specific tags. Similarly, product tags can be used to [filter a collection page](/themes/navigation-search/filtering/tag-filtering)\nto show only products with specific tags.",
    "properties": [

    ],
    "summary": "The currently applied tags.",
    "name": "current_tags",
    "examples": [

    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": ""
    },
    "return_type": [
      {
        "type": "array",
        "name": "",
        "description": "",
        "array_value": "string"
      }
    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "form",
          "property": "errors"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "The following table outlines the strings that can be returned and the reason that they would be:\n\n| Form property name | Return reason |\n| --- | --- |\n| `author` | There were issues with required name fields. |\n| `body` | There were issues with required text content fields. |\n| `email` | There were issues with required email fields. |\n| `form` | There were general issues with the form. |\n| `password` | There were issues with required password fields. |",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "You can access a specific message in the array by using a specific error from the `form_errors` array as a key.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "string"
          }
        ],
        "summary": "The translated error messages for each value in the `form_errors` array.",
        "name": "messages"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "You can access a specific field in the array by using a specific error from the `form_errors` array as a key.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "string"
          }
        ],
        "summary": "The translated names for each value in the `form_errors` array.",
        "name": "translated_fields"
      }
    ],
    "summary": "The error category strings for errors from a form created by a [`form` tag](/docs/api/liquid/tags/form).",
    "name": "form_errors",
    "examples": [
      {
        "name": "Output form errors",
        "description": "You can output the name of the field related to the error, and the error message, by using the error as a key to access the `translated_fields` and `messages` properties.\n\n```liquid\n&lt;ul&gt;\n  {% for error in form.errors %}\n    &lt;li&gt;\n      {% if error == 'form' %}\n        {{ form.errors.messages[error] }}\n      {% else %}\n        {{ form.errors.translated_fields[error] }} - {{ form.errors.messages[error] }}\n      {% endif %}\n    &lt;/li&gt;\n  {% endfor %}\n&lt;/ul&gt;\n```\n",
        "syntax": "",
        "path": "/",
        "raw_liquid": "",
        "parameter": false,
        "display_type": "text",
        "show_data_tab": true
      }
    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": "{\"messages\":{},\"translated_fields\":{}}"
    },
    "return_type": [
      {
        "type": "array",
        "name": "",
        "description": "",
        "array_value": "string"
      }
    ]
  },
  {
    "access": {
      "global": true,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "The `handle` object will return a value only when the following templates are being viewed:\n\n- [article](/themes/architecture/templates/article)\n- [blog](/themes/architecture/templates/blog)\n- [collection](/themes/architecture/templates/collection)\n- [page](/themes/architecture/templates/page)\n- [product](/themes/architecture/templates/product)\n\nIf none of the above templates are being viewed, then `nil` is returned.",
    "properties": [

    ],
    "summary": "The [handle](/docs/api/liquid/basics#handles) of the resource associated with the current template.",
    "name": "handle",
    "examples": [

    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": ""
    },
    "return_type": [
      {
        "type": "string",
        "name": "",
        "description": "",
        "array_value": ""
      }
    ]
  },
  {
    "access": {
      "global": true,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "The `page_description` object can be used to provide a brief description of a page for search engine listings and social\nmedia previews.\n\nTo learn about where to edit the meta description for a page, visit the [Shopify Help Center](https://help.shopify.com/manual/promoting-marketing/seo/adding-keywords#edit-the-title-and-meta-description-for-a-page).",
    "properties": [

    ],
    "summary": "The meta description of the current page.",
    "name": "page_description",
    "examples": [

    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": ""
    },
    "return_type": [
      {
        "type": "string",
        "name": "",
        "description": "",
        "array_value": "",
        "denied_filters": [
          "escape",
          "escape_once",
          "url_escape",
          "url_param_escape"
        ]
      }
    ]
  },
  {
    "access": {
      "global": true,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "The resource's featured image for product and collection pages, and blog posts, is used. For all other pages, or pages where\nthere's no featured image, the [social sharing image](https://help.shopify.com/manual/online-store/images/showing-social-media-thumbnail-images?#setting-the-social-sharing-image-in-your-admin)\nis used.\n\n### Open Graph fallback tags\n\nThe `page_image` object can be used for creating [Open Graph](https://ogp.me/) `og:image` meta tags.\n\nIf a theme doesn't include `og:image` tags for a page, then Shopify automatically generates the following tags using the\n`page_image` object:\n\n- `og:image`\n- `og:image:secure_url`\n- `og:image:width`\n- `og:image:height`",
    "properties": [

    ],
    "summary": "An image to be shown in search engine listings and social media previews for the current page.",
    "name": "page_image",
    "examples": [

    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": ""
    },
    "return_type": [
      {
        "type": "image",
        "name": "",
        "description": "",
        "array_value": ""
      }
    ]
  },
  {
    "access": {
      "global": true,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "The `page_title` object can be used to specify the title of page for search engine listings and social media previews.\n\nTo learn about where to edit the title for a page, visit the [Shopify Help Center](https://help.shopify.com/manual/promoting-marketing/seo/adding-keywords#edit-the-title-and-meta-description-for-a-page).",
    "properties": [

    ],
    "summary": "The page title of the current page.",
    "name": "page_title",
    "examples": [

    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": ""
    },
    "return_type": [
      {
        "type": "string",
        "name": "",
        "description": "",
        "array_value": "",
        "denied_filters": [
          "escape",
          "escape_once",
          "url_escape",
          "url_param_escape"
        ]
      }
    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "paginate",
          "property": "parts"
        },
        {
          "object": "paginate",
          "property": "next"
        },
        {
          "object": "paginate",
          "property": "previous"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "boolean",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `true` if the part is a link. Returns `false` if not.",
        "name": "is_link"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The page number associated with the part.",
        "name": "title"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "It consists of the current page URL path with the pagination parameter for the current part appended.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The URL of the part.",
        "name": "url"
      }
    ],
    "summary": "A part in the navigation for pagination.",
    "name": "part",
    "examples": [
      {
        "name": "Create pagination navigation with `part`",
        "description": "You can create a pagination navigation by iterating over each `part` of a [`paginate` object](/docs/api/liquid/objects/paginate).\n",
        "syntax": "",
        "path": "/collections/all",
        "raw_liquid": "{% paginate collection.products by 5 -%}\n  {% for part in paginate.parts -%}\n    {% if part.is_link -%}\n      {{ part.title | link_to: part.url}}\n    {%- else -%}\n      &lt;span&gt;{{ part.title }}&lt;/span&gt;\n    {% endif %}\n  {%- endfor %}\n{%- endpaginate %}",
        "parameter": false,
        "display_type": "text",
        "show_data_tab": true
      }
    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": "{\"is_link\":true,\"title\":\"2\",\"url\":\"/collections/all?page=2\"}"
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "transaction",
          "property": "buyer_pending_payment_instructions"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The header of the payment instruction.\nThese are payment method-specific. Example: \"Entity\" and \"Reference\" for Multibanco",
        "name": "header"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Contains the corresponding values to the headers of the payment instruction.",
        "name": "value"
      }
    ],
    "summary": "Header-value pairs that make up the list of payment information specific to the payment method.\nThis information can be be used by the customer to complete the transaction offline.",
    "name": "pending_payment_instruction_input",
    "examples": [

    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": true,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [

    ],
    "summary": "Creates an HTML link element that links to a localied version of `shopify.com`, based on the locale of the store.",
    "name": "powered_by_link",
    "examples": [
      {
        "name": "",
        "description": "",
        "syntax": "",
        "path": "/",
        "raw_liquid": "{{ powered_by_link }}",
        "parameter": false,
        "display_type": "text",
        "show_data_tab": true
      }
    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "predictive_search",
          "property": "resources"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "You can check whether any resources of a specific type were returned using the [`size` filter](/docs/api/liquid/filters/size).\n\n```liquid\n{% if predictive_search.resources.articles.size &gt; 0 %}\n  {% for article in predictive_search.resources.articles %}\n    {{ article.title }}\n  {% endfor %}\n{% endif %}\n```",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "article"
          }
        ],
        "summary": "The articles associated with the query.",
        "name": "articles"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "collection"
          }
        ],
        "summary": "The collections associated with the query.",
        "name": "collections"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "page"
          }
        ],
        "summary": "The pages associated with the query.",
        "name": "pages"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "array",
            "name": "",
            "description": "",
            "array_value": "product"
          }
        ],
        "summary": "The products associated with the query.",
        "name": "products"
      }
    ],
    "summary": "Contains arrays of objects for each resource type that can be returned by a [predictive search query](/api/ajax/reference/predictive-search#get-locale-search-suggest).",
    "name": "predictive_search_resources",
    "examples": [

    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": "{\"articles\":[],\"collections\":[],\"pages\":[],\"products\":[]}"
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "variant",
          "property": "quantity_rule"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Minimum order quantity (default 1)",
        "name": "min"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If there is no maximum, then `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Maximum order quantity",
        "name": "max"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "number",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Order quantity increment (default 1)",
        "name": "increment"
      }
    ],
    "summary": "A variant order quantity rule (minimum, maximum, and increment). The default order variant quantity rule is `min=1,max=null,increment=1`.",
    "name": "quantity_rule",
    "examples": [
      {
        "name": "The variant order quantity rule",
        "description": "",
        "syntax": "",
        "path": "/products/health-potion",
        "raw_liquid": "{{ product.variants.first.quantity_rule }}",
        "parameter": false,
        "display_type": "text",
        "show_data_tab": true
      }
    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": "{\"min\":\"1\",\"max\":null,\"increment\":\"1\"}"
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": true,
      "parents": [

      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "There can be only one active script of each type. Currently, the only type accessible in Liquid is\n`cart_calculate_line_items`.\n\n&gt; Tip:\n&gt; To learn more about Shopify Scripts and the Script Editor, visit the [Shopify Help Center](https://help.shopify.com/manual/checkout-settings/script-editor).",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If no line item script is currently active, then `nil` is returned.",
        "examples": [
          {
            "name": "Advertise the currently active line item script",
            "description": "",
            "syntax": "",
            "path": "/",
            "raw_liquid": "{% if scripts.cart_calculate_line_items %}\n  &lt;p&gt;Don't miss our current sale: &lt;strong&gt;{{ scripts.cart_calculate_line_items.name }}&lt;/strong&gt;&lt;/p&gt;\n{% endif %}",
            "parameter": false,
            "display_type": "text",
            "show_data_tab": true
          }
        ],
        "return_type": [
          {
            "type": "script",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The active line item script.",
        "name": "cart_calculate_line_items"
      }
    ],
    "summary": "The active scripts, of each script type, on the store.",
    "name": "scripts",
    "examples": [

    ],
    "json_data": {
      "path": "/",
      "handle": "scripts",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "group",
          "property": "sitemap"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "The sitemap provides information about the pages and content on a site, and the relationships between them, which helps\ncrawlers crawl a site more efficiently.\n\n&gt; Tip:\n&gt; To learn more about sitemaps, refer to [Google's documentation](https://developers.google.com/search/docs/advanced/sitemaps/overview).\n\nThe `sitemap` object consists of a `Sitemap` directive, and a value of the URL that the sitemap is hosted at. For example:\n\n```\nSitemap: https://your-store.myshopify.com/sitemap.xml\n```\n\n&gt; Tip:\n&gt; You can [customize the `robots.txt` file](/themes/seo/robots-txt) with the [`robots.txt.liquid` template](/themes/architecture/templates/robots-txt-liquid).",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `Sitemap`.",
        "name": "directive"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The URL that the sitemap is hosted at.",
        "name": "value"
      }
    ],
    "summary": "The sitemap for a specific group in the [`robots.txt` file](/themes/architecture/templates/robots-txt-liquid).",
    "name": "sitemap",
    "examples": [

    ],
    "json_data": {
      "path": "/robots.txt",
      "handle": "robots.default_groups[0].sitemap",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "collection",
          "property": "sort_options"
        },
        {
          "object": "search",
          "property": "sort_options"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "The name can be edited by merchants in the [language editor](https://help.shopify.com/manual/online-store/themes/customizing-themes/language/change-wording).",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The customer-facing name of the sort option.",
        "name": "name"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "This value is used when assigning the [`collection.sort_by`](/docs/api/liquid/objects/collection#collection-sort_by) and\n[`search.sort_by`](/docs/api/liquid/objects/search#search-sort_by) parameters.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The value of the sort option.",
        "name": "value"
      }
    ],
    "summary": "A sort option for a collection or search results page.",
    "name": "sort_option",
    "examples": [

    ],
    "json_data": {
      "path": "",
      "handle": "",
      "data_from_file": "{\"name\":\"Alphabetically, A-Z\",\"value\":\"title-ascending\"}"
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "transaction",
          "property": "payment_details"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The name of the company that issued the credit card used for the transaction.",
        "name": "credit_card_company"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The last four digits of the credit card number of the credit card used for the transaction.",
        "name": "credit_card_last_four_digits"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "All but the last four digits are redacted.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The credit card number of the credit card used for the transaction.",
        "name": "credit_card_number"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "If no gift card was used, then `nil` is returned.",
        "examples": [

        ],
        "return_type": [
          {
            "type": "gift_card",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The gift card used for the transaction.",
        "name": "gift_card"
      }
    ],
    "summary": "Information about the payment methods used for a transaction.",
    "name": "transaction_payment_details",
    "examples": [

    ],
    "json_data": {
      "path": "/",
      "handle": "customer.orders[4].transactions[0].payment_details",
      "data_from_file": ""
    },
    "return_type": [

    ]
  },
  {
    "access": {
      "global": false,
      "parents": [
        {
          "object": "group",
          "property": "user_agent"
        }
      ],
      "template": [

      ]
    },
    "deprecated": false,
    "deprecation_reason": "",
    "description": "The `user_agent` object consists of a `User-agent` directive, and a value of the name of the user-agent. For example:\n\n```\nUser-agent: *\n```\n\n&gt; Tip:\n&gt; You can [customize the `robots.txt` file](/themes/seo/robots-txt) with the [`robots.txt.liquid` template](/themes/architecture/templates/robots-txt-liquid).",
    "properties": [
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "Returns `User-agent`.",
        "name": "directive"
      },
      {
        "deprecated": false,
        "deprecation_reason": "",
        "description": "",
        "examples": [

        ],
        "return_type": [
          {
            "type": "string",
            "name": "",
            "description": "",
            "array_value": ""
          }
        ],
        "summary": "The name of the user-agent.",
        "name": "value"
      }
    ],
    "summary": "The user-agent, which is the name of the crawler, for a specific group in the [`robots.txt` file](/themes/architecture/templates/robots-txt-liquid).",
    "name": "user_agent",
    "examples": [

    ],
    "json_data": {
      "path": "/robots.txt",
      "handle": "robots.default_groups[0].user_agent",
      "data_from_file": ""
    },
    "return_type": [

    ]
  }
]